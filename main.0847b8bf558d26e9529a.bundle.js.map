{"version":3,"file":"main.0847b8bf558d26e9529a.bundle.js","sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./node_modules/nested-object-assign/lib sync ^\\.\\/.*$","webpack:///./src/main/webapp sync \\.stories\\.(j|t)sx","webpack:///src/main/webapp/about.js","webpack:///src/main/webapp/about.stories.js","webpack:///src/main/webapp/basic-search-helper.js","webpack:///src/main/webapp/basic-search.js","webpack:///src/main/webapp/basic-search.stories.js","webpack:///src/main/webapp/distance-utils.js","webpack:///src/main/webapp/gen-results.js","webpack:///src/main/webapp/icons/map-pin.js","webpack:///src/main/webapp/input/outlined-select.js","webpack:///src/main/webapp/inspector/index.js","webpack:///src/main/webapp/inspector/inspector.js","webpack:///src/main/webapp/inspector/inspector.stories.js","webpack:///src/main/webapp/line.js","webpack:///src/main/webapp/location.js","webpack:///src/main/webapp/location.stories.js","webpack:///src/main/webapp/map-style.js","webpack:///src/main/webapp/point-radius.js","webpack:///src/main/webapp/polygon.js","webpack:///./src/main/webapp/query-advanced/filter-input/boolean-filter.tsx","webpack:///./src/main/webapp/query-advanced/filter-input/date-filter.tsx","webpack:///./src/main/webapp/query-advanced/filter-input/location-filter.tsx","webpack:///./src/main/webapp/query-advanced/filter-input/number-filter.tsx","webpack:///./src/main/webapp/query-advanced/filter-input/text-filter.tsx","webpack:///./src/main/webapp/query-advanced/filter/attribute-dropdown.tsx","webpack:///./src/main/webapp/query-advanced/filter/comparator-dropdown.tsx","webpack:///./src/main/webapp/query-advanced/filter/dummyDefinitions.tsx","webpack:///./src/main/webapp/query-advanced/filter/filter-group.tsx","webpack:///./src/main/webapp/query-advanced/filter/filter-utils.tsx","webpack:///./src/main/webapp/query-advanced/filter/filter.tsx","webpack:///./src/main/webapp/query-advanced/filter/operator.tsx","webpack:///./src/main/webapp/query-advanced/filter/value-transformations.tsx","webpack:///./src/main/webapp/query-advanced/query-advanced-serialization.tsx","webpack:///./src/main/webapp/query-advanced/query-advanced.stories.tsx","webpack:///./src/main/webapp/query-advanced/query-advanced.tsx","webpack:///src/main/webapp/query-status.js","webpack:///src/main/webapp/query-status.stories.js","webpack:///src/main/webapp/react-hooks/index.js","webpack:///./src/main/webapp/react-hooks/use-anchor-el.tsx","webpack:///src/main/webapp/react-hooks/use-apollo-fallback.js","webpack:///src/main/webapp/react-hooks/use-key-pressed.js","webpack:///src/main/webapp/react-hooks/use-query-executor.js","webpack:///src/main/webapp/react-hooks/use-selection-interface.js","webpack:///src/main/webapp/react-hooks/use-undo-state.js","webpack:///src/main/webapp/react-layout/index.js","webpack:///src/main/webapp/react-layout/react-layout.js","webpack:///src/main/webapp/react-layout/react-layout.stories.js","webpack:///src/main/webapp/result-forms/result-forms.js","webpack:///src/main/webapp/result-forms/result-forms.stories.js","webpack:///src/main/webapp/result-forms/route.js","webpack:///src/main/webapp/result-forms/transfer-list.js","webpack:///src/main/webapp/results/results.js","webpack:///src/main/webapp/results/results.stories.js","webpack:///src/main/webapp/search-settings.js","webpack:///src/main/webapp/search-settings.stories.js","webpack:///src/main/webapp/sources.js","webpack:///src/main/webapp/sources.stories.js","webpack:///src/main/webapp/thumbnail/thumbnail.js","webpack:///src/main/webapp/thumbnail/thumbnail.stories.js","webpack:///src/main/webapp/time-range.js","webpack:///src/main/webapp/time-range.stories.js","webpack:///src/main/webapp/units.js","webpack:///src/main/webapp/user-settings/hidden-results-settings.js","webpack:///src/main/webapp/user-settings/notification-settings.js","webpack:///src/main/webapp/user-settings/search-setttings.js","webpack:///src/main/webapp/user-settings/time-settings.js","webpack:///src/main/webapp/user-settings/user-settings.js","webpack:///src/main/webapp/user-settings/user-settings.stories.js","webpack:///src/main/webapp/workspaces/visualizations.js","webpack:///src/main/webapp/workspaces/workspaces.stories.js","webpack:///src/main/webapp/world-map-with-draw-menu.js","webpack:///src/main/webapp/world-map-with-menu.stories.js","webpack:///src/main/webapp/world-map.js","webpack:///src/main/webapp/world-map.stories.js"],"sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","var map = {\n\t\"./nestedObjectAssign\": \"./node_modules/nested-object-assign/lib/nestedObjectAssign.js\",\n\t\"./nestedObjectAssign.js\": \"./node_modules/nested-object-assign/lib/nestedObjectAssign.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/nested-object-assign/lib sync recursive ^\\\\.\\\\/.*$\";","var map = {\n\t\"./about.stories.js\": \"./src/main/webapp/about.stories.js\",\n\t\"./basic-search.stories.js\": \"./src/main/webapp/basic-search.stories.js\",\n\t\"./inspector/inspector.stories.js\": \"./src/main/webapp/inspector/inspector.stories.js\",\n\t\"./location.stories.js\": \"./src/main/webapp/location.stories.js\",\n\t\"./query-advanced/query-advanced.stories.tsx\": \"./src/main/webapp/query-advanced/query-advanced.stories.tsx\",\n\t\"./query-status.stories.js\": \"./src/main/webapp/query-status.stories.js\",\n\t\"./react-layout/react-layout.stories.js\": \"./src/main/webapp/react-layout/react-layout.stories.js\",\n\t\"./result-forms/result-forms.stories.js\": \"./src/main/webapp/result-forms/result-forms.stories.js\",\n\t\"./results/results.stories.js\": \"./src/main/webapp/results/results.stories.js\",\n\t\"./search-settings.stories.js\": \"./src/main/webapp/search-settings.stories.js\",\n\t\"./sources.stories.js\": \"./src/main/webapp/sources.stories.js\",\n\t\"./thumbnail/thumbnail.stories.js\": \"./src/main/webapp/thumbnail/thumbnail.stories.js\",\n\t\"./time-range.stories.js\": \"./src/main/webapp/time-range.stories.js\",\n\t\"./user-settings/user-settings.stories.js\": \"./src/main/webapp/user-settings/user-settings.stories.js\",\n\t\"./workspaces/workspaces.stories.js\": \"./src/main/webapp/workspaces/workspaces.stories.js\",\n\t\"./world-map-with-menu.stories.js\": \"./src/main/webapp/world-map-with-menu.stories.js\",\n\t\"./world-map.stories.js\": \"./src/main/webapp/world-map.stories.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/main/webapp sync recursive \\\\.stories\\\\.(j|t)sx?$\";","import React from 'react'\n\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\n\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\n\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nconst Info = ({ title, value }) => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" component=\"h2\">\n        {title}\n      </Typography>\n      <Typography color=\"textSecondary\" gutterBottom>\n        {value}\n      </Typography>\n    </React.Fragment>\n  )\n}\n\nconst Content = props => {\n  const { version, identifier, releaseDate, branding, product } = props\n  return (\n    <CardContent>\n      <Typography variant=\"h4\" component=\"h1\">\n        {branding} {product}\n      </Typography>\n      <Divider style={{ marginBottom: 15, marginTop: 10 }} />\n\n      <Info title=\"Version\" value={version} />\n      <Info title=\"Unique Identifier\" value={identifier} />\n      <Info title=\"Release Date\" value={releaseDate} />\n    </CardContent>\n  )\n}\n\nconst Failure = ({ error, onFetchProperties }) => {\n  return (\n    <React.Fragment>\n      <CardContent>\n        <Info title=\"Error\" value={error} />\n      </CardContent>\n      <CardActions>\n        <Button variant=\"contained\" color=\"primary\" onClick={onFetchProperties}>\n          Refresh\n        </Button>\n      </CardActions>\n    </React.Fragment>\n  )\n}\n\nconst Loading = () => {\n  return (\n    <CardContent>\n      <LinearProgress />\n    </CardContent>\n  )\n}\n\nconst Component = props => {\n  const { error, attributes } = props\n  if (typeof error === 'string') {\n    return <Failure {...props} />\n  }\n  if (attributes !== null && typeof attributes === 'object') {\n    return <Content {...attributes} />\n  }\n  return <Loading />\n}\n\nexport const About = props => {\n  return (\n    <div style={{ maxWidth: 600, margin: '20px auto' }}>\n      <Card>\n        <Component {...props} />\n      </Card>\n    </div>\n  )\n}\n\nconst query = gql`\n  query AboutPage {\n    systemProperties {\n      product\n      branding\n      identifier\n      version\n      releaseDate\n    }\n  }\n`\n\nexport default () => {\n  const { error, data = {} } = useQuery(query)\n  const attributes = data.systemProperties\n  const props = { error, attributes }\n\n  return <About {...props} />\n}\n","import React from 'react'\nimport { storiesOf } from '@connexta/ace/@storybook/react'\nimport { About } from './about'\nimport { withKnobs, text } from '@connexta/ace/@storybook/addon-knobs'\nimport { action } from '@connexta/ace/@storybook/addon-actions'\n\nconst stories = storiesOf('About', module)\nstories.addDecorator(withKnobs)\n\nstories.add('success', () => {\n  const attributes = {\n    branding: text('Branding', 'DDF'),\n    product: text('Product', 'Intrigue'),\n    version: text('Version', '2.18.0-SNAPSHOT'),\n    identifier: text('Identifier', 'feu7s2abm with Changes'),\n    releaseDate: text('Release Date', 'August 20th 2019'),\n  }\n\n  return <About attributes={attributes} />\n})\n\nstories.add('loading', () => {\n  return <About />\n})\n\nstories.add('failure', () => {\n  const error = text('Error', 'API Failure')\n  return <About error={error} onFetchProperties={action('onFetchProperties')} />\n})\n","const { Map, Set, fromJS } = require('immutable')\nimport { locationTypes } from './location'\nexport const APPLY_TO_KEY = 'applyTo'\nexport const DATATYPES_KEY = 'datatypes'\nexport const LOCATION_KEY = 'location'\nexport const TEXT_KEY = 'text'\nexport const TIME_RANGE_KEY = 'timeRange'\n\nconst timeProperties = [\n  'created',\n  'datetime.end',\n  'datetime.start',\n  'effective',\n  'expiration',\n  'metacard.created',\n  'metacard.modified',\n  'metacard.version.versioned-on',\n  'modified',\n]\n\nexport const uglyMap = {\n  minutes: howMany => `RELATIVE(PT${howMany}M)`,\n  hours: howMany => `RELATIVE(PT${howMany}H)`,\n  days: howMany => `RELATIVE(P${howMany}D)`,\n  months: howMany => `RELATIVE(P${howMany}M)`,\n  years: howMany => `RELATIVE(P${howMany}Y)`,\n}\n\nconst relativeUnits = {\n  P: {\n    D: 'days',\n    M: 'months',\n    Y: 'years',\n  },\n  PT: {\n    H: 'hours',\n    M: 'minutes',\n  },\n}\n\n// Create the Map\nconst unitsMap = Map(fromJS(relativeUnits))\n\nconst datatypeProperties = ['metadata-content-type', 'datatype']\n\nconst parseGeoFilter = (filter = {}) => {\n  const value = filter.value.value ? filter.value.value : filter.value\n  const geojson = Map(filter.geojson)\n  if (value.includes('POINT')) {\n    return {\n      type: 'pointRadius',\n      location: Map({\n        lon: geojson.getIn(['geometry', 'coordinates'])[0],\n        lat: geojson.getIn(['geometry', 'coordinates'])[1],\n        bufferWidth: geojson.getIn(['properties', 'buffer', 'width']),\n        unit: geojson.getIn(['properties', 'buffer', 'unit']),\n      }),\n    }\n  }\n\n  if (value.includes('POLYGON')) {\n    return {\n      type: 'polygon',\n      location: Map({\n        coordinates: geojson.getIn(['geometry', 'coordinates', 0]),\n        bufferWidth: geojson.getIn(['properties', 'buffer', 'width']),\n        unit: geojson.getIn(['properties', 'buffer', 'unit']),\n      }),\n    }\n  }\n\n  if (value.includes('LINESTRING')) {\n    return {\n      type: 'line',\n      location: Map({\n        coordinates: geojson.getIn(['geometry', 'coordinates']),\n        bufferWidth: geojson.getIn(['properties', 'buffer', 'width']),\n        unit: geojson.getIn(['properties', 'buffer', 'unit']),\n      }),\n    }\n  }\n}\n\nexport const fromFilterTree = filterTree => {\n  return filterTree.filters\n    ? filterTree.filters.reduce((accumulator, filter) => {\n        const { property, value, filters } = filter\n\n        if (property === 'anyText') {\n          return accumulator.set(TEXT_KEY, value)\n        }\n\n        if (property === 'anyGeo') {\n          return accumulator.set(LOCATION_KEY, Map(parseGeoFilter(filter)))\n        }\n\n        if (filters && filters[0]) {\n          if (timeProperties.includes(filters[0].property)) {\n            if (filters[0].type === '=') {\n              const { last, unit } = parseRelative(filters[0].value)\n              filters[0].last = last\n              filters[0].unit = unit\n            }\n\n            return accumulator.set(\n              TIME_RANGE_KEY,\n              Map({\n                value: filters[0],\n                applyTo: filters.map(({ property }) => property),\n              })\n            )\n          }\n\n          if (datatypeProperties.includes(filters[0].property)) {\n            const applyTo = Set(filters.map(({ value }) => value)).toJSON()\n            return accumulator.set(DATATYPES_KEY, applyTo)\n          }\n        }\n\n        return accumulator\n      }, Map())\n    : Map({ [TEXT_KEY]: filterTree.value })\n}\n\nexport const parseRelative = relative => {\n  const matches = relative.match(/RELATIVE\\((\\D*)(\\d*)(\\D*)\\)/)\n  if (matches && matches.length > 3) {\n    /* eslint-disable no-unused-vars */\n    const [full, timeOrDay, last, unitKey] = matches\n    /* eslint-enable */\n    const unit = unitsMap.getIn([timeOrDay, unitKey])\n\n    return { last, unit }\n  }\n\n  return {}\n}\n\nexport const getLocationFilter = (data = Map()) => {\n  const { type, location } = data.toJSON()\n  if (!type || !location) {\n    return null\n  }\n  return locationTypes[type].generateFilter(location)\n}\n\nexport const toFilterTree = basicData => {\n  const getTimeRangeFilter = () => {\n    const applyTo = basicData.getIn([TIME_RANGE_KEY, APPLY_TO_KEY])\n    const rest = basicData.getIn([TIME_RANGE_KEY, 'value'])\n\n    if (!applyTo || !rest) {\n      return null\n    }\n\n    if (rest.type === '=') {\n      const { last, unit } = rest\n      rest.value = uglyMap[unit](last)\n    }\n\n    return {\n      type: 'OR',\n      filters: applyTo.map(property => ({\n        ...rest,\n        property,\n      })),\n    }\n  }\n\n  const getDatatypesFilter = () => {\n    const applyTo = basicData.get(DATATYPES_KEY)\n    if (!applyTo || applyTo.length === 0) {\n      return null\n    }\n    const datatypeFilters = applyTo.map(value => ({\n      type: 'ILIKE',\n      property: 'datatype',\n      value,\n    }))\n    const contentTypeFilters = applyTo.map(value => ({\n      type: 'ILIKE',\n      property: 'metadata-content-type',\n      value,\n    }))\n    return {\n      type: 'OR',\n      filters: [...datatypeFilters, ...contentTypeFilters],\n    }\n  }\n\n  const text = basicData.has(TEXT_KEY)\n    ? {\n        type: 'ILIKE',\n        property: 'anyText',\n        value: basicData.get(TEXT_KEY),\n      }\n    : null\n\n  const location = getLocationFilter(basicData.get(LOCATION_KEY))\n  const timeRange = getTimeRangeFilter()\n  const datatypes = getDatatypesFilter()\n\n  const filters = [text, location, timeRange, datatypes].filter(\n    filter => filter !== null\n  )\n\n  return {\n    type: 'AND',\n    filters,\n  }\n}\n","import React, { useState } from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Divider from '@material-ui/core/Divider'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { red } from '@material-ui/core/colors'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport Select from '@material-ui/core/Select'\nimport TextField from '@material-ui/core/TextField'\nimport { Map } from 'immutable'\nimport Typography from '@material-ui/core/Typography'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\nimport Collapse from '@material-ui/core/Collapse'\nimport SortOrder from './search-settings'\nimport { SourcesSelect } from './sources'\n\nimport {\n  APPLY_TO_KEY,\n  DATATYPES_KEY,\n  LOCATION_KEY,\n  TEXT_KEY,\n  TIME_RANGE_KEY,\n  toFilterTree,\n  fromFilterTree,\n} from './basic-search-helper'\nimport Location, { validate as validateLocation } from './location'\nimport TimeRange, {\n  createTimeRange,\n  validate as validateTimeRange,\n} from './time-range'\n\nconst timeAttributes = [\n  'created',\n  'datetime.end',\n  'datetime.start',\n  'effective',\n  'expiration',\n  'metacard.created',\n  'metacard.modified',\n  'metacard.version.versioned-on',\n  'modified',\n]\n\nconst datatypes = [\n  'Interactive Resource',\n  'Moving Image',\n  'Still Image',\n  'Dataset',\n  'Collection',\n  'Event',\n  'Service',\n  'Software',\n  'Sound',\n  'Text',\n  'Image',\n  'Physical Object',\n]\n\nconst TextSearch = ({ text, handleChange }) => {\n  return (\n    <TextField\n      fullWidth\n      label=\"Text\"\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n    />\n  )\n}\n\nconst filterMap = {\n  location: 'Location',\n  timeRange: 'Time Range',\n  datatypes: 'Match Types',\n  sources: 'Sources',\n  sortOrder: 'Sort Order',\n}\n\nconst defaultSorts = [\n  {\n    attribute: 'modified',\n    direction: 'descending',\n  },\n]\n\nconst defaultSources = ['ddf.distribution']\n\nconst AddButton = ({ addFilter }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n\n  return (\n    <React.Fragment>\n      <Button onClick={handleClick} style={{ marginLeft: '20px' }}>\n        Add Options\n      </Button>\n\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {Object.keys(filterMap).map(filter => (\n          <MenuItem\n            key={filter}\n            value={filter}\n            onClick={() => {\n              addFilter(filter)\n              handleClose()\n            }}\n          >\n            {filterMap[filter]}\n          </MenuItem>\n        ))}\n      </Menu>\n    </React.Fragment>\n  )\n}\n\nconst SearchButton = props => (\n  <Button\n    style={props.style}\n    fullWidth\n    variant=\"contained\"\n    color=\"primary\"\n    onClick={props.onSearch}\n  >\n    Search\n  </Button>\n)\n\nconst populateDefaultQuery = (\n  filterTree,\n  srcs = defaultSources,\n  sorts = defaultSorts\n) => ({\n  srcs,\n  start: 1,\n  count: 250,\n  filterTree,\n  sorts,\n  spellcheck: false,\n  phonetics: false,\n})\n\nconst MatchTypes = ({ state = [], setState, errors = {} }) => {\n  errors = errors.matchTypesErrors || {}\n  return (\n    <FormControl fullWidth>\n      <InputLabel>Match Types</InputLabel>\n      <Select\n        error={errors.datatypes !== undefined}\n        multiple\n        value={state}\n        onChange={e => setState(e.target.value)}\n        renderValue={selected => selected.join(', ')}\n      >\n        {datatypes.map(datatype => (\n          <MenuItem key={datatype} value={datatype}>\n            <Checkbox checked={state.indexOf(datatype) > -1} />\n            <ListItemText primary={datatype} />\n          </MenuItem>\n        ))}\n      </Select>\n      <FormHelperText error={errors.datatypes !== undefined}>\n        {errors.datatypes}\n      </FormHelperText>\n    </FormControl>\n  )\n}\n\nconst BasicSources = ({ state = ['ddf.distribution'], setState }) => {\n  return <SourcesSelect value={state} onChange={setState} />\n}\n\nconst BasicSortOrder = props => {\n  const { setState } = props\n\n  return <SortOrder setSortOrder={setState} />\n}\n\nconst BasicTimeRange = ({ state = Map(), setState, errors }) => {\n  return (\n    <div style={{ flex: '1', overflow: 'hidden' }}>\n      <TimeRange\n        errors={errors.timeRangeErrors}\n        fullWidth\n        timeRange={state.get('value')}\n        setTimeRange={updatedTimeRange => {\n          const next = state.set('value', updatedTimeRange)\n          setState(next)\n        }}\n      />\n      <FormControl fullWidth>\n        <AttributeSelector\n          attributes={state.get(APPLY_TO_KEY)}\n          errors={errors.attributeSelectorErrors}\n          setAttributes={attributes => {\n            const next = state.set(APPLY_TO_KEY, attributes)\n            setState(next)\n          }}\n        />\n      </FormControl>\n    </div>\n  )\n}\n\nconst AttributeSelector = props => {\n  const { attributes = [], setAttributes, errors = {} } = props\n\n  return (\n    <FormControl fullWidth>\n      <InputLabel>Apply Time Range To</InputLabel>\n      <Select\n        error={errors.applyTo !== undefined}\n        multiple\n        value={attributes}\n        onChange={e => setAttributes(e.target.value)}\n        input={<Input />}\n        renderValue={selected => {\n          return selected.join(', ')\n        }}\n      >\n        {timeAttributes.map(name => (\n          <MenuItem key={name} value={name}>\n            <Checkbox checked={attributes.indexOf(name) > -1} />\n            <ListItemText primary={name} />\n          </MenuItem>\n        ))}\n      </Select>\n      <FormHelperText error={errors.applyTo !== undefined}>\n        {errors.applyTo}\n      </FormHelperText>\n    </FormControl>\n  )\n}\n\nconst BasicLocation = ({ state = Map(), setState, errors }) => {\n  return (\n    <Location\n      value={state}\n      onChange={setState}\n      errors={errors.locationErrors}\n    />\n  )\n}\n\nconst filters = {\n  [LOCATION_KEY]: BasicLocation,\n  timeRange: BasicTimeRange,\n  datatypes: MatchTypes,\n  sources: BasicSources,\n  sortOrder: BasicSortOrder,\n}\n\nconst filterLabels = {\n  [LOCATION_KEY]: 'Location',\n  timeRange: 'Time Range',\n  datatypes: 'Match Types',\n  sources: 'Sources',\n  sortOrder: 'Sort Order',\n}\n\nconst defaultFilters = {\n  timeRange: Map({\n    value: createTimeRange({ type: 'BEFORE' }),\n    applyTo: ['created'],\n  }),\n  [LOCATION_KEY]: Map({\n    type: 'line',\n  }),\n}\n\nconst getFilterTree = props => {\n  if (props.query && props.query.filterTree) {\n    return fromFilterTree(props.query.filterTree)\n  }\n\n  return Map({ text: '*' })\n}\n\nconst FilterCard = props => {\n  const [state, setState] = useState(true)\n  const { children, label, onRemove } = props\n\n  const spacing = 16\n  const Arrow = state ? KeyboardArrowUpIcon : KeyboardArrowDownIcon\n\n  return (\n    <Paper style={{ width: '100%', marginTop: 20 }}>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}\n      >\n        <Typography style={{ padding: 12 }} color=\"textSecondary\">\n          {label}\n        </Typography>\n        <div style={{ display: 'flex' }}>\n          <IconButton onClick={() => setState(!state)}>\n            <Arrow />\n          </IconButton>\n          <IconButton style={{ color: red[500] }} onClick={onRemove}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </div>\n      <Collapse in={state}>\n        <Divider />\n        <div\n          style={{\n            padding: spacing,\n            boxSizing: 'border-box',\n          }}\n        >\n          {children}\n        </div>\n      </Collapse>\n    </Paper>\n  )\n}\n\nexport const BasicSearch = props => {\n  const [filterTree, setFilterTree] = React.useState(getFilterTree(props))\n\n  const [submitted, setSubmitted] = React.useState(false)\n  const errors = validate(filterTree)\n\n  const text = filterTree.get('text')\n\n  return (\n    <div\n      style={{\n        overflow: 'auto',\n        padding: 2,\n        maxWidth: 600,\n        maxHeight: '100%',\n      }}\n    >\n      <Paper\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          padding: 16,\n          boxSizing: 'border-box',\n        }}\n      >\n        <TextSearch\n          text={text}\n          handleChange={e =>\n            setFilterTree(filterTree.set(TEXT_KEY, e.target.value))\n          }\n        />\n        <AddButton\n          addFilter={filter => {\n            setFilterTree(\n              filterTree.merge({\n                [filter]: defaultFilters[filter],\n              })\n            )\n          }}\n        />\n      </Paper>\n\n      {filterTree\n        .remove('text')\n        .map((state, filter) => {\n          const Component = filters[filter]\n          const label = filterLabels[filter]\n\n          return (\n            <FilterCard\n              key={filter}\n              label={label}\n              onRemove={() => {\n                setFilterTree(filterTree.remove(filter))\n              }}\n            >\n              <Component\n                state={state}\n                setState={state => {\n                  setFilterTree(filterTree.set(filter, state))\n                }}\n                errors={submitted ? errors : {}}\n              />\n            </FilterCard>\n          )\n        })\n        .valueSeq()}\n\n      <Divider />\n\n      <div\n        style={{\n          marginTop: 20,\n        }}\n      >\n        <SearchButton\n          fullWidth\n          onSearch={() => {\n            setSubmitted(true)\n\n            if (isEmpty(errors)) {\n              props.onSearch(\n                populateDefaultQuery(\n                  toFilterTree(filterTree),\n                  filterTree.get('sources'),\n                  filterTree.get('sortOrder')\n                )\n              )\n            }\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst isEmpty = checkThis => {\n  return Object.keys(checkThis).length === 0\n}\n\nconst validateAttributeSelector = (applyTo = []) => {\n  const errors = {}\n\n  if (applyTo.length === 0) {\n    errors.applyTo = 'Must choose at least one attribute'\n  }\n\n  return errors\n}\n\nconst validateMatchTypes = () => {\n  return {}\n}\n\nconst validate = (filterMap = Map()) => {\n  let errors = {}\n\n  if (filterMap.has(LOCATION_KEY)) {\n    const locationErrors = validateLocation(filterMap.getIn([LOCATION_KEY]))\n    if (!isEmpty(locationErrors)) {\n      errors['locationErrors'] = locationErrors\n    }\n  }\n\n  if (filterMap.has(TIME_RANGE_KEY)) {\n    const timeRangeErrors = validateTimeRange(\n      filterMap.getIn([TIME_RANGE_KEY, 'value'])\n    )\n\n    if (!isEmpty(timeRangeErrors)) {\n      errors['timeRangeErrors'] = timeRangeErrors\n    }\n\n    const attributeSelectorErrors = validateAttributeSelector(\n      filterMap.getIn([TIME_RANGE_KEY, APPLY_TO_KEY])\n    )\n    if (!isEmpty(attributeSelectorErrors)) {\n      errors['attributeSelectorErrors'] = attributeSelectorErrors\n    }\n  }\n\n  if (filterMap.has(DATATYPES_KEY)) {\n    const matchTypesErrors = validateMatchTypes(\n      filterMap.getIn([DATATYPES_KEY])\n    )\n    if (!isEmpty(matchTypesErrors)) {\n      errors['matchTypesErrors'] = matchTypesErrors\n    }\n  }\n  return errors\n}\n\nexport default BasicSearch\n","import React from 'react'\nimport { storiesOf } from '@connexta/ace/@storybook/react'\nimport { action } from '@connexta/ace/@storybook/addon-actions'\nimport { BasicSearch } from './basic-search'\n\nconst stories = storiesOf('BasicSearch', module)\n\nstories.add('basic', () => {\n  return <BasicSearch onSearch={action('onSearch')} />\n})\n","/* eslint-disable no-unused-vars */\nconst EARTH_MEAN_RADIUS_METERS = 6371008.7714\n\nconst DEGREES_TO_RADIANS = Math.PI / 180\nconst RADIANS_TO_DEGREES = 1 / DEGREES_TO_RADIANS\n\n/* 6 Digits of precision used because it gives precision up to \n0.11 meters, which was deemed precise enough for any use case \nof application */\n\nconst DECIMAL_PRECISION = 6\n/* eslint-enable */\n\nconst METERS_KILOMETERS = 1000\nconst METERS_FEET = 0.3048\nconst METERS_YARDS = 0.9144\nconst METERS_MILES = 1609.344\nconst METERS_NAUTICAL_MILES = 1852\n\nconst getDistanceInMeters = ({ distance, units }) => {\n  distance = distance || 0\n  switch (units) {\n    case 'kilometers':\n      return distance * METERS_KILOMETERS\n    case 'feet':\n      return distance * METERS_FEET\n    case 'yards':\n      return distance * METERS_YARDS\n    case 'miles':\n      return distance * METERS_MILES\n    case 'nautical miles':\n      return distance * METERS_NAUTICAL_MILES\n    case 'meters':\n    default:\n      return distance\n  }\n}\n\nconst getDistanceFromMeters = ({ distance, units }) => {\n  distance = distance || 0\n  switch (units) {\n    case 'kilometers':\n      return distance / METERS_KILOMETERS\n    case 'feet':\n      return distance / METERS_FEET\n    case 'yards':\n      return distance / METERS_YARDS\n    case 'miles':\n      return distance / METERS_MILES\n    case 'nautical miles':\n      return distance / METERS_NAUTICAL_MILES\n    case 'meters':\n    default:\n      return distance\n  }\n}\n\nexport { getDistanceInMeters, getDistanceFromMeters }\n","const LA = {\n  title: 'Los Angeles',\n  description: `Painting should do one thing. It should put happiness in your heart.\n  Give him a friend, we forget the trees get lonely too. Don't forget to tell these special people in your life just how special they are to you.\n  If I paint something, I don't want to have to explain what it is. We're not trying to teach you a thing to copy.\n  We're just here to teach you a technique, then let you loose into the world. Trees get lonely too, so we'll give him a little friend.`,\n  created: 'September 4, 1781',\n  modified: 'April 29, 1992',\n  checksum: '1',\n  location: 'POINT(-118.2437 34.0522)',\n}\n\nconst DC = {\n  title: 'Washington DC',\n  description: `To exercise exclusive Legislation in all Cases whatsoever, over such District (not exceeding ten Miles square) as\n  may, by Cession of Particular States, and the Acceptance of Congress, become the Seat of the Government of\n  the United States, and to exercise like Authority over all Places purchased by the Consent of the Legislature of\n  the State in which the Same shall be, for the Erection of Forts, Magazines, Arsenals, dock-Yards and other\n  needful Buildings`,\n  created: 'July 16, 1790',\n  modified: 'February 21, 1871',\n  checksum: '1',\n  location: 'POINT(-77.0369 38.9072)',\n}\n\nconst PHOENIX = {\n  title: 'Phoenix',\n  description: `According to legend, Phoenix gets its name from Cambridge-educated pioneer Darrell Duppa, who saw the\n  ruins and prehistoric canals of the Hohokam and believed another civilization would rise from the ashes.`,\n  created: 'February 25, 1881',\n  modified: 'February 14, 1912',\n  checksum: '1',\n  location: 'POINT(-112.0740 33.4484)',\n}\n\nconst PARIS = {\n  title: 'Paris',\n  description: `Liberty, equality, fraternity, or death; - the last, much the easiest to bestow, O Guillotine!`,\n  created: '250 CE',\n  modified: 'August 25, 1944',\n  checksum: '1',\n  location: 'POINT(2.3522 48.8566)',\n}\n\nconst CITIES = [DC, LA, PARIS, PHOENIX]\n\nconst genResults = (n = 100) =>\n  new Array(n).fill(0).map((_v, i) => ({\n    metacard: {\n      properties: {\n        ...CITIES[Math.min(i, CITIES.length - 1)],\n        id: (i + 1).toString(),\n      },\n    },\n  }))\n\nexport default genResults\n","import React from 'react'\n\nexport const getIconText = ({ color }) =>\n  `<svg\n    height=\"16px\"\n    id=\"Layer_1\"\n    style=\"enable-background:new 0 0 16 16;\"\n    version=\"1.1\"\n    viewBox=\"0 0 16 16\"\n    width=\"16px\"\n    xml:space=\"preserve\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <path fill=\"${color}\" d=\"M8,0C4.687,0,2,2.687,2,6c0,3.854,4.321,8.663,5,9.398C7.281,15.703,7.516,16,8,16s0.719-0.297,1-0.602  C9.679,14.663,14,9.854,14,6C14,2.687,11.313,0,8,0z M8,10c-2.209,0-4-1.791-4-4s1.791-4,4-4s4,1.791,4,4S10.209,10,8,10z M8,4  C6.896,4,6,4.896,6,6s0.896,2,2,2s2-0.896,2-2S9.104,4,8,4z\" />\n  </svg>`\n\nexport const Icon = ({ color }) => (\n  <svg\n    height=\"16px\"\n    id=\"Layer_1\"\n    style=\"enable-background:new 0 0 16 16;\"\n    version=\"1.1\"\n    viewBox=\"0 0 16 16\"\n    width=\"16px\"\n    xmlSpace=\"preserve\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <path\n      fill={color}\n      d=\"M8,0C4.687,0,2,2.687,2,6c0,3.854,4.321,8.663,5,9.398C7.281,15.703,7.516,16,8,16s0.719-0.297,1-0.602  C9.679,14.663,14,9.854,14,6C14,2.687,11.313,0,8,0z M8,10c-2.209,0-4-1.791-4-4s1.791-4,4-4s4,1.791,4,4S10.209,10,8,10z M8,4  C6.896,4,6,4.896,6,6s0.896,2,2,2s2-0.896,2-2S9.104,4,8,4z\"\n    />\n  </svg>\n)\n","import InputLabel from '@material-ui/core/InputLabel'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport Select from '@material-ui/core/Select'\nimport React from 'react'\n\nconst OutlinedSelect = (props = {}) => {\n  const { value, onChange, label } = props\n  const inputLabel = React.useRef(null)\n  const [labelWidth, setLabelWidth] = React.useState(0)\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth)\n  }, [])\n\n  return (\n    <React.Fragment>\n      <InputLabel ref={inputLabel}>{label}</InputLabel>\n      <Select\n        input={<OutlinedInput labelWidth={labelWidth} />}\n        value={value}\n        onChange={onChange}\n      >\n        {props.children}\n      </Select>\n    </React.Fragment>\n  )\n}\n\nexport default OutlinedSelect\n","export { default } from './inspector'\n","import { useQuery } from '@apollo/react-hooks'\nimport Paper from '@material-ui/core/Card'\nimport Divider from '@material-ui/core/Divider'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Link from '@material-ui/core/Link'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Tab from '@material-ui/core/Tab'\nimport Tabs from '@material-ui/core/Tabs'\nimport Typography from '@material-ui/core/Typography'\nimport gql from 'graphql-tag'\nimport React from 'react'\nimport { useApolloFallback } from '../react-hooks'\n\nconst Info = ({ title, value }) => {\n  const count = value instanceof Array ? value.length : 1\n  const values = value instanceof Array ? value : [value]\n  const countLabel = count > 1 ? ` (${count} values)` : ''\n\n  return (\n    <div>\n      <Typography variant=\"h6\" component=\"h2\">\n        {title}\n        {countLabel}\n      </Typography>\n      {values.map(itemValue => {\n        return (\n          <Typography key={itemValue} color=\"textSecondary\" gutterBottom>\n            {itemValue}\n          </Typography>\n        )\n      })}\n    </div>\n  )\n}\n\nconst MultiResultInfo = ({ title, values }) => {\n  return (\n    <div style={{ width: '100%' }}>\n      <Typography variant=\"h6\" component=\"h2\">\n        {title}\n      </Typography>\n      {values.map((itemValue, index, array) => {\n        return (\n          <ListItem key={index} divider={index < array.length - 1}>\n            <Info title=\"\" value={itemValue} />\n          </ListItem>\n        )\n      })}\n    </div>\n  )\n}\n\nconst MultiResultPropertiesList = props => {\n  const { results } = props\n  const attributeSet = getAttributeSet(results)\n\n  return Array.from(attributeSet)\n    .sort()\n    .map(key => {\n      const values = results.map(result => {\n        return result.metacard.properties[key] || 'No Value'\n      })\n      return (\n        <div key={key}>\n          <ListItem divider>\n            <MultiResultInfo title={key} values={values} />\n          </ListItem>\n        </div>\n      )\n    })\n}\n\nconst PropertiesList = props => {\n  const { properties } = props\n  return Object.entries(properties)\n    .sort()\n    .map(entry => {\n      const key = entry[0]\n      const value = entry[1]\n      return (\n        <div key={key}>\n          <ListItem divider>\n            <Info title={key} value={value} />\n          </ListItem>\n        </div>\n      )\n    })\n}\n\nconst Details = props => {\n  const { results } = props\n  const result = results instanceof Array ? results[0] : results\n  return (\n    <Paper>\n      <List>\n        <PropertiesList properties={result.metacard.properties} />\n      </List>\n    </Paper>\n  )\n}\n\nconst createActionsMap = actions => {\n  const mapActions = actions.filter(\n    action => action.id.indexOf('catalog.data.metacard.map.') === 0\n  )\n  const exportActions = actions\n    .filter(action => action.title.indexOf('Export') === 0)\n    .filter(action => mapActions.indexOf(action) === -1)\n  const otherActions = actions.filter(\n    action =>\n      mapActions.indexOf(action) === -1 && exportActions.indexOf(action) === -1\n  )\n  return { exportActions, mapActions, otherActions }\n}\n\nconst ActionLinks = props => {\n  const { title, actions } = props\n  if (actions.length === 0) {\n    return null\n  }\n\n  return (\n    <div style={{ width: '100%' }}>\n      <Typography variant=\"h6\" component=\"h2\">\n        {title}\n      </Typography>\n      {actions.map(action => {\n        return (\n          <ListItem key={action.id}>\n            <Typography color=\"textSecondary\" gutterBottom>\n              <Link href={action.url}> {action.displayName} </Link>\n            </Typography>\n          </ListItem>\n        )\n      })}\n    </div>\n  )\n}\n\nconst Actions = props => {\n  const { results } = props\n  const result = results instanceof Array ? results[0] : results\n  const actions = result.actions\n  if (actions && actions.length) {\n    const actionsMap = createActionsMap(result.actions)\n    return (\n      <Paper>\n        <List style={{ marginLeft: '10px' }}>\n          <ActionLinks title=\"Export as:\" actions={actionsMap.exportActions} />\n          <Divider />\n          <ActionLinks title=\"Map:\" actions={actionsMap.mapActions} />\n          <Divider />\n          <ActionLinks title=\"Various:\" actions={actionsMap.otherActions} />\n        </List>\n      </Paper>\n    )\n  } else {\n    return (\n      <Paper>\n        <List style={{ marginLeft: '10px' }}>\n          <Typography variant=\"h6\" component=\"h2\">\n            No actions provided\n          </Typography>\n        </List>\n      </Paper>\n    )\n  }\n}\n\nconst Summary = props => {\n  const { results, summaryAttributes } = props\n\n  let summaryProperties = { '': 'No summary attributes were provided.' }\n  if (summaryAttributes && summaryAttributes.length) {\n    const result = results instanceof Array ? results[0] : results\n    const properties = result.metacard.properties\n\n    const filteredProperties = summaryAttributes.map(attr => {\n      const property = properties[attr]\n      if (property != undefined) {\n        return { [attr]: property }\n      } else {\n        return {}\n      }\n    })\n\n    summaryProperties = filteredProperties.reduce(\n      (acc, property) => ({\n        ...acc,\n        ...property,\n      }),\n      {}\n    )\n  }\n\n  return (\n    <Paper>\n      <List>\n        <PropertiesList properties={summaryProperties} />\n      </List>\n    </Paper>\n  )\n}\n\nconst getAttributeSet = results => {\n  return results.reduce((acc, value) => {\n    const properties = value.metacard.properties\n    const keys = Object.keys(properties)\n    return new Set([...acc, ...keys])\n  }, new Set())\n}\n\nconst MultiResultDetails = props => {\n  const { results } = props\n\n  return (\n    <Paper>\n      <Typography\n        variant=\"h6\"\n        component=\"h2\"\n        fullWidth\n        style={{ textAlign: 'center' }}\n      >\n        {results.length} results selected\n      </Typography>\n      <List>\n        <MultiResultPropertiesList results={results} />\n      </List>\n    </Paper>\n  )\n}\n\nconst resultTabMap = {\n  0: Summary,\n  1: Details,\n  2: Actions,\n}\n\nconst multiResultTabMap = {\n  0: MultiResultDetails,\n}\n\nconst getTabComponent = results => {\n  if (results instanceof Array && results.length > 1) {\n    return MultiResultTabs\n  }\n  return ResultTabs\n}\n\nconst ResultTabs = props => {\n  const [tab, setTab] = React.useState(0)\n  const Component = resultTabMap[tab]\n\n  return (\n    <div style={{ paddingTop: 10 }}>\n      <Tabs\n        value={tab}\n        onChange={(_, selectedIndex) => {\n          setTab(selectedIndex)\n        }}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"fullWidth\"\n      >\n        <Tab label=\"Summary\" />\n        <Tab label=\"Details\" />\n        <Tab label=\"Actions\" />\n      </Tabs>\n      {Component ? <Component {...props} /> : null}\n    </div>\n  )\n}\n\nconst MultiResultTabs = props => {\n  const [tab, setTab] = React.useState(0)\n  const Component = multiResultTabMap[tab]\n\n  return (\n    <div style={{ paddingTop: 10 }}>\n      <Tabs\n        value={tab}\n        onChange={(_, selectedIndex) => {\n          setTab(selectedIndex)\n        }}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"fullWidth\"\n      >\n        <Tab label=\"Details\" />\n      </Tabs>\n      {Component ? <Component {...props} /> : null}\n    </div>\n  )\n}\n\nconst defaultSummaryAttributes = ['created', 'modified', 'thumbnail']\n\nconst Inspector = props => {\n  const { results, summaryAttributes = defaultSummaryAttributes } = props\n  const TabComponent = getTabComponent(results)\n\n  if (results && results.length) {\n    return (\n      <TabComponent results={results} summaryAttributes={summaryAttributes} />\n    )\n  } else {\n    return <PropertiesList properties={{ '': 'No results were provided.' }} />\n  }\n}\n\nconst query = gql`\n  query InspectorSummaryShow {\n    systemProperties {\n      summaryShow\n    }\n  }\n`\n\nconst Loading = () => {\n  return (\n    <Paper>\n      <LinearProgress />\n    </Paper>\n  )\n}\n\nconst Container = props => {\n  const { loading, error, data = {} } = useQuery(query)\n  if (loading) {\n    return <Loading />\n  }\n\n  const summaryAttributes = data.systemProperties.summaryShow\n\n  return (\n    <Inspector {...props} error={error} summaryAttributes={summaryAttributes} />\n  )\n}\n\nexport default props => {\n  const Component = useApolloFallback(Container, Inspector)\n  return <Component {...props} />\n}\n\nexport { Actions, Details, Inspector, MultiResultDetails, Summary }\n","import React from 'react'\nimport { storiesOf } from '@connexta/ace/@storybook/react'\nimport { select, array } from '@connexta/ace/@storybook/addon-knobs'\n\nimport result from '../sample-result.json'\nimport results from '../sample-multi-result.json'\nimport Inspector from './inspector'\n\nconst stories = storiesOf('Inspector', module)\n\nstories.addDecorator(Story => <Story />)\n\nstories.add('basic', () => {\n  const sampleResult = select(\n    'Result Set',\n    {\n      single: result,\n      multiple: results,\n    },\n    result\n  )\n  const summaryAttributes = array('Summary Attributes', [\n    'created',\n    'modified',\n    'thumbnail',\n  ])\n  return (\n    <Inspector results={sampleResult} summaryAttributes={summaryAttributes} />\n  )\n})\n","import TextField from '@material-ui/core/TextField'\nimport { Map } from 'immutable'\nimport React from 'react'\nimport Units from './units'\nimport { getDistanceInMeters } from './distance-utils'\n\nexport const validate = (location = Map()) => {\n  const errors = {}\n  const { coordinates = [], bufferWidth = 0 } = location.toJSON()\n\n  if (typeof coordinates === 'string') {\n    errors.coordinates = `Invalid Line`\n  }\n\n  if (bufferWidth < 0) {\n    errors.bufferWidth = `Buffer width must be greater or equal to 0`\n  }\n  return errors\n}\n\nconst parseLine = line => line.map(([lon, lat]) => `${lon} ${lat}`).join()\n\nexport const generateFilter = (location = Map()) => {\n  const { coordinates, bufferWidth, unit } = location.toJSON()\n  return {\n    type: bufferWidth > 0 ? 'DWITHIN' : 'INTERSECTS',\n    property: 'anyGeo',\n    value: {\n      type: 'GEOMETRY',\n      value: `LINESTRING(${parseLine(coordinates)})`,\n    },\n    ...(bufferWidth > 0 && {\n      distance: getDistanceInMeters({ distance: bufferWidth, units: unit }),\n    }),\n    geojson: {\n      type: 'Feature',\n      geometry: {\n        type: 'LineString',\n        coordinates,\n      },\n      properties: {\n        type: 'LineString',\n        buffer: {\n          width: bufferWidth,\n          unit,\n        },\n      },\n    },\n  }\n}\n\nconst Line = props => {\n  const { value = Map(), onChange, errors = {} } = props\n  const { coordinates = '', bufferWidth = 0, unit = 'meters' } = value.toJSON()\n\n  return (\n    <div style={{ paddingTop: 10 }}>\n      <TextField\n        fullWidth\n        label=\"Line\"\n        error={errors.coordinates !== undefined}\n        helperText={errors.coordinates}\n        value={\n          typeof coordinates === 'string'\n            ? coordinates\n            : JSON.stringify(coordinates)\n        }\n        onChange={e => {\n          let coordinates = e.target.value\n          try {\n            coordinates = JSON.parse(coordinates)\n          } catch (e) {}\n          onChange(value.set('coordinates', coordinates))\n        }}\n      />\n      <div style={{ display: 'flex', paddingTop: 10 }}>\n        <div style={{ flex: '1', overflow: 'hidden' }}>\n          <TextField\n            fullWidth\n            type=\"number\"\n            label=\"Buffer Width\"\n            error={errors.bufferWidth !== undefined}\n            helperText={errors.bufferWidth}\n            value={bufferWidth}\n            onChange={e => {\n              onChange(value.set('bufferWidth', e.target.value))\n            }}\n          />\n        </div>\n        <div style={{ width: 20 }} />\n        <Units\n          value={unit}\n          onChange={e => {\n            onChange(value.set('unit', e.target.value))\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Line\n","import FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport { Map } from 'immutable'\nimport React from 'react'\nimport Line, {\n  generateFilter as generateLineFilter,\n  validate as validateLine,\n} from './line'\nimport PointRadius, {\n  generateFilter as generatePointRadiusFilter,\n  validate as validatePointRadius,\n} from './point-radius'\nimport Polygon, {\n  generateFilter as generatePolygonFilter,\n  validate as validatePolygon,\n} from './polygon'\n\nexport const locationTypes = {\n  line: {\n    label: 'Line',\n    component: Line,\n    validate: validateLine,\n    generateFilter: generateLineFilter,\n  },\n  polygon: {\n    label: 'Polygon',\n    component: Polygon,\n    validate: validatePolygon,\n    generateFilter: generatePolygonFilter,\n  },\n  pointRadius: {\n    label: 'Point-Radius',\n    component: PointRadius,\n    validate: validatePointRadius,\n    generateFilter: generatePointRadiusFilter,\n  },\n  boundingBox: {\n    label: 'Bounding Box',\n    component: null,\n    validate: () => ({}),\n    generateFilter: () => null,\n  },\n  keyword: {\n    label: 'Keyword',\n    component: null,\n    validate: () => ({}),\n    generateFilter: () => null,\n  },\n}\n\nexport const validate = (location = Map()) => {\n  const type = location.get('type')\n  return locationTypes[type].validate(location.get('location'))\n}\n\nconst Location = ({ value = Map(), onChange, errors = {} }) => {\n  const [locations, setLocations] = React.useState(\n    Map({ [value.get('type')]: value })\n  )\n  const type = value.get('type')\n  const Component = locationTypes[type].component\n  const onSelection = e => {\n    setLocations(locations.set(type, value.get('location')))\n    onChange(\n      value\n        .set('type', e.target.value)\n        .set('location', locations.get(e.target.value))\n    )\n  }\n  return (\n    <FormControl fullWidth>\n      <InputLabel>Location</InputLabel>\n      <Select value={type ? type : 'line'} onChange={onSelection}>\n        {Object.keys(locationTypes).map(key => (\n          <MenuItem key={key} value={key}>\n            {locationTypes[key].label}\n          </MenuItem>\n        ))}\n      </Select>\n      {Component ? (\n        <Component\n          value={value.get('location')}\n          onChange={location => onChange(value.set('location', location))}\n          errors={errors}\n        />\n      ) : null}\n    </FormControl>\n  )\n}\n\nexport default Location\n","import { action } from '@connexta/ace/@storybook/addon-actions'\nimport { storiesOf } from '@connexta/ace/@storybook/react'\nimport { Map } from 'immutable'\nimport React from 'react'\nimport Line, { validate as validateLine } from './line'\nimport Location, { validate } from './location'\nimport PointRadius, { validate as validatePointRadius } from './point-radius'\nimport Polygon, { validate as validatePolygon } from './polygon'\n\nconst stories = storiesOf('Location', module)\nstories.addDecorator(Story => <Story />)\n\nconst lineState = Map({\n  coordinates: [[[0, 0], [1, 1], [2, 2], [3, 3]]],\n  bufferWidth: -1,\n  unit: 'meters',\n})\n\nstories.add('invalid line', () => {\n  const [state, setState] = React.useState(lineState)\n  React.useEffect(() => action('validate')(validateLine(state)), [state])\n  return (\n    <Line\n      value={state}\n      onChange={newState => {\n        setState(newState)\n        action('onChange')(newState)\n      }}\n      errors={validateLine(state)}\n    />\n  )\n})\n\nconst polygonState = Map({\n  coordinates: [\n    [\n      [-108.721313, 37.124358],\n      [-99.349993, 37.124358],\n      [-99.349993, 31.105568],\n      [-108.721313, 31.105568],\n      [-108.721313, 37.124358],\n    ],\n  ],\n  bufferWidth: -1,\n  unit: 'meters',\n})\n\nstories.add('invalid polygon', () => {\n  const [state, setState] = React.useState(polygonState)\n  React.useEffect(() => action('validate')(validatePolygon(state)), [state])\n  return (\n    <Polygon\n      value={state}\n      onChange={newState => {\n        setState(newState)\n        action('onChange')(newState)\n      }}\n      errors={validatePolygon(state)}\n    />\n  )\n})\n\nconst pointRadiusState = Map({\n  lat: 91,\n  lon: -23.888006,\n  bufferWidth: 432.410439,\n  unit: 'miles',\n})\n\nstories.add('invalid point-radius', () => {\n  const [state, setState] = React.useState(pointRadiusState)\n  React.useEffect(() => action('validate')(validatePointRadius(state)), [state])\n  return (\n    <PointRadius\n      value={state}\n      onChange={newState => {\n        setState(newState)\n        action('onChange')(newState)\n      }}\n      errors={validatePointRadius(state)}\n    />\n  )\n})\n\nstories.add('basic', () => {\n  const [state, setState] = React.useState(\n    Map({\n      type: 'line',\n    })\n  )\n  React.useEffect(() => action('validate')(validate(state)), [state])\n  return (\n    <Location\n      value={state}\n      onChange={newState => {\n        setState(newState)\n        action('onChange')(newState)\n      }}\n      errors={validate(state)}\n    />\n  )\n})\n","import { Style, Fill, Circle, Stroke, Icon } from 'ol/style'\nimport { transparentize } from 'polished'\nimport MultiPoint from 'ol/geom/MultiPoint'\nimport { geometry } from 'geospatialdraw'\nconst { BUFFER_CLASSNAME, HIDDEN_CLASSNAME, POINT_RADIUS, POLYGON } = geometry\nimport { getIconText } from './icons/map-pin'\n\nconst LINE_WIDTH = 1.8\nconst POINT_SIZE = 4\nconst SCALE_FACTOR = 1.5\nconst MIN_OPACITY = 0.15\nconst DRAW_COLOR = 'rgba(200, 150, 0, 1)'\nconst SELECTED_COLOR = 'rgba(0, 0, 255, 1)'\nconst ICON_COLOR = 'rgba(0, 125, 0, 1)'\n\nconst featureHasClass = (feature, className) =>\n  (feature.get('class') || []).includes(className)\n\nconst featureColor = (feature, opacity = 1, defaultColor = DRAW_COLOR) => {\n  if (featureHasClass(feature, HIDDEN_CLASSNAME)) {\n    return 'rgba(0, 0, 0, 0)'\n  } else if (feature.get('selected')) {\n    return transparentize(1 - opacity, SELECTED_COLOR)\n  } else {\n    return transparentize(1 - opacity, feature.get('color') || defaultColor)\n  }\n}\n\nconst RENDERER_STYLE = feature =>\n  feature.getGeometry() && feature.getGeometry().getType() === 'Point'\n    ? new Style({\n        stroke: new Stroke({\n          color: featureColor(feature),\n          width: LINE_WIDTH,\n        }),\n        fill: new Fill({\n          color: 'rgba(0, 0, 0, 0)',\n        }),\n        image: new Icon({\n          fill: new Fill({\n            color: featureColor(feature),\n          }),\n          stroke: new Stroke({\n            color: featureColor(feature),\n          }),\n          opacity: 1,\n          src:\n            'data:image/svg+xml,' +\n            escape(\n              getIconText({\n                color: featureColor(feature, 1, ICON_COLOR),\n              })\n            ),\n          scale: 1.5,\n        }),\n      })\n    : new Style({\n        stroke: new Stroke({\n          color: featureColor(feature),\n          width: LINE_WIDTH,\n        }),\n        fill: new Fill({\n          color: 'rgba(0, 0, 0, 0)',\n        }),\n        ...(featureHasClass(feature, BUFFER_CLASSNAME) &&\n        feature.get('shape') === POINT_RADIUS\n          ? {}\n          : {\n              image: new Circle({\n                radius: POINT_SIZE,\n                fill: new Fill({\n                  color: featureColor(feature),\n                }),\n              }),\n            }),\n      })\n\nconst CIRCLE_DRAWING_STYLE = feature =>\n  new Style({\n    stroke: new Stroke({\n      color: 'rgba(0, 0, 0, 0)',\n    }),\n    fill: new Fill({\n      color: 'rgba(0, 0, 0, 0)',\n    }),\n    image: new Circle({\n      radius: POINT_SIZE,\n      fill: new Fill({\n        color: featureColor(feature),\n      }),\n    }),\n  })\n\nconst CIRCLE_BUFFER_PROPERTY_VALUE_DRAWING_STYLE = feature =>\n  new Style({\n    stroke: new Stroke({\n      color: featureColor(feature),\n      width: LINE_WIDTH * SCALE_FACTOR,\n    }),\n    fill: new Fill({\n      color: featureColor(feature, MIN_OPACITY),\n    }),\n  })\n\nconst GENERIC_DRAWING_STYLE = feature => [\n  new Style({\n    stroke: new Stroke({\n      color: featureColor(feature),\n      width: LINE_WIDTH * SCALE_FACTOR,\n    }),\n    fill: new Fill({\n      color: featureColor(feature, MIN_OPACITY),\n    }),\n    ...(feature.getGeometry() &&\n    feature.getGeometry().getType() === 'Point' &&\n    feature.get('buffer') > 0\n      ? {}\n      : {\n          image: new Circle({\n            radius: POINT_SIZE * SCALE_FACTOR,\n            fill: new Fill({\n              color: featureColor(feature),\n            }),\n          }),\n        }),\n  }),\n  new Style({\n    image: new Circle({\n      radius: POINT_SIZE,\n      fill: new Fill({\n        color: featureColor(feature),\n      }),\n    }),\n    geometry: feature => {\n      const geometry = feature.getGeometry()\n      let coordinates = []\n      if (geometry) {\n        if (geometry.getType() === 'Polygon') {\n          coordinates = geometry.getCoordinates()[0]\n        } else if (geometry.getType() === 'LineString') {\n          coordinates = geometry.getCoordinates()\n        }\n      }\n      return new MultiPoint(coordinates)\n    },\n  }),\n]\n\nconst DRAWING_STYLE = feature => {\n  if (feature.getGeometry().getType() === 'Circle') {\n    return CIRCLE_DRAWING_STYLE(feature)\n  } else if (featureHasClass(feature, BUFFER_CLASSNAME)) {\n    return feature.get('shape') === POLYGON\n      ? RENDERER_STYLE(feature)\n      : CIRCLE_BUFFER_PROPERTY_VALUE_DRAWING_STYLE(feature)\n  } else {\n    return GENERIC_DRAWING_STYLE(feature)\n  }\n}\n\nexport { DRAWING_STYLE, RENDERER_STYLE }\n","import Tab from '@material-ui/core/Tab'\nimport Tabs from '@material-ui/core/Tabs'\nimport TextField from '@material-ui/core/TextField'\nimport { Map } from 'immutable'\nimport React from 'react'\nimport Units from './units'\nimport { getDistanceInMeters } from './distance-utils'\n\nexport const validate = (location = Map()) => {\n  const errors = {}\n  const { lat, lon, bufferWidth } = location.toJSON()\n\n  if (lat < -90 || lat > 90) {\n    errors.lat = `Latitude must be between -90 and 90`\n  }\n\n  if (lon < -180 || lon > 180) {\n    errors.lon = `Longitude must be between -180 and 180`\n  }\n\n  if (bufferWidth < 0) {\n    errors.bufferWidth = `Buffer width must be greater or equal to 0`\n  }\n  return errors\n}\n\nexport const generateFilter = (location = Map()) => {\n  const { unit, bufferWidth, lat, lon } = location.toJSON()\n  return {\n    type: 'DWITHIN',\n    property: 'anyGeo',\n    value: {\n      type: 'GEOMETRY',\n      value: `POINT(${lon} ${lat})`,\n    },\n    distance: getDistanceInMeters({ distance: bufferWidth, units: unit }),\n    geojson: {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [lon, lat],\n      },\n      properties: {\n        type: 'Point',\n        buffer: {\n          width: bufferWidth,\n          unit,\n        },\n      },\n    },\n  }\n}\n\nconst LatLon = props => {\n  const { value, onChange, errors } = props\n  const {\n    lat = '',\n    lon = '',\n    bufferWidth = 0,\n    unit = 'meters',\n  } = value.toJSON()\n  return (\n    <div style={{ paddingTop: 10 }}>\n      <TextField\n        fullWidth\n        label=\"Lat\"\n        type=\"number\"\n        error={errors.lat !== undefined}\n        helperText={errors.lat}\n        value={lat}\n        onChange={e => {\n          onChange(value.set('lat', e.target.value))\n        }}\n      />\n      <TextField\n        fullWidth\n        label=\"Lon\"\n        type=\"number\"\n        error={errors.lon !== undefined}\n        helperText={errors.lon}\n        value={lon}\n        onChange={e => {\n          onChange(value.set('lon', e.target.value))\n        }}\n      />\n      <div style={{ display: 'flex', paddingTop: 10 }}>\n        <div style={{ flex: '1', overflow: 'hidden' }}>\n          <TextField\n            fullWidth\n            type=\"number\"\n            label=\"Buffer Width\"\n            error={errors.bufferWidth !== undefined}\n            helperText={errors.bufferWidth}\n            value={bufferWidth}\n            onChange={e => {\n              onChange(value.set('bufferWidth', e.target.value))\n            }}\n          />\n        </div>\n        <div style={{ width: 20 }} />\n        <Units\n          value={unit}\n          onChange={e => {\n            onChange(value.set('unit', e.target.value))\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst tabMap = {\n  0: LatLon,\n  1: null,\n  2: null,\n  3: null,\n}\nconst PointRadius = props => {\n  const { value = Map(), onChange, errors = {} } = props\n  const [tab, setTab] = React.useState(0)\n  const Component = tabMap[tab]\n  return (\n    <div style={{ paddingTop: 10 }}>\n      <Tabs\n        value={tab}\n        onChange={(_, selectedIndex) => {\n          setTab(selectedIndex)\n        }}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"fullWidth\"\n        aria-label=\"full width tabs example\"\n      >\n        <Tab label=\"Lat / Lon (DD)\" />\n        <Tab label=\"Lat / Lon (DMS)\" />\n        <Tab label=\"USNG / MGRS\" />\n        <Tab label=\"UTM / UPS\" />\n      </Tabs>\n      {Component ? (\n        <Component value={value} onChange={onChange} errors={errors} />\n      ) : null}\n    </div>\n  )\n}\n\nexport default PointRadius\n","import TextField from '@material-ui/core/TextField'\nimport { Map } from 'immutable'\nimport React from 'react'\nimport Units from './units'\nimport { getDistanceInMeters } from './distance-utils'\n\nexport const validate = (location = Map()) => {\n  const errors = {}\n  const { coordinates = [], bufferWidth = 0 } = location.toJSON()\n\n  if (typeof coordinates === 'string') {\n    errors.coordinates = `Invalid polygon`\n  }\n\n  if (bufferWidth < 0) {\n    errors.bufferWidth = `Buffer width must be greater or equal to 0`\n  }\n  return errors\n}\n\nconst parsePolygon = polygon =>\n  polygon.map(([lon, lat]) => `${lon} ${lat}`).join()\n\nexport const generateFilter = (location = Map()) => {\n  const { coordinates, bufferWidth, unit } = location.toJSON()\n  return {\n    type: bufferWidth > 0 ? 'DWITHIN' : 'INTERSECTS',\n    property: 'anyGeo',\n    value: {\n      type: 'GEOMETRY',\n      value: `POLYGON((${parsePolygon(coordinates)}))`,\n    },\n    ...(bufferWidth > 0 && {\n      distance: getDistanceInMeters({ distance: bufferWidth, units: unit }),\n    }),\n    geojson: {\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates,\n      },\n      properties: {\n        type: 'Polygon',\n        buffer: {\n          width: bufferWidth,\n          unit,\n        },\n      },\n    },\n  }\n}\n\nconst Polygon = props => {\n  const { value = Map(), onChange, errors = {} } = props\n  const { coordinates = '', bufferWidth = 0, unit = 'meters' } = value.toJSON()\n\n  return (\n    <div style={{ paddingTop: 10 }}>\n      <TextField\n        fullWidth\n        label=\"Polygon\"\n        error={errors.coordinates !== undefined}\n        helperText={errors.coordinates}\n        value={\n          typeof coordinates === 'string'\n            ? coordinates\n            : JSON.stringify(coordinates)\n        }\n        onChange={e => {\n          let coordinates = e.target.value\n          try {\n            coordinates = JSON.parse(coordinates)\n          } catch (e) {}\n          onChange(value.set('coordinates', coordinates))\n        }}\n      />\n      <div style={{ display: 'flex', paddingTop: 10 }}>\n        <div style={{ flex: '1', overflow: 'hidden' }}>\n          <TextField\n            fullWidth\n            type=\"number\"\n            label=\"Buffer Width\"\n            error={errors.bufferWidth !== undefined}\n            helperText={errors.bufferWidth}\n            value={bufferWidth}\n            onChange={e => {\n              onChange(value.set('bufferWidth', e.target.value))\n            }}\n          />\n        </div>\n        <div style={{ width: 20 }} />\n        <Units\n          value={unit}\n          onChange={e => {\n            onChange(value.set('unit', e.target.value))\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Polygon\n","import * as React from 'react'\nimport { QueryFilterProps } from '../filter/filter'\nimport { Box, Switch, Button } from '@material-ui/core'\nimport { Map } from 'immutable'\n\nexport const comparatorOptions = ['=', 'IS NULL']\nexport const comparatorAliases = Map({ '=': 'IS', 'IS NULL': 'IS EMPTY' })\n\nconst BooleanFilter = (props: QueryFilterProps) => {\n  return (\n    <React.Fragment>\n      <Box\n        onClick={() => {\n          props.onChange({\n            value: !props.value,\n            type: props.type,\n            property: props.property,\n          })\n        }}\n        style={{ width: 'fit-content' }}\n      >\n        <Button variant=\"outlined\">\n          <Switch checked={props.value !== false} />\n          {String(props.value !== false)}\n        </Button>\n      </Box>\n    </React.Fragment>\n  )\n}\n\nexport default BooleanFilter\ntry {\n    // @ts-ignore\n    booleanfilter.displayName = \"booleanfilter\";\n    // @ts-ignore\n    booleanfilter.__docgenInfo = { \"description\": \"\", \"displayName\": \"booleanfilter\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-advanced/filter-input/boolean-filter.tsx#booleanfilter\"] = { docgenInfo: booleanfilter.__docgenInfo, name: \"booleanfilter\", path: \"src/main/webapp/query-advanced/filter-input/boolean-filter.tsx#booleanfilter\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport { QueryFilterProps } from '../filter/filter'\nconst { default: TimeRange, createTimeRange } = require('../../time-range')\nconst { uglyMap, parseRelative } = require('../../basic-search-helper')\n\nexport const comparatorOptions = ['BEFORE', 'AFTER', '=', 'DURING', 'IS NULL']\n\nconst fromFilter = (filter: any) => {\n  if (filter.type === '=') {\n    const { last, unit } = parseRelative(filter.value)\n    return createTimeRange({\n      last,\n      unit,\n      type: filter.type,\n    })\n  }\n\n  if (filter.type === 'DURING') {\n    const dates = filter.value.split('/')\n    return createTimeRange({\n      type: filter.type,\n      from: new Date(dates[0]),\n      to: new Date(dates[1]),\n    })\n  }\n  const { value, type } = filter\n\n  return createTimeRange({ value, type })\n}\n\nconst DateFilter = (props: QueryFilterProps) => {\n  const toFilter = (timeRange: any) => {\n    if (timeRange.type === '=') {\n      const { last, unit } = timeRange\n      return {\n        property: props.property,\n        value: uglyMap[unit](last),\n        type: timeRange.type,\n      }\n    }\n    if (timeRange.type === 'DURING') {\n      const { from, to } = timeRange\n      return {\n        property: props.property,\n        value: `${new Date(from).toISOString()}/${new Date(to).toISOString()}`,\n        type: timeRange.type,\n      }\n    }\n    return {\n      property: props.property,\n      value: timeRange.value,\n      type: timeRange.type,\n    }\n  }\n  return (\n    <TimeRange\n      timeRange={fromFilter(props)}\n      setTimeRange={(value: any) => {\n        props.onChange(toFilter(value))\n      }}\n    />\n  )\n}\n\nexport default DateFilter\ntry {\n    // @ts-ignore\n    datefilter.displayName = \"datefilter\";\n    // @ts-ignore\n    datefilter.__docgenInfo = { \"description\": \"\", \"displayName\": \"datefilter\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-advanced/filter-input/date-filter.tsx#datefilter\"] = { docgenInfo: datefilter.__docgenInfo, name: \"datefilter\", path: \"src/main/webapp/query-advanced/filter-input/date-filter.tsx#datefilter\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport { useState } from 'react'\nimport { QueryFilterProps } from '../filter/filter'\nimport { Map } from 'immutable'\nimport { Box } from '@material-ui/core'\nimport { filterComponentStyle } from '../filter/filter-utils'\nconst getLocationFilter = require('../../basic-search-helper').getLocationFilter\nconst validateLocation = require('../../location').validate\nconst Location = require('../../location').default\n\n//Consider removing in future commit\nconst isEmpty = (checkThis: any) => {\n  return Object.keys(checkThis).length === 0\n}\n\nconst LocationFilter = (props: QueryFilterProps) => {\n  //Remove state in future commit\n  const [location, setLocation] = useState(Map({ type: 'line' }))\n\n  return (\n    <React.Fragment>\n      <Box style={filterComponentStyle}>\n        <Location\n          value={location}\n          onChange={(value: any) => {\n            setLocation(value)\n            if (isEmpty(validateLocation(value))) {\n              const filter = getLocationFilter(value)\n              if (filter) {\n                props.onChange(getLocationFilter(value))\n              }\n            }\n          }}\n        />\n      </Box>\n    </React.Fragment>\n  )\n}\n\nexport default LocationFilter\ntry {\n    // @ts-ignore\n    locationfilter.displayName = \"locationfilter\";\n    // @ts-ignore\n    locationfilter.__docgenInfo = { \"description\": \"\", \"displayName\": \"locationfilter\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-advanced/filter-input/location-filter.tsx#locationfilter\"] = { docgenInfo: locationfilter.__docgenInfo, name: \"locationfilter\", path: \"src/main/webapp/query-advanced/filter-input/location-filter.tsx#locationfilter\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport { QueryFilterProps } from '../filter/filter'\nimport { TextField, Box } from '@material-ui/core'\nimport { metacardDefinitions } from '../filter/dummyDefinitions'\nimport { Map } from 'immutable'\n\nexport const comparatorOptions = [\n  '>',\n  '<',\n  '=',\n  '>=',\n  '<=',\n  'BETWEEN',\n  'IS NULL',\n]\nexport const comparatorAliases = Map({\n  BETWEEN: 'RANGE',\n  'IS NULL': 'IS EMPTY',\n})\n\nconst intRegex = /^(-?\\d*$)|^$/\nconst floatRegex = /^-?\\d*(\\.\\d*)?$|^$/\n\nconst isInteger = (type: any) =>\n  type === 'INTEGER' || type === 'SHORT' || type === 'LONG'\n\nconst FloatInput = (props: any) => {\n  return (\n    <TextField\n      onChange={event => {\n        const value = event.target.value\n        if (value.match(floatRegex)) {\n          props.onChange(value)\n        }\n      }}\n      value={props.value}\n      variant=\"outlined\"\n      style={{ width: 100 }}\n    />\n  )\n}\n\nconst IntegerInput = (props: any) => {\n  return (\n    <TextField\n      onChange={event => {\n        const value = event.target.value\n        if (value.match(intRegex)) {\n          props.onChange(value)\n        }\n      }}\n      value={props.value}\n      variant=\"outlined\"\n      style={{ width: 100 }}\n    />\n  )\n}\nconst NumberInput = (props: any) => {\n  if (props.isInt) {\n    return <IntegerInput {...props} />\n  } else {\n    return <FloatInput {...props} />\n  }\n}\n\n//TODO Convert value to number on way out of query-advanced - currently being passed as string\nconst NumberFilter = (props: QueryFilterProps) => {\n  const isInt = isInteger(metacardDefinitions.get(props.property))\n  if (props.type !== 'BETWEEN') {\n    return (\n      <NumberInput\n        isInt={isInt}\n        onChange={(value: string) => {\n          const { property, type } = props\n          props.onChange({ property, type, value })\n        }}\n        value={props.value}\n      />\n    )\n  } else {\n    return (\n      <Box style={{ display: 'flex', alignItems: 'center' }}>\n        <NumberInput\n          isInt={isInt}\n          onChange={(value: string) => {\n            const { property, type } = props\n            props.onChange({\n              property,\n              type,\n              value: { ...props.value, lower: value },\n            })\n          }}\n          value={props.value.lower}\n        />\n        <Box style={{ margin: 10 }} component=\"span\">\n          TO\n        </Box>\n        <NumberInput\n          isInt={isInt}\n          onChange={(value: string) => {\n            const { property, type } = props\n            props.onChange({\n              property,\n              type,\n              value: { ...props.value, upper: value },\n            })\n          }}\n          value={props.value.upper}\n        />\n      </Box>\n    )\n  }\n}\n\nexport default NumberFilter\ntry {\n    // @ts-ignore\n    numberfilter.displayName = \"numberfilter\";\n    // @ts-ignore\n    numberfilter.__docgenInfo = { \"description\": \"\", \"displayName\": \"numberfilter\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-advanced/filter-input/number-filter.tsx#numberfilter\"] = { docgenInfo: numberfilter.__docgenInfo, name: \"numberfilter\", path: \"src/main/webapp/query-advanced/filter-input/number-filter.tsx#numberfilter\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport { QueryFilterProps } from '../filter/filter'\nimport { TextField, Box } from '@material-ui/core'\nimport { Map } from 'immutable'\n\nexport const comparatorOptions = ['ILIKE', 'LIKE', '=', 'NEAR', 'IS NULL']\nexport const comparatorAliases = Map({\n  ILIKE: 'CONTAINS',\n  LIKE: 'MATCHCASE',\n  'IS NULL': 'IS EMPTY',\n})\n\nconst intRegex = /^(-?\\d*$)|^$/\n\nconst TextFilter = (props: QueryFilterProps) => {\n  return (\n    <TextField\n      placeholder=\"Use * for wildcard\"\n      variant=\"outlined\"\n      fullWidth\n      onChange={event => {\n        const { property, type } = props\n        const value = event.target.value\n        props.onChange({ property, type, value })\n      }}\n      value={props.value}\n    />\n  )\n}\n\nconst NearFilter = (props: QueryFilterProps) => {\n  return (\n    <Box style={{ width: '100%', display: 'flex', alignItems: 'center' }}>\n      <TextField\n        variant=\"outlined\"\n        style={{ width: '45%' }}\n        onChange={event => {\n          const { property, type } = props\n          const value = event.target.value\n          props.onChange({\n            property,\n            type,\n            value: { ...props.value, value },\n          })\n        }}\n        value={props.value.value}\n      />\n      <Box style={{ margin: 10 }} component=\"span\">\n        within\n      </Box>\n      <TextField\n        variant=\"outlined\"\n        style={{ width: 100 }}\n        onChange={event => {\n          const { property, type } = props\n          const value = event.target.value\n          if (!value.match(intRegex)) return\n          props.onChange({\n            property,\n            type,\n            value: { ...props.value, distance: value },\n          })\n        }}\n        value={props.value.distance}\n      />\n    </Box>\n  )\n}\n\nconst Filter = (props: QueryFilterProps) => {\n  return (\n    <React.Fragment>\n      {props.type !== 'NEAR' ? (\n        <TextFilter {...props} />\n      ) : (\n        <NearFilter {...props} />\n      )}\n    </React.Fragment>\n  )\n}\nexport default Filter\ntry {\n    // @ts-ignore\n    textfilter.displayName = \"textfilter\";\n    // @ts-ignore\n    textfilter.__docgenInfo = { \"description\": \"\", \"displayName\": \"textfilter\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-advanced/filter-input/text-filter.tsx#textfilter\"] = { docgenInfo: textfilter.__docgenInfo, name: \"textfilter\", path: \"src/main/webapp/query-advanced/filter-input/text-filter.tsx#textfilter\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport Select from 'react-select'\nimport { metacardDefinitions } from '../filter/dummyDefinitions'\nimport { Map } from 'immutable'\nimport { Box } from '@material-ui/core'\n\nconst attributeAliases = Map({\n  'date-created': 'Date Created',\n  enterprise: 'Enterprise',\n})\n\nconst createOption = (option: string) => ({\n  value: option,\n  label: attributeAliases.get(option) || option,\n})\n\nconst AttributeDropdown = (props: any) => {\n  const options = Array.from(metacardDefinitions.keys()).map(createOption)\n  const value = options.find(option => option.value === props.value)\n  return (\n    <Box style={{ margin: 5 }}>\n      <Select\n        options={options}\n        value={value}\n        onChange={(option: any) => {\n          props.onChange(option.value)\n        }}\n      />\n    </Box>\n  )\n}\n\nexport default AttributeDropdown\ntry {\n    // @ts-ignore\n    attributedropdown.displayName = \"attributedropdown\";\n    // @ts-ignore\n    attributedropdown.__docgenInfo = { \"description\": \"\", \"displayName\": \"attributedropdown\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-advanced/filter/attribute-dropdown.tsx#attributedropdown\"] = { docgenInfo: attributedropdown.__docgenInfo, name: \"attributedropdown\", path: \"src/main/webapp/query-advanced/filter/attribute-dropdown.tsx#attributedropdown\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport useAnchorEl from '../../react-hooks/use-anchor-el'\nimport { Button, Box, Popover, MenuItem } from '@material-ui/core'\nimport { ArrowDropDown as DropDownIcon } from '@material-ui/icons'\nimport { Map } from 'immutable'\n\ntype Props = {\n  selected: string\n  options: Array<string>\n  aliases?: Map<string, string>\n  onChange: (value: string) => void\n  style?: React.CSSProperties\n}\n\nconst ComparatorMenu = (props: Props) => {\n  const [anchorEl, open, close] = useAnchorEl()\n  return (\n    <React.Fragment>\n      <Button\n        style={{ width: 'fit-content', margin: 5 }}\n        variant=\"outlined\"\n        onClick={open as any}\n      >\n        <Box>\n          <Box\n            style={{\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              justifyContent: 'left',\n              float: 'left',\n              maxWidth: 'calc(100% - 24px)',\n              textTransform: 'none',\n            }}\n            component=\"span\"\n          >\n            {props.aliases\n              ? props.aliases.get(props.selected) || props.selected\n              : props.selected}\n          </Box>\n          <DropDownIcon style={{ float: 'right' }} />\n        </Box>\n      </Button>\n      <Popover\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n        anchorOrigin={{ horizontal: 'center', vertical: 'bottom' }}\n        onClose={close}\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl as any}\n      >\n        {props.options.map(option => {\n          return (\n            <MenuItem\n              onClick={() => {\n                close()\n                props.onChange(option)\n              }}\n              key={option}\n              value={option}\n            >\n              {props.aliases ? props.aliases.get(option) || option : option}\n            </MenuItem>\n          )\n        })}\n      </Popover>\n    </React.Fragment>\n  )\n}\n\nexport default ComparatorMenu\ntry {\n    // @ts-ignore\n    comparatordropdown.displayName = \"comparatordropdown\";\n    // @ts-ignore\n    comparatordropdown.__docgenInfo = { \"description\": \"\", \"displayName\": \"comparatordropdown\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-advanced/filter/comparator-dropdown.tsx#comparatordropdown\"] = { docgenInfo: comparatordropdown.__docgenInfo, name: \"comparatordropdown\", path: \"src/main/webapp/query-advanced/filter/comparator-dropdown.tsx#comparatordropdown\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export type MetacardType =\n  | 'STRING'\n  | 'XML'\n  | 'DATE'\n  | 'LOCATION'\n  | 'BOOLEAN'\n  | 'INTEGER'\n  | 'SHORT'\n  | 'LONG'\n  | 'FLOAT'\n  | 'DOUBLE'\n\nexport const metacardDefinitions: Map<string, MetacardType> = new Map([\n  ['anyText', 'STRING'],\n  ['date-created', 'DATE'],\n  ['anyGeo', 'LOCATION'],\n  ['enterprise', 'BOOLEAN'],\n  ['an integer', 'INTEGER'],\n  ['a float', 'FLOAT'],\n])\n","import * as React from 'react'\nimport { QueryFilter, Filter } from './filter'\nimport { Box, Button } from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\nimport {\n  defaultFilter,\n  filterHeaderButtonStyle,\n  withDivider,\n  withRemoveButton,\n} from './filter-utils'\nimport Operator from './operator'\n\nexport type FilterGroupType = {\n  type: string\n  filters: Array<FilterGroupType | QueryFilter>\n}\n\nexport type FilterGroupProps = FilterGroupType & {\n  limitDepth?: number // Used to limit number of nested groups\n  onChange: (value: FilterGroupType) => void\n  onRemove?: () => void\n}\n\nexport const isFilterGroup = (\n  object: QueryFilter | FilterGroupType\n): object is FilterGroupType =>\n  (object as FilterGroupType).filters !== undefined\n\nconst getValue = (props: FilterGroupProps) => {\n  const { type, filters } = props\n  return { type, filters }\n}\n\nconst FilterGroup = withRemoveButton(\n  withDivider((props: FilterGroupProps) => {\n    return (\n      <Box>\n        <Header {...props} />\n        <FilterList {...props} />\n      </Box>\n    )\n  })\n)\n\nconst Header = (props: FilterGroupProps) => {\n  return (\n    <Box style={{ display: 'flex' }}>\n      <Operator\n        onChange={(value: string) => {\n          props.onChange({ ...getValue(props), type: value })\n        }}\n        selected={props.type}\n      />\n      <Button\n        onClick={() => {\n          const filters = props.filters.slice()\n          filters.push({ ...defaultFilter })\n          props.onChange({ ...getValue(props), filters })\n        }}\n        style={filterHeaderButtonStyle}\n        variant=\"outlined\"\n      >\n        <Add fontSize=\"small\" style={{ marginRight: 5 }} />\n        <Box style={{ margin: 'auto' }}>Add Field</Box>\n      </Button>\n      {(props.limitDepth === undefined || props.limitDepth !== 0) && (\n        <Button\n          style={filterHeaderButtonStyle}\n          onClick={() => {\n            const filters = props.filters.slice()\n            filters.push({ type: 'AND', filters: [{ ...defaultFilter }] })\n            props.onChange({ ...getValue(props), filters })\n          }}\n          variant=\"outlined\"\n        >\n          <Add fontSize=\"small\" style={{ marginRight: 5 }} />\n          <Box style={{ margin: 'auto' }}>Add Group</Box>\n        </Button>\n      )}\n    </Box>\n  )\n}\n\nconst FilterList = (props: FilterGroupProps) => {\n  return (\n    <Box>\n      {props.filters.map((filter, i) => {\n        const onChange = (value: FilterGroupType | QueryFilter) => {\n          const filters = props.filters.slice()\n          filters[i] = value\n          props.onChange({ ...getValue(props), filters })\n        }\n        const onRemove = () => {\n          const filters = props.filters.slice()\n          filters.splice(i, 1)\n          props.onChange({\n            ...getValue(props),\n            filters,\n          })\n        }\n        if (isFilterGroup(filter)) {\n          return (\n            <Box key={i} style={{ margin: 10, marginLeft: 0 }}>\n              <FilterGroup\n                limitDepth={\n                  props.limitDepth !== undefined\n                    ? props.limitDepth - 1\n                    : undefined\n                }\n                {...filter}\n                onChange={onChange}\n                onRemove={onRemove}\n              />\n            </Box>\n          )\n        } else {\n          return (\n            <Box key={i} style={{ margin: 10, marginLeft: 0 }}>\n              <Filter {...filter} onChange={onChange} onRemove={onRemove} />\n            </Box>\n          )\n        }\n      })}\n    </Box>\n  )\n}\n\nexport default FilterGroup\ntry {\n    // @ts-ignore\n    isFilterGroup.displayName = \"isFilterGroup\";\n    // @ts-ignore\n    isFilterGroup.__docgenInfo = { \"description\": \"\", \"displayName\": \"isFilterGroup\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-advanced/filter/filter-group.tsx#isFilterGroup\"] = { docgenInfo: isFilterGroup.__docgenInfo, name: \"isFilterGroup\", path: \"src/main/webapp/query-advanced/filter/filter-group.tsx#isFilterGroup\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport { Box } from '@material-ui/core'\nimport Fab from '@material-ui/core/Fab'\nimport { Remove } from '@material-ui/icons'\nimport { MetacardType } from './dummyDefinitions'\nimport { Map } from 'immutable'\n\nexport const withRemoveButton = (Component: any) => {\n  return (props: any) => {\n    return typeof props.onRemove === 'function' ? (\n      <Box style={{ display: 'flex', alignItems: 'center' }}>\n        <Box style={{ margin: 10 }}>\n          <Fab onClick={() => props.onRemove()} size=\"small\" color=\"secondary\">\n            <Remove />\n          </Fab>\n        </Box>\n        <Component {...props} />\n      </Box>\n    ) : (\n      <Component {...props} />\n    )\n  }\n}\n\nexport const withDivider = (Component: any) => {\n  return (props: any) => (\n    <Box style={{ display: 'flex' }}>\n      <Box>\n        <Divider />\n      </Box>\n      <Component {...props} />\n    </Box>\n  )\n}\n\nconst Divider = () => (\n  <Box\n    style={{\n      height: '100%',\n      width: 12,\n      backgroundColor: 'rgba(255, 0, 0, 0.2)',\n      float: 'left',\n      borderRadius: '14px',\n      marginRight: 10,\n    }}\n  />\n)\n\nexport const defaultFilter = {\n  property: 'anyText',\n  type: 'Contains',\n  value: '',\n}\n\nexport const filterHeaderButtonStyle = {\n  height: 'fit-content',\n  margin: 'auto',\n  marginLeft: 0,\n  marginRight: 10,\n}\n\nexport const filterComponentStyle = {\n  margin: 5,\n}\n\nexport const getDefaultValue = (type: MetacardType | undefined) => {\n  switch (type) {\n    case 'LOCATION':\n      return Map({ type: 'line' })\n    case 'DATE':\n      return new Date()\n    case 'BOOLEAN':\n      return false\n    case 'STRING':\n      return ''\n    case 'INTEGER':\n    case 'SHORT':\n    case 'LONG':\n      return 0\n    case 'FLOAT':\n    case 'DOUBLE':\n      return 0.0\n    default:\n      return ''\n  }\n}\ntry {\n    // @ts-ignore\n    withRemoveButton.displayName = \"withRemoveButton\";\n    // @ts-ignore\n    withRemoveButton.__docgenInfo = { \"description\": \"\", \"displayName\": \"withRemoveButton\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-advanced/filter/filter-utils.tsx#withRemoveButton\"] = { docgenInfo: withRemoveButton.__docgenInfo, name: \"withRemoveButton\", path: \"src/main/webapp/query-advanced/filter/filter-utils.tsx#withRemoveButton\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    withDivider.displayName = \"withDivider\";\n    // @ts-ignore\n    withDivider.__docgenInfo = { \"description\": \"\", \"displayName\": \"withDivider\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-advanced/filter/filter-utils.tsx#withDivider\"] = { docgenInfo: withDivider.__docgenInfo, name: \"withDivider\", path: \"src/main/webapp/query-advanced/filter/filter-utils.tsx#withDivider\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getDefaultValue.displayName = \"getDefaultValue\";\n    // @ts-ignore\n    getDefaultValue.__docgenInfo = { \"description\": \"\", \"displayName\": \"getDefaultValue\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-advanced/filter/filter-utils.tsx#getDefaultValue\"] = { docgenInfo: getDefaultValue.__docgenInfo, name: \"getDefaultValue\", path: \"src/main/webapp/query-advanced/filter/filter-utils.tsx#getDefaultValue\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react'\nimport { Box } from '@material-ui/core'\nimport {\n  withDivider,\n  withRemoveButton,\n  getDefaultValue,\n  filterComponentStyle,\n} from './filter-utils'\nimport { metacardDefinitions } from './dummyDefinitions'\nimport TextFilter, {\n  comparatorOptions as textComparators,\n  comparatorAliases as textAliases,\n} from '../filter-input/text-filter'\nimport LocationFilter from '../filter-input/location-filter'\nimport DateFilter, {\n  comparatorOptions as dateComparators,\n} from '../filter-input/date-filter'\nimport BooleanFilter, {\n  comparatorOptions as booleanComparators,\n  comparatorAliases as booleanAliases,\n} from '../filter-input/boolean-filter'\nimport ComparatorDropdown from './comparator-dropdown'\nimport NumberFilter, {\n  comparatorOptions as numberComparators,\n  comparatorAliases as numberAliases,\n} from '../filter-input/number-filter'\nimport { FROM, TO } from './value-transformations'\nimport AttributeDropdown from './attribute-dropdown'\n\n//In this format to make querying easy\nexport type QueryFilter = {\n  property: string\n  type: string\n  value: any\n}\nexport type QueryFilterProps = QueryFilter & {\n  onChange: (value: QueryFilter) => void\n  onRemove?: () => void\n}\n\nconst Inputs = {\n  LOCATION: LocationFilter,\n  DATE: DateFilter,\n  BOOLEAN: BooleanFilter,\n  //Strings\n  STRING: TextFilter,\n  XML: TextFilter,\n  //Numbers\n  FLOAT: NumberFilter,\n  DOUBLE: NumberFilter,\n  INTEGER: NumberFilter,\n  SHORT: NumberFilter,\n  LONG: NumberFilter,\n}\n\nconst Comparators = {\n  BOOLEAN: { options: booleanComparators, aliases: booleanAliases },\n  DATE: { options: dateComparators, aliases: undefined },\n  LOCATION: { options: textComparators, aliases: textAliases },\n  //Strings\n  STRING: { options: textComparators, aliases: textAliases },\n  XML: { options: textComparators, aliases: textAliases },\n  //Numbers\n  FLOAT: { options: numberComparators, aliases: numberAliases },\n  DOUBLE: { options: numberComparators, aliases: numberAliases },\n  INTEGER: { options: numberComparators, aliases: numberAliases },\n  SHORT: { options: numberComparators, aliases: numberAliases },\n  LONG: { options: numberComparators, aliases: numberAliases },\n}\n\nexport const Filter = withRemoveButton(\n  withDivider((props: QueryFilterProps) => {\n    const type = metacardDefinitions.get(props.property) || 'STRING'\n    const Component = Inputs[type] || TextFilter\n    const comparators = Comparators[type]\n\n    const comparatorOptions =\n      props.property !== 'anyText' && props.property !== 'anyGeo'\n        ? comparators.options\n        : comparators.options.filter((option: string) => option !== 'IS NULL')\n\n    const comparatorAliases = comparators.aliases\n    return (\n      <Box\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          minWidth: '325px',\n          maxWidth: '400px',\n          overflow: 'visible',\n        }}\n      >\n        <AttributeDropdown\n          value={props.property}\n          onChange={(newProperty: string) => {\n            const { property, type, value } = props\n            const prevType = metacardDefinitions.get(property) || 'STRING'\n            const newType = metacardDefinitions.get(newProperty) || 'STRING'\n            if (prevType !== newType) {\n              const newComparators = Comparators[newType].options\n              props.onChange({\n                type: newComparators[0],\n                property: newProperty,\n                value: getDefaultValue(newType),\n              })\n            } else {\n              props.onChange({ type, value, property: newProperty })\n            }\n          }}\n        />\n        {type !== 'LOCATION' && type !== 'DATE' ? (\n          <ComparatorDropdown\n            onChange={(newType: string) => {\n              let { property, value } = props\n              if (newType !== props.type) {\n                if (FROM[props.type] !== undefined) {\n                  value = FROM[props.type](value)\n                } else if (TO[newType] !== undefined) {\n                  value = TO[newType](value)\n                }\n              }\n              props.onChange({ property, value, type: newType })\n            }}\n            selected={props.type}\n            options={comparatorOptions}\n            aliases={comparatorAliases}\n          />\n        ) : null}\n\n        {props.type !== 'IS NULL' && (\n          <Box style={filterComponentStyle}>\n            <Component {...props} />\n          </Box>\n        )}\n      </Box>\n    )\n  })\n)\n","import * as React from 'react'\nimport useAnchorEl from '../../react-hooks/use-anchor-el'\nimport { Button, Popover, MenuItem } from '@material-ui/core'\nimport { ArrowDropDown } from '@material-ui/icons'\nimport { filterHeaderButtonStyle } from './filter-utils'\n\nconst operators = ['AND', 'OR', 'NOT AND', 'NOT OR']\n\nconst withOperators = (Component: any) => {\n  return (props: any) => {\n    return <Component operators={operators} {...props} />\n  }\n}\n\ntype OperatorProps = {\n  operators: Array<string>\n  selected: string\n  onChange: (value: string) => void\n}\n\nconst Operator = withOperators((props: OperatorProps) => {\n  const [anchorEl, open, close] = useAnchorEl()\n  return (\n    <React.Fragment>\n      <Button\n        style={filterHeaderButtonStyle}\n        variant=\"outlined\"\n        onClick={open as any}\n      >\n        {props.selected}\n        <ArrowDropDown />\n      </Button>\n      <Popover\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n        anchorOrigin={{ horizontal: 'center', vertical: 'bottom' }}\n        onClose={close}\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl as any}\n      >\n        {props.operators.map(operator => {\n          return (\n            <MenuItem\n              onClick={() => {\n                close()\n                props.onChange(operator)\n              }}\n              key={operator}\n            >\n              {operator}\n            </MenuItem>\n          )\n        })}\n      </Popover>\n    </React.Fragment>\n  )\n})\n\nexport default Operator\ntry {\n    // @ts-ignore\n    operator.displayName = \"operator\";\n    // @ts-ignore\n    operator.__docgenInfo = { \"description\": \"\", \"displayName\": \"operator\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-advanced/filter/operator.tsx#operator\"] = { docgenInfo: operator.__docgenInfo, name: \"operator\", path: \"src/main/webapp/query-advanced/filter/operator.tsx#operator\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","const toNearFilter = (value: string) => ({ value, distance: 2 })\n\nconst fromNearFilter = (value: any) => value.value\n\nconst toBetweenFilter = (value: string) => ({ lower: value, upper: value })\n\nconst fromBetweenFilter = (value: any) => value.lower\n\nexport const FROM: any = {\n  NEAR: fromNearFilter,\n  BETWEEN: fromBetweenFilter,\n}\n\nexport const TO: any = {\n  NEAR: toNearFilter,\n  BETWEEN: toBetweenFilter,\n}\n","import { isFilterGroup } from './filter/filter-group'\nimport { metacardDefinitions } from './filter/dummyDefinitions'\nimport { getDefaultValue } from './filter/filter-utils'\n\nexport const deserialize = (filter: any) => {\n  if (isFilterGroup(filter)) {\n    const filters: any = filter.filters.map(deserialize)\n    return { ...filter, filters }\n  } else {\n    if (typeof filter.property === 'object') {\n      // if the filter is something like NEAR (which maps to a CQL filter function such as 'proximity'),\n      // there is an enclosing filter that creates the necessary '= TRUE' predicate, and the 'property'\n      // attribute is what actually contains that proximity() call.\n      const { filterFunctionName, params } = filter.property\n      if (filterFunctionName !== 'proximity') {\n        throw new Error(\n          'Unsupported filter function in filter view: ' + filterFunctionName\n        )\n      }\n      const [property, distance, value] = params\n      filter.property = property\n      filter.type = 'NEAR'\n      filter.value = { distance, value }\n    }\n\n    if (filter.type === 'BETWEEN') {\n      filter.value = {\n        lower: filter.lowerBoundary,\n        upper: filter.upperBoundary,\n      }\n    }\n    if (filter.type === 'IS NULL') {\n      filter.value = getDefaultValue(metacardDefinitions.get(filter.property))\n    }\n    return { ...filter }\n  }\n}\n\nconst generateFilterFunction = (filterFunctionName: string, params: any) => {\n  return {\n    type: '=',\n    value: true,\n    property: {\n      type: 'FILTER_FUNCTION',\n      filterFunctionName,\n      params,\n    },\n  }\n}\n\nconst generateIsEmptyFilter = (property: string) => {\n  return {\n    type: 'IS NULL',\n    property,\n    value: null,\n  }\n}\n\nexport const serialize = (filter: any) => {\n  if (isFilterGroup(filter)) {\n    const filters: any = filter.filters.map(serialize)\n    return { ...filter, filters }\n  }\n  switch (filter.type) {\n    case 'NEAR':\n      return generateFilterFunction('proximity', [\n        filter.property,\n        filter.value.distance,\n        filter.value.value,\n      ])\n    case 'IS NULL':\n      return generateIsEmptyFilter(filter.property)\n  }\n\n  switch (metacardDefinitions.get(filter.property)) {\n    case 'FLOAT':\n    case 'DOUBLE':\n      if (filter.type === 'BETWEEN') {\n        return {\n          ...filter,\n          lowerBoundary: parseFloat(filter.value.lower),\n          upperBoundary: parseFloat(filter.value.upper),\n        }\n      }\n      return {\n        ...filter,\n        value: parseFloat(filter.value),\n      }\n    case 'INTEGER':\n    case 'LONG':\n    case 'SHORT':\n      if (filter.type === 'BETWEEN') {\n        return {\n          ...filter,\n          lowerBoundary: parseInt(filter.value.lower),\n          upperBoundary: parseInt(filter.value.upper),\n        }\n      }\n      return {\n        ...filter,\n        value: parseInt(filter.value),\n      }\n  }\n  return { ...filter }\n}\ntry {\n    // @ts-ignore\n    deserialize.displayName = \"deserialize\";\n    // @ts-ignore\n    deserialize.__docgenInfo = { \"description\": \"\", \"displayName\": \"deserialize\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-advanced/query-advanced-serialization.tsx#deserialize\"] = { docgenInfo: deserialize.__docgenInfo, name: \"deserialize\", path: \"src/main/webapp/query-advanced/query-advanced-serialization.tsx#deserialize\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    serialize.displayName = \"serialize\";\n    // @ts-ignore\n    serialize.__docgenInfo = { \"description\": \"\", \"displayName\": \"serialize\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-advanced/query-advanced-serialization.tsx#serialize\"] = { docgenInfo: serialize.__docgenInfo, name: \"serialize\", path: \"src/main/webapp/query-advanced/query-advanced-serialization.tsx#serialize\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { storiesOf } from '@connexta/ace/@storybook/react'\nimport QueryAdvanced from './query-advanced'\nimport * as React from 'react'\nimport { action } from '@storybook/addon-actions'\nimport { withKnobs, number } from '@storybook/addon-knobs'\nconst stories = storiesOf('Query Advanced', module)\n\nconst baseFilter = {\n  property: 'date-created',\n  type: 'DURING',\n  value: '2019-10-13T17:36:00.000Z/2019-10-30T17:36:00.000Z',\n}\n\nconst baseFilterGroup = {\n  type: 'AND',\n  filters: [baseFilter],\n}\n\nconst nearFilter = {\n  type: '=',\n  value: true,\n  property: {\n    type: 'FILTER_FUNCTION',\n    filterFunctionName: 'proximity',\n    params: ['anyText', '2', 'hello there'],\n  },\n}\n\nconst rangeFilter = {\n  type: 'BETWEEN',\n  property: 'an integer',\n  value: '',\n  lowerBoundary: 1,\n  upperBoundary: 5,\n}\n\nconst deserializedFilters = {\n  type: 'OR',\n  filters: [nearFilter, rangeFilter],\n}\n\nstories.addDecorator(withKnobs)\nstories.add('basic', () => {\n  return (\n    <QueryAdvanced\n      limitDepth={number('Nesting Depth', 1)}\n      {...baseFilterGroup}\n      onSearch={(value: any) => {\n        action('onSearch')(value)\n      }}\n    />\n  )\n})\n\nstories.add('with deserialized filters', () => {\n  return (\n    <QueryAdvanced\n      limitDepth={number('Nesting Depth', 1)}\n      {...deserializedFilters}\n      onSearch={(value: any) => {\n        action('onSearch')(value)\n      }}\n    />\n  )\n})\n","import * as React from 'react'\nimport { useState } from 'react'\nimport { Paper, Button } from '@material-ui/core'\nimport FilterGroup from './filter/filter-group'\nimport { deserialize, serialize } from './query-advanced-serialization'\n\nconst getFilterTree = (props: any) => {\n  const { filters, type } = props\n  return { filters, type }\n}\n\nconst QueryAdvanced = (props: any) => {\n  const [filterTree, setFilterTree] = useState(\n    deserialize(getFilterTree(props))\n  )\n\n  return (\n    <Paper\n      style={{\n        maxWidth: 500,\n        padding: 20,\n      }}\n    >\n      <FilterGroup\n        {...filterTree}\n        limitDepth={props.limitDepth}\n        onChange={setFilterTree}\n      />\n      <Button\n        style={{ marginTop: 5 }}\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => props.onSearch(serialize(filterTree))}\n      >\n        Search\n      </Button>\n    </Paper>\n  )\n}\n\nexport default QueryAdvanced\ntry {\n    // @ts-ignore\n    queryadvanced.displayName = \"queryadvanced\";\n    // @ts-ignore\n    queryadvanced.__docgenInfo = { \"description\": \"\", \"displayName\": \"queryadvanced\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/main/webapp/query-advanced/query-advanced.tsx#queryadvanced\"] = { docgenInfo: queryadvanced.__docgenInfo, name: \"queryadvanced\", path: \"src/main/webapp/query-advanced/query-advanced.tsx#queryadvanced\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import React from 'react'\n\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled'\n\nimport Typography from '@material-ui/core/Typography'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport Grid from '@material-ui/core/Grid'\n\nconst formatStatus = (status = 'Unknown', info = {}) => {\n  if (status === 'source.canceled' || status === 'source.error') {\n    return (\n      <Typography variant=\"subtitle2\" color=\"secondary\">\n        <Grid container alignItems=\"center\" spacing={1}>\n          <Grid item>\n            <ErrorIcon style={{ height: '0.8em' }} />\n          </Grid>\n          <Grid item>{info.message || status}</Grid>\n        </Grid>\n      </Typography>\n    )\n  }\n\n  if (status === 'source.success') {\n    const { hits, count, elapsed } = info\n    return (\n      <Typography variant=\"subtitle2\" color=\"textSecondary\">\n        Available: {count}, Possible: {hits}, Time: {elapsed}\n        ms\n      </Typography>\n    )\n  }\n\n  return (\n    <Typography variant=\"subtitle2\" color=\"textSecondary\">\n      {status}\n    </Typography>\n  )\n}\n\nconst Cancel = props => {\n  const { onCancel } = props\n  return (\n    <div style={{ position: 'relative' }}>\n      <IconButton\n        key=\"cancel\"\n        title=\"Cancel\"\n        color=\"secondary\"\n        onClick={onCancel}\n      >\n        <CancelIcon />\n      </IconButton>\n      <div\n        style={{\n          zIndex: -1,\n          position: 'absolute',\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <CircularProgress size={30} />\n      </div>\n    </div>\n  )\n}\n\nconst Run = props => {\n  const { onRun } = props\n\n  return (\n    <IconButton key=\"run\" title=\"Run\" color=\"primary\" onClick={onRun}>\n      <PlayCircleFilledIcon />\n    </IconButton>\n  )\n}\n\nconst SourceStatus = props => {\n  const {\n    type,\n    info,\n    source,\n\n    onRun,\n    onCancel,\n  } = props\n\n  return (\n    <ListItem>\n      <ListItemText primary={source} secondary={formatStatus(type, info)} />\n      <ListItemSecondaryAction>\n        {type === 'source.pending' ? (\n          <Cancel onCancel={() => onCancel([source])} />\n        ) : (\n          <Run onRun={() => onRun([source])} />\n        )}\n      </ListItemSecondaryAction>\n    </ListItem>\n  )\n}\n\nconst QueryStatus = props => {\n  const { sources = {} } = props\n\n  return (\n    <List>\n      {Object.keys(sources).map(source => {\n        const { type, info } = sources[source]\n        return (\n          <SourceStatus\n            key={source}\n            source={source}\n            info={info}\n            type={type}\n            onRun={props.onRun}\n            onCancel={props.onCancel}\n          />\n        )\n      })}\n    </List>\n  )\n}\n\nexport default QueryStatus\n","import React from 'react'\nimport { storiesOf } from '@connexta/ace/@storybook/react'\nimport { withKnobs } from '@connexta/ace/@storybook/addon-knobs'\nimport { action } from '@connexta/ace/@storybook/addon-actions'\n\nconst stories = storiesOf('QueryStatus', module)\n\nstories.addDecorator(withKnobs)\nstories.addDecorator(Story => <Story />)\n\nimport QueryStatus from './query-status'\n\nstories.add('one of each', () => {\n  const info = {\n    hits: 10,\n    count: 5,\n    elapsed: 100,\n    id: 'ddf.distribution',\n    successful: true,\n  }\n\n  const error = new Error('Network Error')\n\n  const sources = {\n    'ddf.success': { type: 'source.success', info },\n    'ddf.pending': { type: 'source.pending' },\n    'ddf.canceled': { type: 'source.canceled' },\n    'ddf.error': { type: 'source.error', info: error },\n  }\n\n  return (\n    <QueryStatus\n      sources={sources}\n      onRun={action('onRun')}\n      onCancel={action('onCancel')}\n    />\n  )\n})\n","export { default as useKeyPressed } from './use-key-pressed'\nexport { default as useUndoState } from './use-undo-state'\nexport { default as useSelectionInterface } from './use-selection-interface'\nexport { default as useQueryExecutor } from './use-query-executor'\nexport { default as useApolloFallback } from './use-apollo-fallback'\n","import { useState } from 'react'\n\n//Used as shorthand for anchorEl logic on Material UI Menus/Popovers\nconst useAnchorEl = () => {\n  const [anchorEl, setAnchorEl] = useState(null)\n  const open: any = (event: any) => {\n    setAnchorEl(event.currentTarget)\n  }\n  const close = () => {\n    setAnchorEl(null)\n  }\n  return [anchorEl, open, close]\n}\n\nexport default useAnchorEl\n","import { useApolloClient } from '@apollo/react-hooks'\n\nconst useApolloFallback = (container, component) => {\n  try {\n    useApolloClient()\n    return container\n  } catch (e) {\n    return component\n  }\n}\n\nexport default useApolloFallback\n","import { useEffect, useState } from 'react'\n\nconst useKeyPressed = aKey => {\n  const [pressed, setPressed] = useState(false)\n\n  useEffect(\n    () => {\n      const onDown = ({ key }) => {\n        if (key === aKey) {\n          setPressed(true)\n        }\n      }\n\n      const onUp = ({ key }) => {\n        if (key === aKey) {\n          setPressed(false)\n        }\n      }\n\n      document.addEventListener('keydown', onDown)\n      document.addEventListener('keyup', onUp)\n      return () => {\n        document.removeEventListener('keydown', onDown)\n        document.removeEventListener('keyup', onUp)\n      }\n    },\n    [aKey]\n  )\n\n  return pressed\n}\n\nexport default useKeyPressed\n","import { useCallback, useReducer } from 'react'\n\nimport { Map } from 'immutable'\n\nimport gql from 'graphql-tag'\nimport { useApolloClient } from '@apollo/react-hooks'\n\nconst status = (state, action) => {\n  switch (action.type) {\n    case 'clear':\n      return state.clear()\n    case 'start':\n      return state.merge(action.status)\n    case 'success':\n      return state.set(action.src, {\n        type: 'source.success',\n        info: action.status,\n      })\n    case 'cancel':\n      return state.set(action.src, {\n        type: 'source.canceled',\n      })\n    case 'error':\n      return state.set(action.src, {\n        type: 'source.error',\n        info: {\n          message: 'source error',\n        },\n      })\n    default:\n      return state\n  }\n}\n\nconst results = (state, action) => {\n  switch (action.type) {\n    case 'clear':\n      return []\n    case 'success':\n      return action.results\n    default:\n      return state\n  }\n}\n\nconst reducer = (state, action) => {\n  if (state.status.get(action.src, { type: '' }).type === 'source.canceled') {\n    return state\n  }\n\n  return {\n    status: status(state.status, action),\n    results: results(state.results, action),\n  }\n}\n\nconst simpleSearch = gql`\n  query SimpleSearch($filterTree: Json!, $settings: QuerySettingsInput) {\n    metacards(filterTree: $filterTree, settings: $settings) {\n      results {\n        actions {\n          id\n          url\n          title\n          displayName\n        }\n        metacard\n      }\n      status {\n        count\n        hits\n        elapsed\n      }\n    }\n  }\n`\n\nconst useQueryExecutor = () => {\n  const client = useApolloClient()\n\n  const [state, dispatch] = useReducer(reducer, {\n    results: [],\n    status: Map(),\n  })\n\n  const onError = useCallback(\n    src => {\n      dispatch({ type: 'error', src })\n    },\n    [dispatch]\n  )\n\n  const onClear = useCallback(\n    () => {\n      dispatch({ type: 'clear' })\n    },\n    [dispatch]\n  )\n\n  const onCancel = useCallback(\n    src => {\n      dispatch({ type: 'cancel', src })\n    },\n    [dispatch]\n  )\n\n  const onSuccess = useCallback(\n    (src, data) => {\n      dispatch({\n        type: 'success',\n        src,\n        status: data.metacards.status,\n        results: data.metacards.results,\n      })\n    },\n    [dispatch]\n  )\n\n  const onSearch = useCallback(\n    async query => {\n      const { filterTree, srcs, ...settings } = query\n\n      const status = srcs.reduce((status, src) => {\n        return status.set(src, { type: 'source.pending' })\n      }, Map())\n\n      dispatch({ type: 'start', status })\n\n      srcs.map(async src => {\n        try {\n          const { data } = await client.query({\n            query: simpleSearch,\n            variables: {\n              filterTree,\n              settings: { src, ...settings },\n            },\n            fetchPolicy: 'network-only',\n          })\n          onSuccess(src, data)\n        } catch (e) {\n          onError(src)\n        }\n      })\n    },\n    [client, onSuccess, onError]\n  )\n\n  return {\n    results: state.results,\n    status: state.status.toJSON(),\n    onSearch,\n    onCancel,\n    onClear,\n  }\n}\n\nexport default useQueryExecutor\n","import React, { useState, useContext } from 'react'\nimport { Set } from 'immutable'\n\nconst SelectionContext = React.createContext()\n\nexport const SelectionProvider = ({ children }) => {\n  const value = useState(Set())\n\n  return (\n    <SelectionContext.Provider value={value}>\n      {children}\n    </SelectionContext.Provider>\n  )\n}\n\nexport default () => useContext(SelectionContext)\n","import { useState, useCallback } from 'react'\nimport { Map, List, is } from 'immutable'\n\nconst useUndoState = initialState => {\n  const [state, setState] = useState(() =>\n    Map({\n      current: 0,\n      history: List([initialState]),\n    })\n  )\n\n  const history = state.get('history')\n  const current = state.get('current')\n\n  const currentState = history.get(current)\n\n  const setCurrentState = useCallback(\n    nextState => {\n      // prevent the same history item from being pushed to the stack twice\n      if (!is(currentState, nextState)) {\n        const update = state\n          .update('current', current => current + 1)\n          .update('history', history =>\n            history.slice(0, state.get('current') + 1).push(nextState)\n          )\n\n        setState(update)\n      }\n    },\n    [state, setState, currentState]\n  )\n\n  const canUndo = current > 0\n\n  const onUndo = useCallback(\n    () => {\n      if (canUndo) {\n        setState(state.update('current', i => i - 1))\n      }\n    },\n    [state, setState, canUndo]\n  )\n\n  const canRedo = current < history.size - 1\n\n  const onRedo = useCallback(\n    () => {\n      if (canRedo) {\n        setState(state.update('current', i => i + 1))\n      }\n    },\n    [state, setState, canRedo]\n  )\n\n  return {\n    state: currentState,\n    setState: setCurrentState,\n    canUndo,\n    onUndo,\n    canRedo,\n    onRedo,\n  }\n}\n\nexport default useUndoState\n","export { Layout, Provider, DragSource, AddConfig } from './react-layout'\n","import React, { Fragment, useRef, useState, useEffect, useContext } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport GoldenLayout from 'golden-layout'\n\nimport 'golden-layout/src/css/goldenlayout-base.css'\nimport 'golden-layout/src/css/goldenlayout-light-theme.css'\n\nconst Context = React.createContext()\n\nconst useLayout = () => {\n  const value = useContext(Context)\n\n  const [layout, setLayout] = value\n\n  return { layout, setLayout }\n}\n\nexport const Provider = ({ children }) => {\n  const value = useState(null)\n\n  return <Context.Provider value={value}>{children}</Context.Provider>\n}\n\nexport const AddConfig = ({ children, config }) => {\n  const { layout } = useLayout()\n\n  const onClick = () => {\n    if (layout === null) {\n      return\n    }\n\n    if (layout.root.contentItems.length > 0) {\n      layout.root.contentItems[0].addChild(config)\n    } else {\n      layout.root.addChild(config)\n    }\n  }\n\n  return <div onClick={onClick}>{children}</div>\n}\n\nexport const DragSource = ({ children, config }) => {\n  const source = useRef(null)\n\n  const { layout } = useLayout()\n\n  useEffect(\n    () => {\n      if (source === null) {\n        return\n      }\n\n      if (layout === null) {\n        return\n      }\n\n      layout.createDragSource(source.current, config)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [source, layout]\n  )\n\n  return <div ref={source}>{children}</div>\n}\n\nexport const Layout = props => {\n  const container = useRef(null)\n  const [regions, setRegions] = useState([])\n  const { setLayout } = useLayout()\n  const { config, components, onChange } = props\n  /* eslint-disable no-unused-vars */\n  const [dimensions, setDimensions] = useState(null)\n  /* eslint-enable no-unused-vars */\n\n  useEffect(() => {\n    if (container.current === null) {\n      return\n    }\n\n    const layout = new GoldenLayout(config, container.current)\n\n    setLayout(layout)\n\n    const onResize = () => {\n      layout.updateSize()\n    }\n\n    window.addEventListener('resize', onResize)\n\n    layout.on('initialised', () => {\n      layout.unbind('initialised')\n      setTimeout(() => {\n        layout.on('stateChanged', () => {\n          onChange(layout.toConfig())\n        })\n      }, 0)\n    })\n    const updateContainerSize = () => {\n      if (container.current) {\n        const width = container.current.offsetWidth\n        const height = container.current.offsetHeight\n        setDimensions({ width, height })\n      }\n    }\n    layout.on('componentCreated', component => {\n      if (component.container) {\n        component.container.on('resize', updateContainerSize)\n      }\n    })\n\n    // cleanup local state when items removed from golden layout\n    layout.on('itemDestroyed', component => {\n      if (!component.container) {\n        return\n      }\n      const el = component.container.getElement().get(0)\n      setRegions(regions => {\n        return regions.filter(region => {\n          return region.el !== el\n        })\n      })\n    })\n\n    Object.keys(components).forEach(key => {\n      layout.registerComponent(key, container => {\n        const el = container.getElement().get(0)\n        setRegions(regions => {\n          return regions.concat({ el, key })\n        })\n      })\n    })\n\n    layout.init()\n\n    return () => {\n      layout.destroy()\n      window.removeEventListener('resize', onResize)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Fragment>\n      <div style={{ height: '100%', width: '100%' }} ref={container} />\n      {regions.map(region => {\n        const { key, el } = region\n        const Component = components[key]\n        return ReactDOM.createPortal(<Component />, el)\n      })}\n    </Fragment>\n  )\n}\n","import React from 'react'\n\nimport { storiesOf } from '@connexta/ace/@storybook/react'\nimport { action } from '@connexta/ace/@storybook/addon-actions'\n\nimport { Provider, Layout } from './react-layout'\n\nconst stories = storiesOf('ReactLayout', module)\n\nstories.add('basic', () => {\n  const Test = () => 'Hi'\n\n  const config = {\n    content: [\n      {\n        type: 'row',\n        content: [\n          {\n            type: 'component',\n            title: 'A',\n            componentName: 'test-component',\n          },\n          {\n            type: 'column',\n            content: [\n              {\n                type: 'component',\n                title: 'B',\n                componentName: 'test-component',\n              },\n              {\n                type: 'component',\n                title: 'C',\n                componentName: 'test-component',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  }\n\n  const components = {\n    'test-component': Test,\n  }\n\n  return (\n    <Provider>\n      <div\n        style={{ height: 'calc(100vh - 16px)', width: 'calc(100vw - 16px)' }}\n      >\n        <Layout\n          config={config}\n          components={components}\n          onChange={action('onChange')}\n        />\n      </div>\n    </Provider>\n  )\n})\n","import React, { memo, useState } from 'react'\n\nimport { Set } from 'immutable'\nimport { useUndoState } from '../react-hooks'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\n\nimport TransferList from './transfer-list'\n\nconst MemoizedTransferList = memo(TransferList)\n\nconst validate = (form = {}) => {\n  const { title, description } = form\n\n  const attributes = Set(form.attributes)\n\n  const errors = {}\n\n  if (typeof title !== 'string') {\n    errors.title = 'Title must be string'\n  } else if (title.trim() === '') {\n    errors.title = 'Title must not be empty'\n  }\n\n  if (description !== undefined && typeof description !== 'string') {\n    errors.description = 'Description must be string'\n  }\n\n  if (attributes.isEmpty()) {\n    errors.attributes = 'Attributes cannot be empty'\n  }\n\n  return errors\n}\n\nexport const ResultForms = props => {\n  const { form = {}, attributes = [], onCancel, onSave } = props\n\n  const { state, setState, ...rest } = useUndoState(Set(form.attributes))\n\n  const [title, setTitle] = useState(form.title || '')\n  const [description, setDescription] = useState(form.description || '')\n\n  const errors = validate({ title, description, attributes: state })\n\n  const [submitted, setSubmitted] = useState(false)\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        maxHeight: '100%',\n        padding: 20,\n        boxSizing: 'border-box',\n        ...props.style,\n      }}\n    >\n      <TextField\n        autoFocus\n        required\n        fullWidth\n        label=\"Title\"\n        style={{ marginBottom: 20 }}\n        value={title}\n        error={submitted && errors.title !== undefined}\n        helperText={submitted ? errors.title : undefined}\n        onChange={e => setTitle(e.target.value)}\n      />\n      <TextField\n        fullWidth\n        rows={2}\n        multiline\n        label=\"Description\"\n        style={{ marginBottom: 30 }}\n        value={description}\n        onChange={e => setDescription(e.target.value)}\n      />\n\n      <MemoizedTransferList\n        state={state}\n        setState={setState}\n        label=\"Attributes\"\n        required\n        attributes={attributes}\n        error={submitted && errors.attributes !== undefined}\n        helperText={submitted ? errors.attributes : undefined}\n        {...rest}\n      />\n\n      <div\n        style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 20 }}\n      >\n        <Button variant=\"outlined\" color=\"secondary\" onClick={onCancel}>\n          Cancel\n        </Button>\n        <div style={{ width: 10, display: 'inline-block' }} />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            if (Object.keys(errors).length === 0) {\n              const resultForm = {\n                id: form.id,\n                title,\n                description,\n                attributes: state.toJSON(),\n              }\n              onSave(resultForm)\n            } else {\n              setSubmitted(true)\n            }\n          }}\n        >\n          Save\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default ResultForms\n","import React, { useState } from 'react'\nimport { storiesOf } from '@connexta/ace/@storybook/react'\nimport {\n  withKnobs,\n  number,\n  boolean,\n  text,\n} from '@connexta/ace/@storybook/addon-knobs'\nimport { action } from '@connexta/ace/@storybook/addon-actions'\n\nconst stories = storiesOf('ResultFroms', module)\n\nstories.addDecorator(withKnobs)\nstories.addDecorator(Story => <Story />)\n\nimport { Set } from 'immutable'\nimport { useUndoState } from '../react-hooks'\n\nimport TransferList from './transfer-list'\nimport { ResultForms } from './result-forms'\nimport { Route, Editor, ConfirmDelete } from './route'\n\nconst getAttributes = total => {\n  const attributes = []\n\n  for (let i = 0; i < total; i++) {\n    attributes.push(`Attribute #${i}`)\n  }\n\n  return attributes\n}\n\nstories.add('confirm delete', () => {\n  const message = text('Message', 'This will permanently do a thing')\n\n  return <ConfirmDelete onDelete={action('onDelete')}>{message}</ConfirmDelete>\n})\n\nstories.add('transfer list', () => {\n  const props = useUndoState(Set())\n\n  const total = number('Number of Attributes', 100)\n  const required = boolean('Required', false)\n  const error = boolean('Error', false)\n  const label = text('Label', 'Label')\n  const helperText = text('Helper Text', 'Helper text')\n\n  const attributes = getAttributes(total)\n\n  return (\n    <div style={{ height: 'calc(100vh - 16px)' }}>\n      <TransferList\n        label={label}\n        required={required}\n        helperText={helperText}\n        error={error}\n        attributes={attributes}\n        {...props}\n      />\n    </div>\n  )\n})\n\nstories.add('editor', () => {\n  const total = number('Number of Attributes', 100)\n\n  const attributes = getAttributes(total)\n\n  const resultForm = {\n    title: 'Example Title',\n    description: 'Example Description',\n    attributes: ['id'],\n  }\n\n  const fillForm = boolean('Fill Form', false)\n\n  return (\n    <div style={{ height: 'calc(100vh - 16px)' }}>\n      <ResultForms\n        attributes={attributes}\n        form={fillForm ? resultForm : undefined}\n        onSave={action('onSave')}\n        onCancel={action('onCancel')}\n      />\n    </div>\n  )\n})\n\nconst MockEditor = props => {\n  const attributes = getAttributes(100)\n\n  return <Editor attributes={attributes} {...props} />\n}\n\nstories.add('route', () => {\n  const loading = boolean('Loading', false)\n\n  const [forms, setForms] = useState([])\n\n  const onCreate = form => {\n    setForms(forms.concat(form))\n  }\n\n  const onSave = newForm => {\n    const newState = forms.map(form => {\n      if (form.id === newForm.id) {\n        return newForm\n      }\n      return form\n    })\n    setForms(newState)\n  }\n\n  const onDelete = newForm => {\n    const newState = forms.filter(form => {\n      return form.id !== newForm.id\n    })\n    setForms(newState)\n  }\n\n  const props = {\n    forms,\n    loading,\n    Editor: MockEditor,\n    onCreate,\n    onSave,\n    onDelete,\n  }\n\n  return <Route {...props} />\n})\n","import React, { Fragment, useState } from 'react'\n\nimport gql from 'graphql-tag'\nimport { useQuery, useMutation } from '@apollo/react-hooks'\n\nimport ResultFroms from './result-forms'\n\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\n\nimport Button from '@material-ui/core/Button'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport ShareIcon from '@material-ui/icons/Share'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nimport Snackbar from '@material-ui/core/Snackbar'\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\n\nimport moment from 'moment'\n\nconst Loading = () => {\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <LinearProgress style={{ width: '25vw', height: 10 }} />\n    </div>\n  )\n}\n\nconst ItemContainer = props => {\n  const { children, style, onClick } = props\n\n  return (\n    <Fragment>\n      <Card\n        style={{\n          width: 345,\n          margin: 20,\n          cursor: 'pointer',\n          ...style,\n        }}\n        onClick={onClick}\n      >\n        {children}\n      </Card>\n    </Fragment>\n  )\n}\n\nconst AddItem = props => {\n  const { onCreate, Editor } = props\n\n  const [editing, setEditing] = useState(false)\n\n  const onSave = data => {\n    setEditing(false)\n    onCreate(data)\n  }\n\n  const onCancel = () => {\n    setEditing(false)\n  }\n\n  return (\n    <Fragment>\n      {editing ? (\n        <Dialog open>\n          <Editor onSave={onSave} onCancel={onCancel} />\n        </Dialog>\n      ) : null}\n      <ItemContainer\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n        onClick={() => setEditing(true)}\n      >\n        <AddCircleOutlineIcon style={{ width: '50%', height: '50%' }} />\n      </ItemContainer>\n    </Fragment>\n  )\n}\n\nexport const ConfirmDelete = props => {\n  const [confirmDelete, setConfirmDelete] = useState(false)\n  const { children, onDelete } = props\n\n  return (\n    <Fragment>\n      {confirmDelete ? (\n        <Dialog\n          open\n          onClick={e => e.stopPropagation()}\n          onClose={() => setConfirmDelete(false)}\n        >\n          <DialogTitle>Are you sure?</DialogTitle>\n          <DialogContent>\n            <DialogContentText>{children}</DialogContentText>\n          </DialogContent>\n          <DialogActions style={{ textAlign: 'center' }}>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => {\n                setConfirmDelete(false)\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={() => {\n                onDelete()\n                setConfirmDelete(false)\n              }}\n            >\n              Delete\n            </Button>\n          </DialogActions>\n        </Dialog>\n      ) : null}\n      <IconButton\n        onClick={e => {\n          e.stopPropagation()\n          setConfirmDelete(true)\n        }}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </Fragment>\n  )\n}\n\nconst Item = props => {\n  const { form, Editor, onDelete } = props\n\n  const [editing, setEditing] = useState(false)\n\n  const onSave = data => {\n    setEditing(false)\n    props.onSave(data)\n  }\n\n  const onCancel = () => {\n    setEditing(false)\n  }\n\n  return (\n    <Fragment>\n      {editing ? (\n        <Dialog open>\n          <Editor form={form} onSave={onSave} onCancel={onCancel} />\n        </Dialog>\n      ) : null}\n      <ItemContainer onClick={() => setEditing(true)}>\n        <CardHeader\n          title={form.title}\n          subheader={moment(form.modified).fromNow()}\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Owner: {form.owner}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <IconButton\n            onClick={e => {\n              e.stopPropagation()\n            }}\n          >\n            <ShareIcon />\n          </IconButton>\n          <ConfirmDelete onDelete={onDelete}>\n            This will permanently delete the search form.\n          </ConfirmDelete>\n        </CardActions>\n      </ItemContainer>\n    </Fragment>\n  )\n}\n\nconst Notification = props => {\n  const { message, autoHideDuration = 5000, onClose } = props\n\n  return (\n    <Snackbar\n      open\n      autoHideDuration={autoHideDuration}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n      }}\n    >\n      <SnackbarContent message={message} />\n    </Snackbar>\n  )\n}\n\nexport const Route = props => {\n  const [message, setMessage] = useState(null)\n\n  const { loading, error, forms, Editor, onCreate, onSave, onDelete } = props\n\n  if (loading) {\n    return <Loading />\n  }\n\n  if (error) {\n    return <div>Error</div>\n  }\n\n  return (\n    <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n      {message ? (\n        <Notification message={message} onClose={() => setMessage(null)} />\n      ) : null}\n      <AddItem\n        Editor={Editor}\n        onCreate={(...args) => {\n          onCreate(...args)\n          setMessage('Result Form Created')\n        }}\n      />\n      {forms\n        .concat()\n        .sort((a, b) => (a.modified > b.modified ? -1 : 1))\n        .map(form => {\n          return (\n            <Item\n              key={form.id}\n              Editor={Editor}\n              onSave={(...args) => {\n                onSave(...args)\n                setMessage('Result Form Saved')\n              }}\n              onDelete={() => {\n                onDelete(form)\n                setMessage('Result Form Deleted')\n              }}\n              form={form}\n            />\n          )\n        })}\n    </div>\n  )\n}\n\n// TODO: Add metacardOwner to fragment\n//\n// - When the GraphQL endpoint can return metacardOwner on save, we can\n//   add metacardOwner to this fragment.\nconst fragment = gql`\n  fragment ResultFormAttributes on MetacardAttributes {\n    id\n    title\n    description\n    modified: metacard_modified\n    attributes: ui_attribute_group\n  }\n`\n\nconst searchForms = gql`\n  query SearchForms {\n    metacardsByTag(tag: \"attribute-group\") {\n      attributes {\n        ...ResultFormAttributes\n        owner: metacard_owner\n      }\n    }\n  }\n  ${fragment}\n`\n\nconst useCreate = () => {\n  const mutation = gql`\n    mutation CreateSearchForms($attrs: MetacardAttributesInput!) {\n      createMetacard(attrs: $attrs) {\n        ...ResultFormAttributes\n        owner: metacard_owner\n      }\n    }\n    ${fragment}\n  `\n\n  return useMutation(mutation, {\n    update: (cache, { data }) => {\n      const query = searchForms\n\n      const { metacardsByTag } = cache.readQuery({ query })\n      const attributes = metacardsByTag.attributes\n        .filter(({ id }) => id !== data.createMetacard.id)\n        .concat(data.createMetacard)\n\n      cache.writeQuery({\n        query,\n        data: {\n          metacardsByTag: {\n            attributes,\n            __typename: 'QueryResponse',\n          },\n        },\n      })\n    },\n  })\n}\n\nconst useSave = () => {\n  const mutation = gql`\n    mutation SaveSearchForms($id: ID!, $attrs: MetacardAttributesInput!) {\n      saveMetacard(id: $id, attrs: $attrs) {\n        ...ResultFormAttributes\n      }\n    }\n    ${fragment}\n  `\n  return useMutation(mutation)\n}\n\nconst useDelete = () => {\n  const mutation = gql`\n    mutation DeleteSearchForms($id: ID!) {\n      deleteMetacard(id: $id)\n    }\n  `\n\n  return useMutation(mutation, {\n    update: (cache, { data }) => {\n      const query = searchForms\n\n      const { metacardsByTag } = cache.readQuery({ query })\n      const attributes = metacardsByTag.attributes.filter(\n        ({ id }) => id !== data.deleteMetacard\n      )\n\n      cache.writeQuery({\n        query,\n        data: {\n          metacardsByTag: {\n            attributes,\n            __typename: 'QueryResponse',\n          },\n        },\n      })\n    },\n  })\n}\n\nconst resultFormAttributes = gql`\n  query ResultFormAttributes {\n    metacardTypes {\n      id\n    }\n  }\n`\n\nexport const Editor = props => {\n  const { form, attributes, loading, error, onCancel, onSave } = props\n\n  if (loading) {\n    return <Loading />\n  }\n\n  if (error) {\n    return <div>Error</div>\n  }\n\n  return (\n    <ResultFroms\n      style={{\n        maxHeight: '60vh',\n      }}\n      form={form}\n      attributes={attributes}\n      onCancel={onCancel}\n      onSave={onSave}\n    />\n  )\n}\n\nconst EditorWithAttributes = props => {\n  const { loading, error, data } = useQuery(resultFormAttributes)\n\n  const attributes = loading ? [] : data.metacardTypes.map(({ id }) => id)\n\n  return (\n    <Editor\n      loading={loading}\n      error={error}\n      attributes={attributes}\n      {...props}\n    />\n  )\n}\n\nexport default () => {\n  const { loading, error, data } = useQuery(searchForms)\n\n  const [create] = useCreate()\n  const [save] = useSave()\n  const [_delete] = useDelete()\n\n  if (loading) {\n    return <Route loading={loading} />\n  }\n\n  if (error) {\n    return <Route error={error} />\n  }\n\n  const onCreate = form => {\n    const { attributes, ...rest } = form\n    create({\n      variables: {\n        attrs: {\n          ui_attribute_group: attributes,\n          metacard_type: 'attribute-group',\n          metacard_tags: ['VALID', 'attribute-group'],\n          ...rest,\n        },\n      },\n    })\n  }\n\n  const onSave = form => {\n    const { attributes, ...rest } = form\n    save({\n      variables: {\n        id: form.id,\n        attrs: {\n          ui_attribute_group: attributes,\n          ...rest,\n        },\n      },\n    })\n  }\n\n  const onDelete = form => {\n    _delete({\n      variables: {\n        id: form.id,\n      },\n    })\n  }\n\n  const forms = data.metacardsByTag.attributes\n\n  return (\n    <Route\n      forms={forms}\n      Editor={EditorWithAttributes}\n      onCreate={onCreate}\n      onSave={onSave}\n      onDelete={onDelete}\n    />\n  )\n}\n","import React, { useState } from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport CardContent from '@material-ui/core/CardContent'\nimport Card from '@material-ui/core/Card'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport RedoIcon from '@material-ui/icons/Redo'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport UndoIcon from '@material-ui/icons/Undo'\n\nconst Attributes = props => {\n  const [text, setText] = useState('')\n\n  const { title, attributes = [], onSelect } = props\n\n  const filtered = attributes.filter(type => type.match(text))\n\n  return (\n    <div style={{ maxHeight: '100%', flex: '1', alignItems: 'stretch' }}>\n      <Card\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          boxSizing: 'border-box',\n        }}\n      >\n        <CardContent style={{ paddingBottom: 0 }}>\n          <Typography variant=\"h6\" color=\"textSecondary\">\n            {title}\n            {filtered.length !== attributes.length\n              ? ` (${filtered.length}/${attributes.length} visible)`\n              : null}\n          </Typography>\n          <TextField\n            fullWidth\n            value={text}\n            onChange={e => setText(e.target.value)}\n            placeholder=\"type to filter...\"\n          />\n        </CardContent>\n        <List dense={true} style={{ flex: '1', overflow: 'auto' }}>\n          {filtered.map(type => {\n            return (\n              <ListItem key={type} button onClick={() => onSelect([type])}>\n                <ListItemText primary={type} />\n              </ListItem>\n            )\n          })}\n        </List>\n      </Card>\n    </div>\n  )\n}\n\nconst HistoryControls = props => {\n  const { canUndo, onUndo, canRedo, onRedo } = props\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={onUndo} disabled={!canUndo}>\n        <UndoIcon /> Undo\n      </Button>\n      <div style={{ width: 10, display: 'inline-block' }} />\n      <Button variant=\"outlined\" onClick={onRedo} disabled={!canRedo}>\n        <RedoIcon /> Redo\n      </Button>\n    </div>\n  )\n}\n\nconst TransferList = props => {\n  const { state, setState, attributes = [], ...rest } = props\n\n  const selected = attributes.filter(a => state.has(a))\n  const available = attributes.filter(a => !state.has(a))\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        maxHeight: '100%',\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          padding: 3,\n          marginBottom: 10,\n        }}\n      >\n        <div>\n          <FormLabel required={props.required} error={props.error}>\n            {props.label}\n          </FormLabel>\n          <FormHelperText error={props.error}>\n            {props.helperText}\n          </FormHelperText>\n        </div>\n\n        <HistoryControls {...rest} />\n      </div>\n\n      <div\n        style={{ display: 'flex', flex: '1', overflow: 'hidden', padding: 3 }}\n      >\n        <Attributes\n          title=\"Available\"\n          attributes={available}\n          onSelect={a => setState(state.union(a))}\n        />\n\n        <div style={{ width: 20 }} />\n\n        <Attributes\n          title=\"Selected\"\n          attributes={selected}\n          onSelect={a => setState(state.subtract(a))}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default TransferList\n","import React, { useState } from 'react'\nimport { Set } from 'immutable'\nimport { useKeyPressed, useSelectionInterface } from '../react-hooks'\n\nimport Paper from '@material-ui/core/Card'\nimport Table from '@material-ui/core/Table'\nimport Typography from '@material-ui/core/Typography'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableBody from '@material-ui/core/TableBody'\nimport More from '@material-ui/icons/UnfoldMore'\nimport Less from '@material-ui/icons/UnfoldLess'\nimport DefaultThumbnail from '../thumbnail/thumbnail'\nimport Button from '@material-ui/core/Button'\n\nconst cellStyles = {\n  minWidth: 150,\n  maxWidth: 450,\n}\n\nconst ExpandButton = props => {\n  const { expanded, onClick } = props\n  return (\n    <Button\n      style={{\n        minWidth: 25,\n        marginLeft: 5,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n      onClick={onClick}\n    >\n      {expanded ? <Less /> : <More />}\n    </Button>\n  )\n}\n\nconst Description = props => {\n  const [expanded, setExpanded] = useState(false)\n  const { text } = props\n  const long = text.length > 250\n\n  return (\n    <div\n      style={{\n        ...cellStyles,\n        display: 'flex',\n        width: '20vw',\n        alignItems: 'stretch',\n      }}\n    >\n      <Typography>\n        {!long || expanded ? text : text.substring(0, 100).concat('...')}\n      </Typography>\n      {long ? (\n        <ExpandButton\n          expanded={expanded}\n          onClick={e => {\n            e.stopPropagation()\n            setExpanded(!expanded)\n          }}\n        />\n      ) : null}\n    </div>\n  )\n}\n\nconst getCellContent = (attribute, result, Thumbnail) => {\n  const { properties } = result.metacard\n  switch (attribute) {\n    case 'thumbnail':\n      return (\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Thumbnail result={result} />\n        </div>\n      )\n    case 'description':\n      return <Description text={properties.description} />\n    default:\n      return (\n        <Typography style={{ ...cellStyles }}>\n          {properties[attribute]}\n        </Typography>\n      )\n  }\n}\n\nconst getId = result => result.metacard.properties.id\n\nconst Result = props => {\n  const { attributes, selected, onClick, Thumbnail, result } = props\n  const id = getId(result)\n  return (\n    <TableRow onClick={onClick} key={id} selected={selected}>\n      {attributes.map(attribute => (\n        <TableCell key={attribute}>\n          {getCellContent(attribute.toLowerCase(), result, Thumbnail)}\n        </TableCell>\n      ))}\n    </TableRow>\n  )\n}\n\nconst DDFThumbnail = ({ result }) => {\n  const { url } =\n    result.actions.find(({ id }) => id === 'catalog.data.metacard.thumbnail') ||\n    {}\n  return <DefaultThumbnail src={url} />\n}\n\nconst computeSelected = (selection, results, start, end, e) => {\n  const clicked = getId(results[end])\n  if (e.ctrlKey || e.metaKey) {\n    return selection.has(clicked)\n      ? selection.remove(clicked)\n      : selection.add(clicked)\n  }\n  if (e.shiftKey && start !== null) {\n    const slice =\n      start < end\n        ? results.slice(start, end + 1)\n        : results.slice(end, start + 1)\n    const group = Set(slice.map(result => getId(result)))\n    return group.union(selection)\n  }\n  return selection.has(clicked) ? Set() : Set([getId(results[end])])\n}\n\nconst Results = props => {\n  const { results, attributes, onSelect, Thumbnail = DDFThumbnail } = props\n  const selection = Set(props.selection)\n  const [lastSelected, setLastSelected] = useState(null)\n  const allowTextSelect = !useKeyPressed('Shift')\n\n  return (\n    <Paper style={{ overflow: 'auto', maxHeight: '100%' }}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {attributes.map(attribute => (\n              <TableCell key={attribute}>\n                <Typography>{attribute}</Typography>\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody style={{ userSelect: allowTextSelect ? 'auto' : 'none' }}>\n          {results.map((result, i) => {\n            const id = getId(result)\n            return (\n              <Result\n                key={id}\n                result={result}\n                Thumbnail={Thumbnail}\n                attributes={attributes}\n                selected={selection.has(id)}\n                onClick={e => {\n                  e.stopPropagation()\n                  const selected = computeSelected(\n                    selection,\n                    results,\n                    lastSelected,\n                    i,\n                    e\n                  )\n                  onSelect(selected)\n                  setLastSelected(e.shiftKey ? lastSelected : i)\n                }}\n              />\n            )\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  )\n}\n\nconst Container = prop => {\n  const [selection, onSelect] = useSelectionInterface()\n  return <Results {...prop} selection={selection} onSelect={onSelect} />\n}\n\nexport { Results }\nexport default Container\n","import React, { useState } from 'react'\nimport { Results } from './results'\nimport { storiesOf } from '@connexta/ace/@storybook/react'\nimport Skeleton from '@material-ui/lab/Skeleton'\nimport { boolean } from '@connexta/ace/@storybook/addon-knobs'\nimport tn from './story-thumb'\n\nimport genResults from '../gen-results'\n\nconst stories = storiesOf('Result', module)\nstories.addDecorator(Story => <Story />)\n\nconst attributes = [\n  'Title',\n  'Thumbnail',\n  'Description',\n  'Created',\n  'Modified',\n  'Checksum',\n  'ID',\n]\n\nconst Thumbnail = () => {\n  const loaded = boolean('Load Thumbnail', false)\n  return loaded ? (\n    <img style={{ maxHeight: 100 }} src={tn} />\n  ) : (\n    <Skeleton variant=\"rect\" height=\"100px\" width=\"100px\" />\n  )\n}\n\nstories.add('Basic', () => {\n  const [selection, setSelected] = useState([])\n\n  const results = genResults()\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <div\n        style={{\n          height: '90vh',\n          width: '90vw',\n          border: '1px dashed orange',\n        }}\n      >\n        <Results\n          results={results}\n          attributes={attributes}\n          selection={selection}\n          onSelect={setSelected}\n          Thumbnail={Thumbnail}\n        />\n      </div>\n    </div>\n  )\n})\n","import React, { useState } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { useApolloFallback } from './react-hooks'\nimport gql from 'graphql-tag'\n\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport Select from '@material-ui/core/Select'\nimport Typography from '@material-ui/core/Typography'\nimport ReactSelect from 'react-select'\n\nconst getDirectionLabel = type => {\n  let ascending = ''\n  let descending = ''\n  switch (type) {\n    case 'BINARY':\n    case 'XML':\n      ascending = 'Ascending'\n      descending = 'Descending'\n      break\n    case 'BOOLEAN':\n      ascending = 'True First'\n      descending = 'False First'\n      break\n    case 'DATE':\n      ascending = 'Earliest'\n      descending = 'Latest'\n      break\n    case 'DOUBLE':\n    case 'FLOAT':\n    case 'INTEGER':\n    case 'LONG':\n    case 'SHORT':\n      ascending = 'Smallest'\n      descending = 'Largest'\n      break\n    case 'GEOMETRY':\n      ascending = 'Closest'\n      descending = 'Furthest'\n      break\n    case 'STRING':\n      ascending = 'A to Z'\n      descending = 'Z to A'\n      break\n  }\n  return {\n    ascending,\n    descending,\n  }\n}\n\nconst sampleAttributeDescriptors = [\n  { id: 'metadata', type: 'XML', __typename: 'MetacardType' },\n  { id: 'thumbnail', type: 'BINARY', __typename: 'MetacardType' },\n  { id: 'phonetics', type: 'BOOLEAN', __typename: 'MetacardType' },\n  { id: 'created', type: 'DATE', __typename: 'MetacardType' },\n  { id: 'media.bit-rate', type: 'DOUBLE', __typename: 'MetacardType' },\n  { id: 'media.width-pixels', type: 'INTEGER', __typename: 'MetacardType' },\n  { id: 'ext.population', type: 'LONG', __typename: 'MetacardType' },\n  { id: 'location', type: 'GEOMETRY', __typename: 'MetacardType' },\n  { id: 'topic.vocabulary', type: 'STRING', __typename: 'MetacardType' },\n]\n\nconst AttributeSortOrder = props => {\n  const { attributeDescriptors, onChange } = props\n  const [attribute, setAttribute] = useState(attributeDescriptors[0])\n  const [direction, setDirection] = useState('ascending')\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: '250px',\n        maxWidth: '400px',\n        overflow: 'visible',\n      }}\n    >\n      <AttributeSelect\n        attributeDescriptors={attributeDescriptors}\n        onChange={attribute => {\n          setAttribute(attribute)\n          onChange({ attribute: attribute.id, direction })\n        }}\n      />\n\n      <DirectionSelect\n        attributeType={attribute.type}\n        onChange={direction => {\n          setDirection(direction)\n          onChange({ attribute: attribute.id, direction })\n        }}\n      />\n    </div>\n  )\n}\n\nconst createOption = option => {\n  return {\n    value: option,\n    label: option.id,\n  }\n}\n\nconst AttributeSelect = props => {\n  const { attributeDescriptors, onChange } = props\n  const options = attributeDescriptors.map(createOption)\n\n  const handleChange = selectedOption => {\n    onChange(selectedOption.value)\n  }\n\n  return (\n    <ReactSelect\n      defaultValue={options[0]}\n      options={options}\n      onChange={handleChange}\n    />\n  )\n}\n\nconst DirectionSelect = props => {\n  const { attributeType, onChange } = props\n  const directionLabel = getDirectionLabel(attributeType)\n  const [direction, setDirection] = useState('ascending')\n\n  return (\n    <Select\n      fullWidth\n      value={direction}\n      onChange={e => {\n        setDirection(e.target.value)\n        onChange(e.target.value)\n      }}\n    >\n      <MenuItem value={'ascending'}>\n        <Typography>{directionLabel.ascending}</Typography>\n      </MenuItem>\n      <MenuItem value={'descending'}>\n        <Typography>{directionLabel.descending}</Typography>\n      </MenuItem>\n    </Select>\n  )\n}\n\nconst SortOrder = props => {\n  const {\n    attributeDescriptors = sampleAttributeDescriptors,\n    setSortOrder,\n  } = props\n  const onChange = sort => {\n    setSortOrder([sort])\n  }\n\n  return (\n    <div>\n      <Typography variant=\"h6\">SORT ORDER</Typography>\n      <AttributeSortOrder\n        attributeDescriptors={attributeDescriptors}\n        onChange={onChange}\n      />\n    </div>\n  )\n}\n\nconst Loading = () => {\n  return (\n    <Paper>\n      <LinearProgress />\n    </Paper>\n  )\n}\nconst Error = props => {\n  return (\n    <Paper>\n      <Typography>\n        {props.message ? props.message : 'Something went wrong'}\n      </Typography>\n    </Paper>\n  )\n}\n\nconst query = gql`\n  query MetacardTypes {\n    metacardTypes {\n      id\n      type\n    }\n  }\n`\n\nconst Container = props => {\n  const { loading, error, data = {} } = useQuery(query)\n  if (loading) {\n    return <Loading />\n  }\n  if (error) {\n    return <Error message={error} />\n  }\n\n  const attributeDescriptors = data.metacardTypes\n\n  return <SortOrder {...props} attributeDescriptors={attributeDescriptors} />\n}\n\nexport default props => {\n  const Component = useApolloFallback(Container, SortOrder)\n  return <Component {...props} />\n}\n\nexport { SortOrder }\n","import React from 'react'\n\nimport { action } from '@connexta/ace/@storybook/addon-actions'\nimport { storiesOf } from '@connexta/ace/@storybook/react'\n\nimport { SortOrder } from './search-settings'\n\nconst stories = storiesOf('Search Settings', module)\n\nstories.addDecorator(Story => <Story />)\n\nstories.add('Sort Order', () => {\n  return <SortOrder setSortOrder={action('setSortOrder')} />\n})\n","import React from 'react'\n\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Divider from '@material-ui/core/Divider'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Typography from '@material-ui/core/Typography'\nimport OnlineIcon from '@material-ui/icons/CloudDoneOutlined'\nimport OfflineIcon from '@material-ui/icons/OfflineBoltOutlined'\nimport Select from '@material-ui/core/Select'\nimport { useApolloFallback } from './react-hooks'\n\nconst sourcesMessage = offlineCount => {\n  if (offlineCount === 0) {\n    return 'All sources are currently up'\n  }\n\n  if (offlineCount === 1) {\n    return '1 source is currently down'\n  }\n\n  return `${offlineCount} sources are currently down`\n}\n\nexport const sources = gql`\n  query SourcesPages {\n    sources {\n      available\n      id\n    }\n  }\n`\n\nexport const Sources = props => {\n  const { sources } = props\n  const offlineCount = sources.filter(source => !source.available).length\n  const getIcon = source => (source.available ? OnlineIcon : OfflineIcon)\n\n  return (\n    <div style={{ maxWidth: 600, margin: '20px auto' }}>\n      <Card>\n        <CardContent>\n          <Typography variant=\"h5\" component=\"h1\">\n            {sourcesMessage(offlineCount)}\n          </Typography>\n          <Divider style={{ marginBottom: 15, marginTop: 10 }} />\n          <List>\n            {sources.map(source => {\n              const Icon = getIcon(source)\n\n              return (\n                <ListItem key={source.id}>\n                  <ListItemIcon>\n                    <Icon key={source.available} />\n                  </ListItemIcon>\n                  <ListItemText>\n                    <Typography>{source.id}</Typography>\n                  </ListItemText>\n                </ListItem>\n              )\n            })}\n          </List>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n\nconst SourcesSelectComponent = props => {\n  const { sources = [], value = [], onChange } = props\n\n  return (\n    <FormControl fullWidth>\n      <InputLabel>Sources</InputLabel>\n      <Select\n        multiple\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        renderValue={selected => {\n          return selected.join(', ')\n        }}\n      >\n        {sources.map(source => (\n          <MenuItem key={source} value={source}>\n            <Checkbox checked={value.indexOf(source) > -1} />\n            <ListItemText primary={source} />\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\nconst SourcesSelectContainer = props => {\n  const { loading, data = {} } = useQuery(sources)\n\n  return (\n    <SourcesSelectComponent\n      {...props}\n      sources={\n        loading\n          ? []\n          : data.sources\n              .filter(source => source.available)\n              .map(source => source.id)\n      }\n    />\n  )\n}\n\nconst SourcesSelect = props => {\n  const Component = useApolloFallback(\n    SourcesSelectContainer,\n    SourcesSelectComponent\n  )\n\n  return <Component {...props} />\n}\n\nconst pollInterval = gql`\n  query SourcePollInterval {\n    systemProperties {\n      sourcePollInterval\n    }\n  }\n`\n\nconst useSourcePollInterval = init => {\n  const { data, loading, error } = useQuery(pollInterval)\n\n  if (loading || error) {\n    return init\n  }\n\n  return data.systemProperties.sourcePollInterval\n}\n\nexport { SourcesSelect }\n\nexport default () => {\n  const pollInterval = useSourcePollInterval(60000)\n\n  const { loading, data = {} } = useQuery(sources, {\n    pollInterval,\n  })\n\n  return <Sources sources={loading ? [] : data.sources} />\n}\n","import React from 'react'\nimport { storiesOf } from '@connexta/ace/@storybook/react'\nimport { Sources } from './sources'\nimport { withKnobs, number, select } from '@connexta/ace/@storybook/addon-knobs'\n\nconst stories = storiesOf('Sources', module)\nstories.addDecorator(withKnobs)\n\nconst available = availability => {\n  if (availability === 'all') {\n    return true\n  }\n  if (availability === 'none') {\n    return false\n  }\n  return Math.random() > 0.5\n}\n\nconst generateSources = (numSources = 0, availability) => {\n  const sources = []\n\n  for (let i = 0; i < numSources; i++) {\n    sources.push({\n      sourceActions: [],\n      available: available(availability),\n      id: `ddf.distribution.${i}`,\n      contentTypes: [],\n      version: '',\n    })\n  }\n\n  return sources\n}\n\nstories.add('Basic', () => {\n  const n = number('Number of Sources', 4)\n  const availability = select(\n    'Source Availability',\n    {\n      all: 'all',\n      none: 'none',\n      random: 'random',\n    },\n    'all'\n  )\n  return <Sources sources={generateSources(n, availability)} />\n})\n","import React, { useState } from 'react'\n\nimport Skeleton from '@material-ui/lab/Skeleton'\nimport BrokenImageIcon from '@material-ui/icons/BrokenImage'\n\nconst Thumbnail = props => {\n  const { src } = props\n  const [status, setStatus] = useState('loading')\n  return (\n    <React.Fragment>\n      {status === 'loading' ? <Skeleton variant=\"rect\" height=\"100px\" /> : null}\n      <img\n        style={{\n          display: status === 'success' ? 'block' : 'none',\n          maxHeight: 100,\n          maxWidth: 150,\n        }}\n        src={src}\n        onLoad={() => setStatus('success')}\n        onError={() => setStatus('failed')}\n      />\n      {status === 'failed' ? <BrokenImageIcon fontSize=\"large\" /> : null}\n    </React.Fragment>\n  )\n}\n\nexport default Thumbnail\n","import React from 'react'\nimport Thumbnail from './thumbnail'\nimport { storiesOf } from '@connexta/ace/@storybook/react'\nimport { withKnobs, select } from '@connexta/ace/@storybook/addon-knobs'\n\nconst stories = storiesOf('Thumbnail', module)\n\nstories.addDecorator(Story => <Story />)\nstories.addDecorator(withKnobs)\n\nstories.add('Error', () => {\n  return (\n    <div\n      style={{\n        width: 'calc(100vw - 16px)',\n        height: 'calc(100vh - 16px)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Thumbnail src={'oof'} />\n    </div>\n  )\n})\n\nstories.add('Success', () => {\n  const image = select(\n    'Image Type',\n    {\n      Square: 'https://connexta.com/images/work1.jpg',\n      Long: 'https://connexta.com/images/logo-ddf2.png',\n    },\n    'Square'\n  )\n  return (\n    <div\n      style={{\n        width: 'calc(100vw - 16px)',\n        height: 'calc(100vh - 16px)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Thumbnail src={image} />\n    </div>\n  )\n})\n","import React, { useState } from 'react'\n\nimport DateFnsUtils from '@date-io/date-fns'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport TextField from '@material-ui/core/TextField'\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers'\n\nimport { Map } from 'immutable'\n\nconst relativeUnits = ['minutes', 'hours', 'days', 'months', 'years']\n\nconst isValidDate = date => {\n  if (date === undefined) {\n    return false\n  }\n\n  if (date === null) {\n    return false\n  }\n\n  if (typeof date === 'string') {\n    return isValidDate(new Date(date))\n  }\n\n  if (date instanceof Date) {\n    return !isNaN(date.valueOf())\n  }\n\n  return false\n}\n\nexport const createTimeRange = timeRange => {\n  const {\n    type = 'BEFORE',\n    value = new Date(),\n    from = new Date(),\n    to = new Date(),\n    last = 1,\n    unit = 'days',\n  } = timeRange\n\n  const cases = {\n    BEFORE: {\n      type,\n      value,\n    },\n    AFTER: {\n      type,\n      value,\n    },\n    DURING: {\n      type,\n      from,\n      to,\n    },\n    '=': {\n      type,\n      last,\n      unit,\n    },\n  }\n\n  return cases[type]\n}\n\nconst TimeRange = props => {\n  const { timeRange, errors = {} } = props\n  const [state, setState] = useState(\n    Map({\n      [timeRange.type]: timeRange,\n    })\n  )\n\n  const setTimeRange = timeRange => {\n    if (typeof props.setTimeRange === 'function') {\n      props.setTimeRange(timeRange)\n    }\n\n    setState(state.set(timeRange.type, timeRange))\n  }\n\n  const TimeRangeWhen = getTimeRangeWhen(timeRange.type)\n\n  return (\n    <div style={{ overflow: 'auto', flex: '1' }}>\n      <div style={{ display: 'flex' }}>\n        <FormControl fullWidth>\n          <InputLabel>Time Range</InputLabel>\n          <Select\n            error={errors.type !== undefined}\n            value={timeRange.type || ''}\n            onChange={e => {\n              const type = e.target.value\n              const prev = state.get(type)\n              const tr = createTimeRange({ ...prev, type })\n              setTimeRange(tr)\n            }}\n          >\n            <MenuItem value={'AFTER'}>After</MenuItem>\n            <MenuItem value={'BEFORE'}>Before</MenuItem>\n            <MenuItem value={'DURING'}>Between</MenuItem>\n            <MenuItem value={'='}>Relative</MenuItem>\n          </Select>\n          <FormHelperText error={errors.type !== undefined}>\n            {errors.type}\n          </FormHelperText>\n        </FormControl>\n      </div>\n\n      <TimeRangeWhen\n        type={timeRange.type}\n        timeRange={timeRange}\n        setTimeRange={setTimeRange}\n        errors={errors}\n      />\n    </div>\n  )\n}\n\nconst createTimeRangeComponent = label => props => {\n  const { timeRange = {}, setTimeRange, errors = {} } = props\n\n  return (\n    <DatePicker\n      label={label}\n      value={timeRange.value}\n      error={errors.value !== undefined}\n      helperText={errors.value}\n      onChange={date => {\n        setTimeRange({\n          type: timeRange.type,\n          value: date,\n        })\n      }}\n    />\n  )\n}\n\nconst TimeRangeAfter = createTimeRangeComponent(\n  'Limit search to after this time'\n)\nconst TimeRangeBefore = createTimeRangeComponent(\n  'Limit search to before this time'\n)\n\nconst TimeRangeDuring = props => {\n  const { timeRange = {}, setTimeRange, errors = {} } = props\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n      <DatePicker\n        label=\"From\"\n        error={errors.from !== undefined}\n        helperText={errors.from}\n        value={timeRange.from}\n        onChange={date => {\n          const value = `${date}/${timeRange.to}`\n          setTimeRange({ ...timeRange, from: date, value })\n        }}\n      />\n      <div style={{ width: 20 }} />\n      <DatePicker\n        label=\"To\"\n        error={errors.to !== undefined}\n        helperText={errors.to}\n        value={timeRange.to}\n        onChange={date => {\n          timeRange.to = date\n          const value = `${timeRange.from}/${date}`\n          setTimeRange({ ...timeRange, to: date, value })\n        }}\n      />\n    </div>\n  )\n}\n\nconst TimeRangeRelative = props => {\n  const { timeRange = {}, setTimeRange, errors = {} } = props\n\n  return (\n    <div style={{ overflow: 'auto', flex: '1', paddingTop: 10 }}>\n      <div style={{ display: 'flex' }}>\n        <div>\n          <TextField\n            label=\"Last\"\n            error={errors.last !== undefined}\n            variant=\"outlined\"\n            fullWidth\n            value={timeRange.last}\n            onChange={e => {\n              setTimeRange({\n                type: timeRange.type,\n                last: e.target.value,\n                unit: timeRange.unit,\n              })\n            }}\n          />\n          <FormHelperText error={errors.last !== undefined}>\n            {errors.last}\n          </FormHelperText>\n        </div>\n        <div style={{ width: 20 }} />\n        <FormControl fullWidth>\n          <InputLabel>Unit</InputLabel>\n          <Select\n            value={timeRange.unit}\n            error={errors.unit !== undefined}\n            onChange={e => {\n              setTimeRange({\n                type: timeRange.type,\n                last: timeRange.last,\n                unit: e.target.value,\n              })\n            }}\n          >\n            <MenuItem value={`minutes`}>Minutes</MenuItem>\n            <MenuItem value={`hours`}>Hours</MenuItem>\n            <MenuItem value={`days`}>Days</MenuItem>\n            <MenuItem value={`months`}>Months</MenuItem>\n            <MenuItem value={`years`}>Years</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    </div>\n  )\n}\n\nconst DatePicker = props => {\n  const { value, onChange, label, error, helperText } = props\n  const [state, setState] = useState(value)\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <KeyboardDatePicker\n        error={error}\n        helperText={helperText}\n        fullWidth\n        disableToolbar\n        variant=\"inline\"\n        format=\"MM/dd/yyyy\"\n        margin=\"normal\"\n        id=\"date-picker-inline\"\n        label={label}\n        value={state}\n        onChange={(date, value) => {\n          if (isValidDate(date)) {\n            onChange(date.toISOString())\n          } else {\n            onChange('')\n          }\n          setState(value)\n        }}\n        KeyboardButtonProps={{\n          'aria-label': 'change date',\n        }}\n      />\n    </MuiPickersUtilsProvider>\n  )\n}\n\nconst Empty = () => null\n\nconst ranges = {\n  AFTER: TimeRangeAfter,\n  BEFORE: TimeRangeBefore,\n  DURING: TimeRangeDuring,\n  '=': TimeRangeRelative,\n}\n\nconst getTimeRangeWhen = type => {\n  return ranges[type] || Empty\n}\n\nexport const validate = (timeRange = {}) => {\n  const errors = {}\n\n  const { type, value } = timeRange\n\n  switch (type) {\n    case undefined:\n      errors.type = 'Type must supplied'\n      break\n\n    case 'DURING': {\n      const { to, from } = timeRange\n      if (!isValidDate(to)) {\n        errors.to = `'To' date must be a valid date`\n      }\n\n      if (!isValidDate(from)) {\n        errors.from = `'From' date must be a valid date`\n      }\n\n      if (from && to) {\n        if (from >= to) {\n          errors.to = `'To' date must be after 'From' date`\n          errors.from = `'From' date must be befor 'To' date`\n        }\n      }\n      break\n    }\n\n    case '=': {\n      const { last, unit } = timeRange\n      if (isNaN(last) || last < 1) {\n        errors.last = 'Value must be > 0'\n      }\n\n      if (!relativeUnits.includes(unit)) {\n        errors.unit = 'Must include a valid unit'\n      }\n      break\n    }\n\n    default:\n      if (!isValidDate(value)) {\n        errors.value = `A valid date must be selected`\n      }\n  }\n\n  return errors\n}\n\nexport default TimeRange\nexport { TimeRangeAfter, TimeRangeBefore, TimeRangeDuring, TimeRangeRelative }\n","import React from 'react'\nimport { storiesOf } from '@connexta/ace/@storybook/react'\nimport { action } from '@connexta/ace/@storybook/addon-actions'\nimport TimeRange, { validate } from './time-range'\n\nconst stories = storiesOf('TimeRange', module)\n\nstories.addDecorator(Story => <Story />)\n\nstories.add('basic', () => {\n  const [timeRange, setTimeRange] = React.useState({})\n  return (\n    <TimeRange\n      timeRange={timeRange}\n      setTimeRange={timeRange => {\n        setTimeRange(timeRange)\n        action('setTimeRange')(timeRange)\n      }}\n    />\n  )\n})\n\nstories.add('validation', () => {\n  const [timeRange, setTimeRange] = React.useState({})\n  return (\n    <TimeRange\n      timeRange={timeRange}\n      setTimeRange={timeRange => {\n        setTimeRange(timeRange)\n        action('setTimeRange')(timeRange)\n      }}\n      errors={validate(timeRange)}\n    />\n  )\n})\n","import React from 'react'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nconst units = [\n  'meters',\n  'kilometers',\n  'feet',\n  'yards',\n  'miles',\n  'nautical miles',\n]\n\nconst Units = props => {\n  const { value, onChange } = props\n\n  return (\n    <FormControl>\n      <InputLabel>Units</InputLabel>\n      <Select\n        value={value ? value : 'meters'}\n        onChange={e => {\n          onChange(e)\n        }}\n        renderValue={selected => selected}\n        style={{ minWidth: 100 }}\n      >\n        {units.map(unit => (\n          <MenuItem key={unit} value={unit}>\n            <Checkbox checked={unit === value} />\n            <ListItemText primary={unit} />\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default Units\n","import { useQuery } from '@apollo/react-hooks'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Dialog from '@material-ui/core/Dialog'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport List from '@material-ui/core/List'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport VisibilityIcon from '@material-ui/icons/Visibility'\nimport gql from 'graphql-tag'\nimport { Map } from 'immutable'\nimport React from 'react'\nimport Inspector from '../inspector'\nimport { useApolloFallback } from '../react-hooks'\n\nconst resultQuery = gql`\n  query ResultQuery($id: ID!) {\n    metacardById(id: $id) {\n      results {\n        metacard\n        actions {\n          description\n          displayName\n          id\n          title\n          url\n        }\n      }\n    }\n  }\n`\n\nconst Loading = () => {\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <LinearProgress style={{ width: '25vw', height: 10 }} />\n    </div>\n  )\n}\n\nconst ResultInfoError = props => (\n  <Dialog open onClose={props.onClose}>\n    Error\n  </Dialog>\n)\n\nconst ResultInfoContainer = props => {\n  const { loading, data, error } = useQuery(resultQuery, {\n    variables: { id: props.selected },\n  })\n\n  if (error) {\n    return <ResultInfoError />\n  }\n\n  return (\n    <Dialog open onClose={props.onClose}>\n      {loading ? (\n        <Loading />\n      ) : (\n        <Inspector results={data.metacardById.results} />\n      )}\n    </Dialog>\n  )\n}\n\nconst HideAll = props => (\n  <MenuItem onClick={props.onClick}>\n    <VisibilityIcon />\n    <div style={{ width: 20 }} />\n    <ListItemText>Unhide All</ListItemText>\n  </MenuItem>\n)\n\nconst BlacklistItem = props => (\n  <FormControl fullWidth style={{ display: 'flex' }}>\n    <MenuItem>\n      <ListItemText\n        onClick={props.onClick}\n        style={{\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          textAlign: 'center',\n        }}\n      >\n        {props.children}\n      </ListItemText>\n      <IconButton onClick={props.onDelete}>\n        <VisibilityIcon />\n      </IconButton>\n    </MenuItem>\n  </FormControl>\n)\n\nconst HiddenSettings = (props = {}) => {\n  const { value = Map(), onChange } = props\n  const { resultBlacklist = [] } = value.toJSON()\n  const [selected, setSelected] = React.useState(null)\n\n  const ResultInfoComponent = useApolloFallback(\n    ResultInfoContainer,\n    ResultInfoError\n  )\n  return (\n    <React.Fragment>\n      {selected && (\n        <ResultInfoComponent\n          selected={selected}\n          onClose={() => setSelected(null)}\n        />\n      )}\n\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        {resultBlacklist.length > 0 ? (\n          <HideAll\n            onClick={() => props.onChange(value.set('resultBlacklist', []))}\n          />\n        ) : (\n          <Typography>Nothing Hidden.</Typography>\n        )}\n      </div>\n\n      <List>\n        {resultBlacklist.map(({ id, title }) => {\n          return (\n            <BlacklistItem\n              key={id}\n              onClick={() => setSelected(id)}\n              onDelete={() => {\n                onChange(\n                  value.set(\n                    'resultBlacklist',\n                    value\n                      .get('resultBlacklist')\n                      .filter(result => result.id !== id)\n                  )\n                )\n              }}\n            >\n              {title}\n            </BlacklistItem>\n          )\n        })}\n      </List>\n    </React.Fragment>\n  )\n}\n\nexport default HiddenSettings\n","import FormControl from '@material-ui/core/FormControl'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Map } from 'immutable'\nimport React from 'react'\nimport OutlinedSelect from '../input/outlined-select'\n\nconst millisecondsInDay = 24 * 60 * 60 * 1000\nconst durations = [\n  {\n    label: '1 Day',\n    value: millisecondsInDay,\n  },\n  {\n    label: '2 Days',\n    value: 2 * millisecondsInDay,\n  },\n  {\n    label: '4 Days',\n    value: 4 * millisecondsInDay,\n  },\n  {\n    label: '1 Week',\n    value: 7 * millisecondsInDay,\n  },\n  {\n    label: '2 Weeks',\n    value: 14 * millisecondsInDay,\n  },\n  {\n    label: '1 Month',\n    value: 30 * millisecondsInDay,\n  },\n  {\n    label: '2 Months',\n    value: 60 * millisecondsInDay,\n  },\n  {\n    label: '4 Months',\n    value: 120 * millisecondsInDay,\n  },\n  {\n    label: '6 Months',\n    value: 180 * millisecondsInDay,\n  },\n  {\n    label: '1 Year',\n    value: 365 * millisecondsInDay,\n  },\n]\n\nconst NotificationSettings = (props = {}) => {\n  const { value = Map(), onChange } = props\n  const { alertPersistence, alertExpiration } = value.toJSON()\n\n  return (\n    <React.Fragment>\n      <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n        <OutlinedSelect\n          label=\"Keep notifications after logging out\"\n          value={alertPersistence}\n          onChange={e =>\n            onChange(value.set('alertPersistence', e.target.value))\n          }\n        >\n          <MenuItem key={true} value={true}>\n            Yes\n          </MenuItem>\n          <MenuItem key={false} value={false}>\n            No\n          </MenuItem>\n        </OutlinedSelect>\n      </FormControl>\n\n      {alertPersistence && (\n        <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n          <OutlinedSelect\n            label=\"Expire After\"\n            value={alertExpiration}\n            onChange={e =>\n              onChange(value.set('alertExpiration', e.target.value))\n            }\n          >\n            {durations.map(duration => (\n              <MenuItem key={duration.value} value={duration.value}>\n                {duration.label}\n              </MenuItem>\n            ))}\n          </OutlinedSelect>\n        </FormControl>\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default NotificationSettings\n","import FormControl from '@material-ui/core/FormControl'\nimport Slider from '@material-ui/core/Slider'\nimport Typography from '@material-ui/core/Typography'\nimport { Map } from 'immutable'\nimport React from 'react'\n\nconst SearchSettings = (props = {}) => {\n  const { value = Map(), systemProperties = {} } = props\n  const [resultCount, setResultCount] = React.useState(value.get('resultCount'))\n\n  const onChange = (_, newValue) => {\n    setResultCount(newValue)\n    props.onChange(value.set('resultCount', newValue))\n  }\n\n  return (\n    <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n      <Typography>Number of Search Results</Typography>\n      <Typography>{resultCount}</Typography>\n      <Slider\n        max={systemProperties.resultCount}\n        defaultValue={systemProperties.resultCount}\n        value={resultCount}\n        onChange={onChange}\n      />\n    </FormControl>\n  )\n}\n\nexport default SearchSettings\n","import FormControl from '@material-ui/core/FormControl'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Typography from '@material-ui/core/Typography'\nimport { Map } from 'immutable'\nimport moment from 'moment'\nimport momentTimezone from 'moment-timezone'\nimport React from 'react'\nimport OutlinedSelect from '../input/outlined-select'\n\nconst useCurrentTime = (datetimefmt, timeZone) => {\n  const [currentTime, setCurrentTime] = React.useState(\n    momentTimezone.tz(moment(), timeZone).format(datetimefmt)\n  )\n\n  React.useEffect(\n    () => {\n      const interval = setInterval(() => {\n        setCurrentTime(\n          momentTimezone.tz(moment(), timeZone).format(datetimefmt)\n        )\n      }, 50)\n      return () => clearInterval(interval)\n    },\n    [datetimefmt, timeZone]\n  )\n\n  return currentTime\n}\n\nconst CurrentTime = props => {\n  const currentTime = useCurrentTime(props.format, props.timeZone)\n  return (\n    <div style={{ marginTop: 10 }}>\n      <Typography variant=\"h6\">Current Time (example)</Typography>\n      <Typography>{currentTime}</Typography>\n    </div>\n  )\n}\n\nconst timeZoneMap = {\n  UTC: 'Etc/UTC',\n  '-12': 'Etc/GMT+12',\n  '-11': 'Etc/GMT+11',\n  '-10': 'Etc/GMT+10',\n  '-9': 'Etc/GMT+9',\n  '-8': 'Etc/GMT+8',\n  '-7': 'Etc/GMT+7',\n  '-6': 'Etc/GMT+6',\n  '-5': 'Etc/GMT+5',\n  '-4': 'Etc/GMT+4',\n  '-3': 'Etc/GMT+3',\n  '-2': 'Etc/GMT+2',\n  '-1': 'Etc/GMT+1',\n  '1': 'Etc/GMT-1',\n  '2': 'Etc/GMT-2',\n  '3': 'Etc/GMT-3',\n  '4': 'Etc/GMT-4',\n  '5': 'Etc/GMT-5',\n  '6': 'Etc/GMT-6',\n  '7': 'Etc/GMT-7',\n  '8': 'Etc/GMT-8',\n  '9': 'Etc/GMT-9',\n  '10': 'Etc/GMT-10',\n  '11': 'Etc/GMT-11',\n  '12': 'Etc/GMT-12',\n}\n\nconst getTimeZoneFor = (sign, value) => {\n  if (sign === '+') return timeZoneMap[value]\n\n  return timeZoneMap[`${sign}${value}`]\n}\n\nconst generateTimeZones = (sign, rangeLimit) =>\n  Array(rangeLimit)\n    .fill(rangeLimit)\n    .map((_, index) => ({\n      label: `${sign}${index + 1}:00`,\n      value: getTimeZoneFor(sign, index + 1),\n    }))\n\nconst timeZones = [\n  ...generateTimeZones('+', 12),\n  {\n    label: 'UTC, +00:00',\n    value: timeZoneMap['UTC'],\n  },\n  ...generateTimeZones('-', 12),\n]\n\nconst dateTimeFormatsMap = {\n  ISO: { datetimefmt: 'YYYY-MM-DD[T]HH:mm:ss.SSSZ', timefmt: 'HH:mm:ssZ' },\n  24: { datetimefmt: 'DD MMM YYYY HH:mm:ss.SSS Z', timefmt: 'HH:mm:ss Z' },\n  12: { datetimefmt: 'DD MMM YYYY h:mm:ss.SSS a Z', timefmt: 'h:mm:ss a Z' },\n}\n\nconst dateTimeFormats = [\n  {\n    label: 'ISO 8601',\n    format: dateTimeFormatsMap['ISO'],\n  },\n  {\n    label: '24 Hour Standard',\n    format: dateTimeFormatsMap['24'],\n  },\n  {\n    label: '12 Hour Standard',\n    format: dateTimeFormatsMap['12'],\n  },\n]\n\nconst TimeSettings = (props = {}) => {\n  const { value = Map(), onChange } = props\n  const {\n    timeZone,\n    dateTimeFormat: { datetimefmt, timefmt } = {},\n  } = value.toJSON()\n\n  const format = dateTimeFormats.findIndex(\n    ({ format }) =>\n      format.datetimefmt === datetimefmt && format.timefmt === timefmt\n  )\n\n  return (\n    <React.Fragment>\n      <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n        <OutlinedSelect\n          label=\"Time Zone\"\n          value={timeZone}\n          onChange={e => onChange(value.set('timeZone', e.target.value))}\n        >\n          {timeZones.map(timezone => (\n            <MenuItem key={timezone.value} value={timezone.value}>\n              {timezone.label}\n            </MenuItem>\n          ))}\n        </OutlinedSelect>\n      </FormControl>\n\n      <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n        <OutlinedSelect\n          label=\"Time Format\"\n          value={format}\n          onChange={e =>\n            onChange(\n              value.set(\n                'dateTimeFormat',\n                dateTimeFormats[e.target.value].format\n              )\n            )\n          }\n        >\n          {dateTimeFormats.map((timeFormat, index) => (\n            <MenuItem key={index} value={index}>\n              {timeFormat.label}\n            </MenuItem>\n          ))}\n        </OutlinedSelect>\n      </FormControl>\n\n      <CurrentTime format={datetimefmt} timeZone={timeZone} />\n    </React.Fragment>\n  )\n}\n\nexport default TimeSettings\n","import { useMutation, useQuery } from '@apollo/react-hooks'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Typography from '@material-ui/core/Typography'\nimport AccessibleForwardIcon from '@material-ui/icons/AccessibleForward'\nimport BackArrowIcon from '@material-ui/icons/ArrowBackIos'\nimport BrushIcon from '@material-ui/icons/Brush'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport PublicIcon from '@material-ui/icons/Public'\nimport ScheduleIcon from '@material-ui/icons/Schedule'\nimport SearchIcon from '@material-ui/icons/Search'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff'\nimport gql from 'graphql-tag'\nimport { fromJS, Map } from 'immutable'\nimport React from 'react'\nimport { useApolloFallback } from '../react-hooks'\nimport HiddenResultsSettings from './hidden-results-settings'\nimport NotificationSettings from './notification-settings'\nimport SearchSettings from './search-setttings'\nimport TimeSettings from './time-settings'\n\nconst generateSetting = (title, Icon = AccessibleForwardIcon, component) => {\n  return {\n    title,\n    Icon,\n    component:\n      component ||\n      (() => {\n        return <h2>{title}</h2>\n      }),\n  }\n}\n\nconst settings = [\n  generateSetting('Theme', BrushIcon),\n  generateSetting('Notifications', NotificationsIcon, NotificationSettings),\n  generateSetting('Map', PublicIcon),\n  generateSetting('Search Options', SearchIcon, SearchSettings),\n  generateSetting('Time', ScheduleIcon, TimeSettings),\n  generateSetting('Hidden', VisibilityOffIcon, HiddenResultsSettings),\n]\n\nconst AllSettings = props => (\n  <List>\n    {settings.map((setting, index) => {\n      const { title, Icon } = setting\n      return (\n        <MenuItem key={index} onClick={() => props.onClick(setting)}>\n          <ListItemIcon>\n            <Icon />\n          </ListItemIcon>\n          <ListItemText>{title}</ListItemText>\n        </MenuItem>\n      )\n    })}\n  </List>\n)\n\nconst DrawerContent = props => {\n  if (props.children) {\n    return (\n      <div\n        style={{\n          padding: 20,\n        }}\n      >\n        {props.children}\n      </div>\n    )\n  }\n\n  return <AllSettings onClick={props.onSelect} />\n}\n\nconst BackButton = props => (\n  <MenuItem onClick={props.onClick} style={{ textAlign: 'left' }}>\n    <ListItemIcon>\n      <BackArrowIcon />\n    </ListItemIcon>\n    <ListItemText>\n      <Typography variant=\"h6\">Back to Settings</Typography>\n    </ListItemText>\n  </MenuItem>\n)\n\nconst Navigation = props => {\n  const Top = () =>\n    props.navigate ? (\n      <BackButton {...props} />\n    ) : (\n      <Typography style={{ marginLeft: 20 }} variant=\"h6\">\n        {`Settings`}\n      </Typography>\n    )\n\n  return (\n    <React.Fragment>\n      <Top />\n      <Divider style={{ marginTop: 10, marginBottom: 15 }} />\n\n      {props.children}\n    </React.Fragment>\n  )\n}\n\nconst UserSettingsDrawer = props => {\n  const { open, onClose, navigate, onNavigate } = props\n  return (\n    <Drawer\n      ModalProps={{ disableEnforceFocus: true }}\n      anchor=\"right\"\n      open={open}\n      onClose={onClose}\n    >\n      <div style={{ width: 360, marginTop: 20 }}>\n        <Navigation navigate={navigate} onClick={onNavigate}>\n          {props.children}\n        </Navigation>\n      </div>\n    </Drawer>\n  )\n}\n\nconst UserSettings = props => {\n  const [open, setOpen] = React.useState(props.open)\n  const [selected, setSelected] = React.useState({})\n  const [preferences, setPreferences] = React.useState(props.value)\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n    setSelected({})\n    props.onSave(preferences.toJSON())\n  }\n\n  const Component = selected.component ? selected.component : null\n  const drawerProps = {\n    open,\n    onClose: handleDrawerClose,\n    navigate: selected.component !== undefined,\n    onNavigate: () => setSelected({}),\n  }\n  return (\n    <React.Fragment>\n      <IconButton edge=\"end\" color=\"inherit\" onClick={handleDrawerOpen}>\n        <SettingsIcon />\n      </IconButton>\n      <UserSettingsDrawer {...drawerProps}>\n        <DrawerContent\n          onSelect={selected => {\n            setSelected(selected)\n          }}\n        >\n          {Component && (\n            <Component\n              value={preferences}\n              onChange={newPreferences => setPreferences(newPreferences)}\n              systemProperties={props.systemProperties}\n            />\n          )}\n        </DrawerContent>\n      </UserSettingsDrawer>\n    </React.Fragment>\n  )\n}\n\nconst mutation = gql`\n  mutation updateUserPreferences($userPreferences: Json) {\n    updateUserPreferences(userPreferences: $userPreferences)\n  }\n`\n\nconst query = gql`\n  query UserPreferences {\n    user {\n      preferences {\n        alertExpiration\n        alertPersistence\n        alerts\n        animation\n        columnHide\n        columnOrder\n        coordinateFormat\n        dateTimeFormat {\n          datetimefmt\n          timefmt\n        }\n        fontSize\n        goldenLayout\n        homeDisplay\n        homeFilter\n        homeSort\n        hoverPreview\n        id\n        inspectorDetailsHidden\n        inspectorDetailsOrder\n        inspectorSummaryOrder\n        inspectorSummaryShown\n        querySettings {\n          type\n        }\n        resultBlacklist {\n          id\n          title\n        }\n        resultCount\n        resultDisplay\n        resultPreview\n        theme {\n          customBackgroundAccentContent\n        }\n        timeZone\n        uploads\n        visualization\n      }\n    }\n    systemProperties {\n      resultCount\n    }\n  }\n`\n\nconst Container = () => {\n  const { error, data, loading } = useQuery(query)\n  const [updateUserPreferences] = useMutation(mutation, {\n    update: (cache, { data: { updateUserPreferences } }) => {\n      const { systemProperties } = cache.readQuery({ query })\n\n      cache.writeQuery({\n        query,\n        data: {\n          user: {\n            preferences: updateUserPreferences,\n            __typename: 'UserPreferences',\n          },\n          systemProperties,\n        },\n      })\n    },\n  })\n\n  return loading || error ? null : (\n    <UserSettings\n      value={Map(data.user.preferences)}\n      systemProperties={data.systemProperties}\n      onSave={userPreferences => {\n        if (!fromJS(data.user.preferences).equals(fromJS(userPreferences))) {\n          updateUserPreferences({ variables: { userPreferences } })\n        }\n      }}\n    />\n  )\n}\n\nexport default props => {\n  const Component = useApolloFallback(Container, UserSettings)\n  return <Component {...props} />\n}\n","import { action } from '@connexta/ace/@storybook/addon-actions'\nimport { boolean } from '@connexta/ace/@storybook/addon-knobs'\nimport { storiesOf } from '@connexta/ace/@storybook/react'\nimport { Map } from 'immutable'\nimport React from 'react'\nimport HiddenResultsSettings from './hidden-results-settings'\nimport NotificationSettings from './notification-settings'\nimport SearchSettings from './search-setttings'\nimport TimeSettings from './time-settings'\nimport Settings from './user-settings'\n\nconst stories = storiesOf('User Settings', module)\nstories.addDecorator(Story => <Story />)\n\nconst userPrefs = Map({\n  alertPersistence: true,\n  alertExpiration: 2592000000,\n  resultCount: 50,\n  dateTimeFormat: {\n    datetimefmt: 'DD MMM YYYY h:mm:ss.SSS a Z',\n    timefmt: 'h:mm:ss a Z',\n  },\n  timeZone: 'Etc/UTC',\n})\n\nconst UserSettings = () => {\n  const [state, setState] = React.useState(Map({}))\n  const open = boolean('Open Drawer', true)\n  return (\n    <Settings\n      open={open}\n      value={state}\n      onSave={newState => {\n        setState(newState)\n        action('onSave')(newState)\n      }}\n    />\n  )\n}\n\nconst Setting = component => {\n  const [state, setState] = React.useState(userPrefs)\n  const Component = component ? component : null\n  return (\n    Component && (\n      <Component\n        value={state}\n        onChange={newState => {\n          setState(newState)\n          action('onChange')(newState)\n        }}\n      />\n    )\n  )\n}\n\nconst sampleBlackList = [\n  {\n    id: '08ce4b7e641149b58ad47ec665d87a40',\n    title: 'Result 1',\n  },\n  {\n    id: '1f130107e85a481d835b86cd90a80355',\n    title:\n      'Result 2 (Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title Long title) ',\n  },\n]\n\nconst HiddenResults = () => {\n  const populated = boolean('Populated', false)\n  const [state, setState] = React.useState(Map({}))\n  React.useEffect(\n    () => setState(Map(populated ? { resultBlacklist: sampleBlackList } : {})),\n    [populated]\n  )\n\n  return (\n    <HiddenResultsSettings\n      value={state}\n      onChange={newState => {\n        setState(newState)\n        action('onChange')(newState)\n      }}\n    />\n  )\n}\n\nconst generateStory = (label, component) => ({ label, component })\nconst generatedStories = [\n  generateStory('Notification Settings', () => Setting(NotificationSettings)),\n  generateStory('Search Settings', () => Setting(SearchSettings)),\n  generateStory('Time Settings', () => Setting(TimeSettings)),\n  generateStory('Hidden Results Settings', HiddenResults),\n  generateStory('User Settings', UserSettings),\n]\n\ngeneratedStories.forEach(setting => {\n  stories.add(setting.label, () => {\n    const Component = setting.component ? setting.component : null\n    return Component && <Component />\n  })\n})\n","import React, { useState } from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { useSelectionInterface } from '../react-hooks'\n\nimport { Layout, Provider, AddConfig, DragSource } from '../react-layout'\n\nimport Inspector from '../inspector/inspector'\nimport ResultTable from '../results/results'\n\nimport WorldMap from '../world-map'\nimport { RENDERER_STYLE } from '../map-style'\nimport WKT from 'ol/format/WKT'\nimport GeoJSON from 'ol/format/GeoJSON'\nimport { geometry, coordinates, shapes } from 'geospatialdraw'\n\nconst AddVisualization = () => {\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const options = {\n    '2D Map': {\n      type: 'component',\n      title: '2D Map',\n      componentName: '2d-map',\n    },\n    Table: {\n      type: 'component',\n      title: 'Table',\n      componentName: 'table',\n    },\n    Inspector: {\n      type: 'component',\n      title: 'Inspector',\n      componentName: 'inspector',\n    },\n  }\n\n  return (\n    <div style={{ position: 'absolute', bottom: 10, right: 10 }}>\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        color=\"primary\"\n        variant=\"contained\"\n      >\n        Add Visual\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {Object.keys(options).map(option => {\n          const config = options[option]\n\n          return (\n            <MenuItem key={option} onClick={() => handleClose(option)}>\n              <DragSource config={config}>\n                <AddConfig config={config}>{option}</AddConfig>\n              </DragSource>\n            </MenuItem>\n          )\n        })}\n      </Menu>\n    </div>\n  )\n}\n\nconst config = {\n  content: [\n    {\n      type: 'row',\n      content: [\n        {\n          type: 'component',\n          title: 'Table',\n          componentName: 'table',\n        },\n      ],\n    },\n  ],\n}\n\nconst VisContainer = ({ children }) => {\n  return (\n    <div\n      style={{\n        padding: 20,\n        boxSizing: 'border-box',\n        overflow: 'auto',\n        height: '100%',\n        width: '100%',\n      }}\n    >\n      {children}\n    </div>\n  )\n}\n\nconst Visualizations = props => {\n  const { results } = props\n\n  const InspectorVis = () => {\n    const [selected] = useSelectionInterface()\n\n    const selectedResults = results.filter(result => {\n      return selected.has(result.metacard.properties.id)\n    })\n\n    return (\n      <VisContainer>\n        <Inspector results={selectedResults} />\n      </VisContainer>\n    )\n  }\n\n  const TableVis = () => {\n    return (\n      <VisContainer>\n        <ResultTable\n          attributes={['id', 'title', 'created']}\n          results={results}\n        />\n      </VisContainer>\n    )\n  }\n\n  const wkt = new WKT({ splitCollection: true })\n  const geoJSON = new GeoJSON()\n  const shapeDetector = new shapes.ShapeDetector()\n  const MapVis = () => {\n    const PROJECTION = 'EPSG:4326'\n    const [selected] = useSelectionInterface()\n    const geos = results\n      .map(\n        result =>\n          result.metacard.properties.location\n            ? wkt\n                .readFeatures(result.metacard.properties.location)\n                .map(feature =>\n                  geometry.makeGeometry(\n                    result.metacard.properties.id,\n                    geoJSON.writeFeatureObject(feature),\n                    '',\n                    shapeDetector.shapeFromFeature(feature),\n                    0,\n                    geometry.METERS,\n                    {\n                      selected: selected.has(result.metacard.properties.id),\n                    }\n                  )\n                )\n            : []\n      )\n      .reduce((list, value) => list.concat(value), [])\n    const selectedExtents = geos\n      .filter(g => g.properties.selected)\n      .map(g => g.bbox)\n    const viewport =\n      selectedExtents.length > 0\n        ? geometry.combineExtents(selectedExtents)\n        : null\n    return (\n      <WorldMap\n        projection={PROJECTION}\n        style={RENDERER_STYLE}\n        coordinateType={coordinates.LAT_LON}\n        maxZoom={20}\n        minZoom={1.5}\n        zoom={2}\n        geos={geos}\n        viewport={viewport}\n      />\n    )\n  }\n\n  const components = {\n    inspector: InspectorVis,\n    table: TableVis,\n    '2d-map': MapVis,\n  }\n\n  return (\n    <Provider>\n      <div style={{ position: 'relative', height: 'calc(100vh - 64px)' }}>\n        <Layout\n          config={config}\n          components={components}\n          onChange={() => {\n            /*console.log(config)*/\n          }}\n        />\n        <AddVisualization />\n      </div>\n    </Provider>\n  )\n}\n\nexport default Visualizations\n","import React from 'react'\n\nimport { storiesOf } from '@connexta/ace/@storybook/react'\n\nimport Visualizations from './visualizations'\nimport { SelectionProvider } from '../react-hooks/use-selection-interface'\n\nconst stories = storiesOf('Workspaces', module)\n\nimport genResults from '../gen-results'\n\nstories.add('Visualizations', () => {\n  const results = genResults()\n\n  return (\n    <SelectionProvider>\n      <Visualizations results={results} />\n    </SelectionProvider>\n  )\n})\n","import React from 'react'\nimport Box from '@material-ui/core/Box'\nimport { menu, drawing } from 'geospatialdraw'\nimport WorldMap from './world-map'\n\nconst Root = props => (\n  <Box\n    position=\"relative\"\n    display=\"flex\"\n    flexDirection=\"column\"\n    width=\"100%\"\n    height=\"100%\"\n    margin={0}\n    padding={0}\n    {...props}\n  />\n)\nconst MenuContainer = props => <Box bgcolor=\"rgb(52, 172, 247)\" {...props} />\nconst Menu = menu.MaterialDrawMenu\n\n/*\nprops {\n  projection\n  maxZoom\n  minZoom\n  zoom\n  geos\n  viewport\n  coordinateType\n  drawGeo\n  drawShape\n  isDrawing\n  drawStyle\n  mapStyle\n  onDrawnGeo\n  defaultGeoProperties ?\n  height\n  containerWidth ?\n  containerHeight ?\n}\n*/\n\nclass WorldMapWithDrawMenu extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      drawToolbox: null,\n      drawGeo: this.props.drawGeo,\n      drawShape: this.props.drawShape,\n    }\n    this.setDrawShape = drawShape => {\n      this.setState({ drawShape, drawGeo: null })\n    }\n    this.setDrawGeo = drawGeo => {\n      this.setState({ drawGeo })\n    }\n    this.onDrawOk = () => {\n      this.props.onDrawnGeo(this.state.drawGeo)\n    }\n    this.onDrawCancel = () => {\n      this.props.onDrawnGeo(this.props.drawGeo)\n    }\n    this.onMapLoaded = map => {\n      const drawToolbox = new drawing.openlayers.DrawingToolbox({\n        map,\n        drawingStyle: this.props.drawStyle,\n      })\n      this.setState({ drawToolbox })\n    }\n  }\n\n  componentDidMount() {\n    const { drawGeo, drawShape } = this.props\n    this.setState({ drawGeo, drawShape })\n  }\n\n  componentDidUpdate(prevProps) {\n    const { drawGeo, drawShape } = this.props\n    if (prevProps.drawGeo !== drawGeo) {\n      this.setState({ drawGeo })\n    }\n    if (prevProps.drawShape !== drawShape) {\n      this.setState({ drawShape })\n    }\n  }\n\n  render() {\n    const { drawToolbox, drawGeo, drawShape } = this.state\n    const {\n      isDrawing,\n      projection,\n      mapStyle,\n      geos,\n      viewport,\n      coordinateType,\n      maxZoom,\n      minZoom,\n      zoom,\n      height,\n      containerWidth,\n      containerHeight,\n      defaultGeoProperties,\n    } = this.props\n    return (\n      <Root>\n        {drawToolbox === null ? null : (\n          <MenuContainer>\n            <Menu\n              shape={drawShape}\n              toolbox={drawToolbox}\n              isActive={isDrawing}\n              geometry={drawGeo}\n              onCancel={this.onDrawCancel}\n              onOk={this.onDrawOk}\n              onSetShape={this.setDrawShape}\n              onUpdate={this.setDrawGeo}\n              disabledShapes={['Point']}\n              defaultGeoProperties={defaultGeoProperties}\n            />\n          </MenuContainer>\n        )}\n        <WorldMap\n          projection={projection}\n          style={mapStyle}\n          geos={geos}\n          viewport={viewport}\n          coordinateType={coordinateType}\n          maxZoom={maxZoom}\n          minZoom={minZoom}\n          zoom={zoom}\n          onMapLoaded={this.onMapLoaded}\n          height={height}\n          containerWidth={containerWidth}\n          containerHeight={containerHeight}\n        />\n      </Root>\n    )\n  }\n}\n\nexport default WorldMapWithDrawMenu\n","import { action } from '@connexta/ace/@storybook/addon-actions'\nimport { storiesOf } from '@connexta/ace/@storybook/react'\nimport { withKnobs, select } from '@connexta/ace/@storybook/addon-knobs'\nimport React, { useState } from 'react'\nimport WorldMapWithDrawMenu from './world-map-with-draw-menu'\nimport { geometry, shapes, coordinates } from 'geospatialdraw'\nimport { DRAWING_STYLE, RENDERER_STYLE } from './map-style'\n\nconst stories = storiesOf('WorldMap', module)\nstories.addDecorator(withKnobs)\n\nconst PROJECTION = 'EPSG:4326'\n\nconst geometryCatalog = {\n  none: {\n    shape: shapes.POLYGON,\n    geo: null,\n  },\n  Line: {\n    shape: shapes.LINE,\n    geo: geometry.makeLineGeo(\n      '',\n      [[50, 50], [56, 20], [36, 30]],\n      0,\n      geometry.METERS\n    ),\n  },\n  Polygon: {\n    shape: shapes.POLYGON,\n    geo: geometry.makePolygonGeo(\n      '',\n      [[50, 50], [56, 20], [36, 30]],\n      0,\n      geometry.METERS\n    ),\n  },\n  'Bounding Box': {\n    shape: shapes.BOUNDING_BOX,\n    geo: geometry.makeBBoxGeo('', [20, 30, 50, 50]),\n  },\n  Circle: {\n    shape: shapes.POINT_RADIUS,\n    geo: geometry.makePointRadiusGeo('', 50, 50, 600, geometry.MILES),\n  },\n  'Buffered Line': {\n    shape: shapes.LINE,\n    geo: geometry.makeLineGeo(\n      '',\n      [[50, 50], [56, 20], [36, 30]],\n      250,\n      geometry.KILOMETERS\n    ),\n  },\n  'Buffered Polygon': {\n    shape: shapes.POLYGON,\n    geo: geometry.makePolygonGeo(\n      '',\n      [[50, 50], [56, 20], [36, 30]],\n      150,\n      geometry.NAUTICAL_MILES\n    ),\n  },\n}\n\nstories.add('draw geometry', () => {\n  const [\n    { isDrawing = true, geos = [], viewport = null },\n    setDrawingState,\n  ] = useState(true)\n  const searchGeoType = select(\n    'starting geometry',\n    Object.keys(geometryCatalog),\n    'none'\n  )\n  const searchGeo = geometryCatalog[searchGeoType]\n  return (\n    <WorldMapWithDrawMenu\n      projection={PROJECTION}\n      maxZoom={20}\n      minZoom={1.5}\n      zoom={2}\n      geos={geos}\n      viewport={viewport}\n      coordinateType={coordinates.LAT_LON}\n      isDrawing={isDrawing}\n      mapStyle={RENDERER_STYLE}\n      drawStyle={DRAWING_STYLE}\n      drawShape={searchGeo.shape}\n      drawGeo={searchGeo.geo}\n      onDrawnGeo={geo => {\n        setDrawingState({\n          isDrawing: false,\n          geos: [geo],\n          viewport: geo.bbox,\n        })\n        action('Search For Geo')(geo)\n      }}\n      height=\"500px\"\n    />\n  )\n})\n","import React from 'react'\nimport { Map as OpenLayersMap, View } from 'ol'\nimport Tile from 'ol/layer/Tile'\nimport OSM from 'ol/source/OSM'\nimport Box from '@material-ui/core/Box'\nimport { renderer, geometry } from 'geospatialdraw'\n\n/*\n\nprops {\n  projection\n  style\n  geos\n  viewport\n  coordinateType\n  maxZoom\n  minZoom\n  zoom\n  onMapLoaded\n  width ?\n  height ?\n}\n\n*/\n\nfunction throttled(delay, fn) {\n  let lastCall = 0\n  return (...args) => {\n    window.requestAnimationFrame(() => {\n      const now = new Date().getTime()\n      if (now - lastCall >= delay) {\n        lastCall = now\n        fn(...args)\n      }\n    })\n  }\n}\n\nexport const geometryListToViewport = geometryList =>\n  geometryList.length > 0\n    ? geometry.combineExtents(geometryList.map(geometry => geometry.bbox))\n    : null\n\nclass WorldMap extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      map: null,\n      geoRenderer: null,\n      lat: 0,\n      lon: 0,\n      containerWidth: 0,\n      containerHeight: 0,\n    }\n    this.mapDivElement = null\n    this.setMapDiv = element => {\n      this.mapDivElement = element\n    }\n    this.pointerMove = e => {\n      const [lon, lat] = e.coordinate\n      this.setState({ lat, lon })\n    }\n    this.mapResize = throttled(200, () => {\n      if (this.state.geoRenderer) {\n        this.state.geoRenderer.resizeMap()\n      }\n    })\n  }\n\n  componentDidUpdate(prevProps) {\n    const { geos, viewport } = this.props\n    if (this.state.geoRenderer) {\n      if (geos !== prevProps.geos) {\n        this.state.geoRenderer.clearGeos()\n        this.state.geoRenderer.renderList(geos || [])\n      }\n      if (viewport && viewport !== prevProps.viewport) {\n        this.state.geoRenderer.panToExtent(viewport)\n      }\n    }\n    if (this.mapDivElement) {\n      const containerWidth = this.mapDivElement.parentElement.offsetWidth\n      const containerHeight = this.mapDivElement.parentElement.offsetHeight\n      if (\n        containerWidth !== this.state.containerWidth ||\n        containerHeight !== this.state.containerHeight\n      ) {\n        this.setState({ containerWidth, containerHeight })\n        this.mapResize()\n      }\n    }\n  }\n\n  componentDidMount() {\n    const map = new OpenLayersMap({\n      layers: [\n        new Tile({\n          source: new OSM(),\n        }),\n      ],\n      target: this.mapDivElement,\n      view: new View({\n        center: [0, 0],\n        rotation: 0,\n        zoom: this.props.zoom,\n        minZoom: this.props.minZoom,\n        maxZoom: this.props.maxZoom,\n        projection: this.props.projection,\n      }),\n    })\n    this.mapDivElement\n      .querySelectorAll('.ol-overlaycontainer-stopevent, .ol-overlaycontainer')\n      .forEach(el => (el.style.display = 'none'))\n    map.on('pointermove', this.pointerMove)\n    const geoRenderer = new renderer.Renderer(\n      map,\n      this.props.style,\n      this.props.maxZoom\n    )\n    geoRenderer.clearGeos()\n    geoRenderer.renderList(this.props.geos || [])\n    if (this.props.viewport) {\n      geoRenderer.panToExtent(this.props.viewport)\n    }\n    this.setState({ map, geoRenderer }, () => {\n      if (this.props.onMapLoaded) {\n        this.props.onMapLoaded(map)\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    if (this.state.map) {\n      this.state.map.un('pointermove', this.pointerMove)\n    }\n  }\n\n  render() {\n    const { lat, lon } = this.state\n    return (\n      <Box\n        width={this.props.width || '100%'}\n        height={this.props.height || '100%'}\n        bgcolor=\"black\"\n        position=\"relative\"\n      >\n        <Box\n          width=\"100%\"\n          height=\"100%\"\n          ref={this.setMapDiv}\n          className=\"map resize-listener\"\n        />\n        <Box\n          position=\"absolute\"\n          left=\"0\"\n          bottom=\"0\"\n          bgcolor=\"black\"\n          color=\"white\"\n          p={1}\n        >\n          {Math.abs(lat).toFixed(6)}\n          &deg; {lat < 0 ? 'S' : 'N'} {Math.abs(lon).toFixed(6)}\n          &deg; {lon < 0 ? 'W' : 'E'}\n        </Box>\n      </Box>\n    )\n  }\n}\n\nexport default WorldMap\n","import { storiesOf } from '@connexta/ace/@storybook/react'\nimport { withKnobs, select } from '@connexta/ace/@storybook/addon-knobs'\nimport React from 'react'\nimport WorldMap from './world-map'\nimport { geometry, coordinates } from 'geospatialdraw'\nimport { Style, Fill, Circle, Stroke } from 'ol/style'\nconst { BUFFER_CLASSNAME, HIDDEN_CLASSNAME, POINT_RADIUS } = geometry\n\nconst featureHasClass = (feature, className) =>\n  (feature.get('class') || []).includes(className)\n\nconst featureColor = feature =>\n  featureHasClass(feature, HIDDEN_CLASSNAME)\n    ? 'rgba(0, 0, 0, 0)'\n    : feature.get('color') || 'blue'\n\nconst LINE_WIDTH = 1.8\nconst POINT_SIZE = 4\n\nconst MAP_STYLE = feature =>\n  new Style({\n    stroke: new Stroke({\n      color: featureColor(feature),\n      width: LINE_WIDTH,\n    }),\n    fill: new Fill({\n      color: 'rgba(0, 0, 0, 0)',\n    }),\n    ...(featureHasClass(feature, BUFFER_CLASSNAME) &&\n    feature.get('shape') === POINT_RADIUS\n      ? {}\n      : {\n          image: new Circle({\n            radius: POINT_SIZE,\n            fill: new Fill({\n              color: featureColor(feature),\n            }),\n          }),\n        }),\n  })\n\nconst PROJECTION = 'EPSG:4326'\n\nconst stories = storiesOf('WorldMap', module)\nstories.addDecorator(withKnobs)\n\nstories.add('bare map', () => {\n  return (\n    <WorldMap\n      projection={PROJECTION}\n      style={MAP_STYLE}\n      coordinateType=\"LAT LON\"\n      maxZoom={20}\n      minZoom={1.5}\n      zoom={2}\n      height=\"500px\"\n    />\n  )\n})\n\nstories.add('render geometries', () => {\n  const geos = [\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-77.14101030066769, 38.12853403337011],\n            [-77.15732422141605, 38.090304558346936],\n            [-77.17227678899663, 38.059283559933505],\n            [-77.2787301432643, 38.042947321920096],\n            [-77.39377564457455, 38.10478846336155],\n            [-77.37989430571616, 38.211621211135004],\n            [-77.29066988006372, 38.23704057602198],\n            [-77.23655051232805, 38.17776592006078],\n            [-77.14101030066769, 38.12853403337011],\n          ],\n        ],\n      },\n      properties: {\n        shape: 'Polygon',\n        id: 'shape1',\n        color: '#a020f0',\n        buffer: 0,\n        bufferUnit: 'meters',\n      },\n      bbox: [\n        -77.39377564457455,\n        38.042947321920096,\n        -77.14101030066769,\n        38.23704057602198,\n      ],\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-48.52260964518281, -5.422812136709466],\n            [-48.20103414906473, -5.921405130103808],\n            [-48.58495335774491, -6.656576615699192],\n            [-49.35629496058171, -7.220492195843082],\n            [-49.05070514670665, -8.114299347133246],\n            [-50.494650503939695, -10.315617580582623],\n            [-50.555500573327464, -12.51119524144825],\n            [-49.699389848670606, -12.992255223966657],\n            [-48.84844563933912, -12.873616723902453],\n            [-47.881541863815855, -13.518283025057785],\n            [-46.95692697299289, -13.140361996627453],\n            [-46.08493399752098, -13.000483378003368],\n            [-46.11803796608728, -11.901355080634344],\n            [-46.530019725181205, -11.17708617298432],\n            [-45.75886947476387, -10.136511715969567],\n            [-46.50648337758783, -9.950325811836548],\n            [-46.81628294469097, -9.007723793584494],\n            [-46.55585230180809, -8.050578991453602],\n            [-47.15650754648799, -7.875682880068629],\n            [-47.495392681348804, -6.901699065025397],\n            [-47.4075619208174, -5.461580756181515],\n            [-48.101023088934625, -4.881208867964203],\n            [-48.52260964518281, -5.422812136709466],\n          ],\n        ],\n      },\n      properties: {\n        shape: 'Polygon',\n        id: 'shape2',\n        color: '#ffd700',\n        buffer: 0,\n        bufferUnit: 'meters',\n      },\n      bbox: [\n        -50.555500573327464,\n        -13.518283025057785,\n        -45.75886947476387,\n        -4.881208867964203,\n      ],\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [129.1518048627637, -31.629617510480546],\n            [129.05907305960878, -25.93903105437493],\n            [141.08274489367915, -26.010442822429503],\n            [140.87057949583584, -37.992509539459405],\n            [140.09850443831823, -37.76171498473229],\n            [139.64540194477775, -36.77768152000342],\n            [139.03146773014043, -35.660346088239336],\n            [138.06150962839044, -35.888242774117856],\n            [136.83571110543622, -35.99091012761082],\n            [135.63019766442213, -34.850391745058005],\n            [134.23673672951367, -33.08745253195413],\n            [133.78342724534116, -32.1932530015316],\n            [131.96563551474608, -32.05125742795062],\n            [131.32334358351898, -31.491968740172446],\n            [129.1518048627637, -31.629617510480546],\n          ],\n        ],\n      },\n      properties: {\n        shape: 'Polygon',\n        id: 'shape3',\n        color: '#ff00ff',\n        buffer: 0,\n        bufferUnit: 'meters',\n      },\n      bbox: [\n        129.05907305960878,\n        -37.992509539459405,\n        141.08274489367915,\n        -25.93903105437493,\n      ],\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [112.66897771954346, 47.8014155606246],\n            [112.76517881053884, 47.60824961436289],\n            [113.66977457160384, 47.533633165806926],\n            [114.45758081350047, 47.14843031611881],\n            [114.42756155693857, 46.84807171478872],\n            [114.65177618117082, 46.72985428850513],\n            [114.9275947044044, 46.48847157174798],\n            [115.43516587315291, 46.55445416332818],\n            [115.74273042434355, 46.56478158455688],\n            [116.30303453492868, 46.597723069633666],\n            [116.51034672377376, 46.30828961809215],\n            [116.51014748092048, 46.17283768499923],\n            [116.2526593001893, 45.91422046143276],\n            [116.28599927097265, 45.758611793015646],\n            [116.03309367586708, 45.6576952878258],\n            [115.68747373969863, 45.433181799313616],\n            [114.92629962585804, 45.36351321494761],\n            [114.77255055740493, 45.42086194955204],\n            [114.553184175936, 45.38523068595589],\n            [114.35722882972827, 45.08782752028289],\n            [114.14523443383095, 44.975554172455695],\n            [113.92377600240249, 44.927071744822534],\n            [113.66575650739588, 44.75728362667983],\n            [113.46448801843384, 44.78683798325073],\n            [112.9438000285106, 44.79567108307978],\n            [112.55275272179273, 44.937266337482384],\n            [112.44519478816, 45.072917513428585],\n            [112.0887161164874, 45.06640891355455],\n            [111.97777105434879, 45.069065484931706],\n            [111.930118805271, 45.21474521782668],\n            [111.71636443083631, 45.50358094080834],\n            [111.69557675981004, 45.75031000746202],\n            [111.64825658215437, 46.060066230038814],\n            [111.19816697657915, 46.24124439796108],\n            [111.24761241133652, 46.382275130946034],\n            [111.24382679712407, 46.60406563379663],\n            [111.36679284474434, 46.74748728102102],\n            [111.49583579938985, 47.187548329647484],\n            [111.7724845011788, 47.38174369731784],\n            [112.05667122425042, 47.34999766936078],\n            [112.0966858306189, 47.64872912072236],\n            [112.377850703749, 47.7484833759347],\n            [112.66897771954346, 47.8014155606246],\n          ],\n        ],\n      },\n      properties: {\n        shape: 'Polygon',\n        id: 'shape4',\n        color: '#ffff00',\n        buffer: 0,\n        bufferUnit: 'meters',\n      },\n      bbox: [\n        111.19816697657915,\n        44.75728362667983,\n        116.51034672377376,\n        47.8014155606246,\n      ],\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [2.3801982067247183, 10.380487991234242],\n      },\n      properties: {\n        shape: 'Point Radius',\n        id: 'shape5',\n        color: '#a52a2a',\n        buffer: 86.22498402406272,\n        bufferUnit: 'kilometers',\n      },\n      bbox: [\n        1.591858105761676,\n        9.605049151287616,\n        3.1685383076877605,\n        11.155926831180869,\n      ],\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-77.03353449715513, 38.88832624652902],\n      },\n      properties: {\n        id: 'shape6',\n        color: '#0000ff',\n        shape: 'Point',\n        buffer: 0,\n        bufferUnit: 'meters',\n      },\n      bbox: [\n        -77.03353449715513,\n        38.88832624652902,\n        -77.03353449715513,\n        38.88832624652902,\n      ],\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [37.631401597084825, 55.74584388706087],\n      },\n      properties: {\n        shape: 'Point',\n        id: 'shape7',\n        color: '#ff0000',\n        buffer: 0,\n        bufferUnit: 'meters',\n      },\n      bbox: [\n        37.631401597084825,\n        55.74584388706087,\n        37.631401597084825,\n        55.74584388706087,\n      ],\n    },\n  ]\n  const shapeIndex = select(\n    'Pan To',\n    ['none', '1', '2', '3', '4', '5', '6', '7'],\n    'none'\n  )\n  const viewport = shapeIndex === 'none' ? null : geos[shapeIndex - 1].bbox\n  return (\n    <WorldMap\n      projection={PROJECTION}\n      style={MAP_STYLE}\n      geos={geos}\n      viewport={viewport}\n      coordinateType={coordinates.LAT_LON}\n      maxZoom={20}\n      minZoom={1.5}\n      zoom={2}\n      height=\"500px\"\n    />\n  )\n})\n"],"mappingsnRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;;;AACA;AACA;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AACA;AACA;AAFA;AACA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AACA;AAeA;AAAA;AAAA;AACA;AACA;AAFA;AACA;AAcA;AAEA;AAFA;AACA;AAOA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AAEA;AAAA;AARA;AACA;AAUA;AAEA;AAFA;AACA;AASA;AACA;AAWA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;;AAJA;;;;;;;;;;;;;AAtFA;AAaA;AAgBA;AAeA;AAQA;AAWA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvFA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AATA;AACA;AAWA;AACA;AADA;AACA;AAGA;AACA;AACA;AAFA;;;;;;;;;;AAnBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAC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;AAcA;AACA;AASA;AAVA;AAAA;AACA;AAaA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAJA;AAMA;AALA;AALA;AACA;AAcA;AAAA;AAEA;AAFA;AAAA;AAAA;AACA;AAMA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAJA;AAMA;AALA;AALA;AACA;AAcA;AACA;AADA;AAEA;AAFA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAJA;AAMA;AALA;AATA;;;;;;;;;;AA3EA;AAGA;AAqBA;AA6BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;AAFA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AADA;AAGA;AAEA;AARA;AACA;AASA;AACA;AAEA;AACA;AAFA;AACA;AAIA;AALA;AAKA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AASA;AAGA;AADA;AApBA;AASA;AARA;AA2BA;AACA;AAFA;AACA;AAIA;AALA;AAKA;AAJA;AAWA;AAAA;AAEA;AACA;AADA;AAFA;AADA;AAvCA;AACA;AAgDA;AACA;AACA;AADA;AACA;AAGA;AAJA;AAIA;AAGA;AAAA;AAEA;AACA;AADA;AAFA;AAPA;AADA;AACA;AAeA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AADA;AACA;AAUA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAJA;AAYA;AACA;AACA;AACA;AADA;AAFA;AADA;AAUA;AAAA;AAEA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AAAA;AAvCA;AAsBA;AAtBA;AACA;AA2CA;AACA;AACA;AADA;AAGA;AADA;AAKA;AAEA;AAVA;AACA;AAWA;AAAA;;;;;;;;;;AA5JA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAUA;AAiDA;AAgBA;AAWA;AA4CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpJA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAFA;AAAA;AAAA;AACA;AAGA;AACA;AAGA;AACA;AADA;AACA;AAGA;AACA;AADA;AACA;AAEA;AAAA;AAfA;AACA;AAiBA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AACA;;AACA;AAAA;;AAGA;AAEA;AAFA;AAIA;;AACA;;AAEA;AAEA;AAFA;;AAIA;;AAEA;AAhBA;AAgBA;AAFA;AANA;AARA;AAFA;AACA;AA0BA;AAAA;AAAA;AAAA;AACA;AAMA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AAIA;AACA;AALA;AAOA;AACA;AATA;AAEA;AAUA;AAAA;AAAA;AAIA;AACA;AALA;AAOA;AACA;AApBA;AAaA;AAYA;AAAA;AAAA;AAIA;AACA;AALA;AAOA;AACA;AAVA;AAGA;AAYA;AAEA;AACA;AA1CA;AAwCA;AAhDA;AACA;AAyDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AACA;AAPA;AACA;AADA;AACA;AA2BA;;;;;;;;;;;AAzIA;AAkBA;AA2BA;AA0DA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrHA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAFA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAGA;AACA;AADA;AACA;AAEA;AAAA;AAXA;AACA;AAaA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AADA;AACA;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;;AAEA;AADA;;AAGA;AAEA;AAFA;AAFA;AAOA;AADA;;AAGA;;AAEA;AAFA;AAEA;;AAIA;;AAEA;AAlBA;AAkBA;AAFA;AANA;AAAA;AAZA;AACA;AA4BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAGA;AACA;AAEA;AAIA;AACA;AACA;AACA;AADA;AAGA;AAhBA;AAEA;AAmBA;AAAA;AAAA;AAIA;AACA;AALA;AAOA;AACA;AAVA;AAGA;AAYA;AAEA;AACA;AAtCA;AAoCA;AAxCA;AACA;AAiDA;;;;;;;;;;;AAhGA;AAcA;AAGA;AA6BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACzCA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3EA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAIA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC7HA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAMA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AAWA;AACA;AACA;AAEA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAGA;AAQA;AAGA;AACA;AACA;AAOA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AAMA;AAaA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAGA;AAGA;AACA;AAEA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAKA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAGA;AACA;AAQA;AAAA;AACA;AAEA;AAGA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC1IA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpHA;AACA;AACA;AAMA;AACA;AAIA;AACA;AAGA;AAIA;AACA;AAIA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAOA;AAEA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxIA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AAEA;AAKA;AACA;AAEA;AAQA;AAGA;AACA;AACA;AAMA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AAIA;AACA;AACA;AACA;AACA;AAKA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC7HA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AAGA;AAEA;AACA;AAKA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAGA;AACA;AACA;AAEA;AAKA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACpDA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAWA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AAOA;AACA;AAAA;AAzBA;AACA;AA8BA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;AASA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAAA;AAbA;AACA;AA8BA;AAAA;AACA;AAGA;AAJA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AAIA;AADA;AAGA;AAPA;AAVA;AACA;AAuBA;AAAA;AAAA;AACA;AAGA;AAEA;AADA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AALA;AANA;AAHA;AACA;AAqBA;;;;;;;;;;;AAtHA;AA+BA;AA+BA;AAUA;AAwBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/GA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAMA;AACA;;;;;;;;;;;;;;;;AANA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAAA;AAEA;AACA;AAFA;AApBA;;;;;;;;;;AAPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;;;;;;;;;AACA;;;;;;;;;AACA;;;;;;;;;AACA;;;;;;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;ACdA;AACA;;;;;;;;;;AACA;AACA;AAEA;AAAA;AAFA;AAIA;AAEA;AAPA;AACA;AADA;AAEA;;;AAOA;;;;;;;;;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;;;;;;;;;;AACA;AACA;AADA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAJA;AACA;AAKA;AAAA;AACA;AAAA;AACA;AAEA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AAFA;AAhBA;AACA;AAuBA;AA3BA;AACA;AADA;AACA;AA6BA;;;;;;;;;;;AA9BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;;AAAA;AAEA;AAFA;AAOA;AAtBA;;AADA;AACA;AA0BA;AACA;AACA;AACA;AACA;AACA;AAEA;AANA;;AADA;AACA;AAUA;AACA;AACA;AAGA;AACA;;AAAA;AACA;AAFA;AALA;AACA;AAUA;AACA;AAoBA;AACA;AACA;AACA;AAAA;AAEA;AAFA;AAHA;AAAA;AAAA;AACA;AAOA;AAEA;AAFA;AACA;AAMA;AAEA;AAFA;AACA;AAMA;AAEA;AAFA;AACA;AAMA;;AAEA;AAAA;AAGA;AACA;AAJA;AAFA;AACA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AADA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAEA;AAEA;AAFA;AAJA;AAEA;AACA;AAHA;AAEA;AAFA;AACA;AASA;AAVA;AAAA;AACA;AADA;AAAA;AAYA;AACA;AAbA;AACA;AADA;AAAA;AAAA;;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AATA;AACA;AADA;AAAA;AAAA;;AAAA;AAAA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;AA6BA;AACA;AAFA;AAAA;AAAA;AAAA;AAtEA;AACA;AADA;AACA;;;AA8EA;;;;;;;;;;;AArJA;AA2BA;AAWA;AAWA;AAqBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAJA;AACA;AADA;AACA;AASA;AAAA;;;;;;;;;;;;;;;AAZA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AAAA;AACA;;;;;;;;;;AACA;AACA;;AACA;AAEA;AAFA;AAFA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AADA;AAGA;AAHA;AACA;AAKA;AAEA;AAZA;AACA;AAeA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AALA;AACA;AAQA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AALA;AACA;;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnDA;AACA;AADA;AACA;AA4DA;;;;;;;;;;;AA7DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAIA;AALA;AACA;AADA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AACA;AAHA;AACA;AADA;AACA;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AADA;AACA;AADA;AAGA;AAEA;AAVA;AACA;AAWA;AAfA;AACA;AADA;AACA;;;AAiBA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AAKA;AACA;AAEA;AAEA;AACA;AADA;AAEA;AAEA;AACA;AADA;AAVA;AAaA;AAAA;AACA;AAEA;AArBA;AACA;AADA;AAGA;;;AAqBA;AACA;AACA;AAAA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AANA;AAAA;AAAA;AASA;AACA;AADA;AACA;AAEA;AAEA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAFA;AAQA;AACA;AACA;AACA;AACA;AAEA;AANA;AAOA;AACA;AACA;AAEA;AAJA;AACA;AAMA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AADA;AADA;AALA;AACA;AAWA;AACA;AACA;AACA;AACA;AADA;AAFA;AADA;AACA;AAQA;AACA;AACA;AACA;AACA;AAFA;AAKA;AAjEA;AACA;AAmEA;AAEA;AAAA;AACA;AACA;AACA;AANA;AA5EA;AACA;AADA;AAGA;;;;;;;;;;;;AA7DA;AAEA;AAQA;AAMA;AAkBA;AAwBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClEA;AACA;;;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;;AAGA;AAAA;AADA;AACA;AAKA;;AAGA;AAAA;AADA;AACA;AAKA;AAAA;AAlBA;AAkBA;AARA;AARA;AAFA;AACA;AA6BA;AAAA;AAAA;AACA;AAIA;AAEA;AAAA;AAEA;AAAA;AAGA;AAFA;AA3CA;;;;;;;;;;A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bA;AACA;AAmBA;AAEA;AAFA;AAOA;AAEA;AAFA;AACA;AASA;AACA;AAQA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAGA;AACA;AADA;AACA;AACA;AAXA;AACA;AADA;AACA;;;AAaA;AACA;AACA;;;;AADA;;;;AAIA;;;;;;;;;;AAvMA;AAwCA;AAYA;AAkCA;AAOA;AAiBA;AAwBA;AAoBA;AAOA;AAUA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChMA;AACA;;;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;;;;;;;;;;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;;;AACA;AACA;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAGA;AACA;AADA;AACA;AAGA;AACA;AADA;AATA;AACA;AAWA;AACA;AAQA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AASA;AACA;AAEA;AAbA;AALA;AACA;AAkCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AAAA;AAGA;AAAA;AAHA;AAIA;AACA;AALA;AACA;AAQA;AAZA;AAHA;AACA;AAwBA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAGA;AAGA;AADA;AAEA;AARA;AAGA;AANA;AACA;AADA;AACA;;;AAgBA;AACA;AACA;AAIA;AANA;AACA;AADA;AACA;;;AAQA;AACA;AAOA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAGA;AACA;AADA;AAPA;AACA;AADA;AACA;;;AASA;AACA;AACA;AACA;AACA;AACA;AAHA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A;AAIA;AAJA;AAAA;AACA;AAUA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AANA;AAEA;AALA;AACA;AADA;AACA;AAcA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AANA;AAGA;AANA;AACA;AADA;AACA;AAeA;AACA;AADA;AACA;AAIA;AALA;AAKA;AACA;AAMA;AACA;AACA;AAAA;AAFA;AAAA;AAAA;AACA;AAEA;AACA;AADA;AACA;AAKA;AAAA;AAEA;AACA;AACA;AALA;AAEA;AAVA;AACA;AADA;AACA;AAkBA;AAAA;AAAA;AACA;AACA;AADA;AAEA;AAFA;AAGA;AAHA;AACA;AAOA;AACA;AACA;AACA;AAFA;AADA;;;;;;;;;;AArFA;AAGA;AAWA;AAeA;AAgBA;AAYA;AAmBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;AACA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AADA;AACA;AAGA;AACA;AADA;AACA;AAGA;;AACA;AAAA;AADA;AACA;;AAKA;AAAA;AANA;AAMA;;AAKA;AAAA;AAXA;AAWA;AAXA;AACA;AAkBA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AAAA;AAAA;AAIA;AAJA;AACA;AAOA;AACA;AAEA;AAAA;AAAA;AAtBA;AA7BA;AACA;AADA;AACA;AA8DA;;AAEA;;AAGA;AAAA;AALA;AAKA;AAHA;AAFA;AACA;AAcA;AAAA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AADA;AACA;AAAA;AAHA;AACA;AAeA;AAAA;AACA;AAEA;AACA;AADA;AAAA;AACA;AAEA;AACA;AADA;AACA;AAIA;AAXA;AACA;AADA;AAIA;AAaA;AACA;AADA;AAEA;A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","sourceRoot":""}